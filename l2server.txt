0x006DC1F0 void CMiniGameAgitPlayerEntry::Banish(unsigned int,const class std::xvectorclass FVector,class std::xallocatorclass FVector &,const class std::xvectorclass FVector,class std::xallocatorclass FVector &)
0x0084CFC8 bool CSkillEffect_p_physical_defence_by_material::CheckPumpCondition(class CCreature *)
0x0065ECF0 void SetPledgeAnnounceHtmlHandler::BuildHtmlInternal()
0x00766ADC void COlympiadField::StatusFinishMatch(void)
0x0040D6B4 void CAgitHTML::AgitBidRequest(int,__int64)
0x005884F4 void CDB::WithdrawPet(class User*, class CItem *)
0x0087C05C bool CTransform::_SetCommonData(class User *)
0x0084249C bool CSkillEffect_p_target_me::PumpEnd(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpEndType) const
0x004BC348 bool BuilderCmd_SiegeDefenceCount(class CSocket*, class User *, wchar_t *)
0x0057C8AC bool CCursedWeaponMgr::OnDropByUser(class User*, class CItem *)
0x0092171C bool RequestCastleSiegeDefenderListPacket(class CSocket*, const unsigned char *)
0x0048DCAC bool BuilderCmd_announce2(class CSocket*, class User *, wchar_t *)
0x007AED30 void CNormalRidingInfo::Init(void)
0x00830AC8 bool CSkillOperateCondition_can_use_in_battlefield::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x0062E16C void CFortressSiege::SetAllBarracksCaptured(void)
0x00734948 bool NpcShowScreenMessage(class NpcSocket*, const unsigned char *)
0x00728EF4 void CNPC::EnterWorld(bool,int,int,unsigned int)
0x0062262C void CFishingController::SetNoEndingAction(void)
0x007C78AC unsigned int CPledge::GetMemberDbId(wchar_t *)
0x0047B7C0 bool BuilderCmd_reload(class CSocket*, class User*, wchar_t *)
0x00455870 void CAuctionAgit::ReplyDoAuction(int,int,__int64,int)
0x00945A6C bool HtmlCmdDepositCastle(class CUserSocket *, class User*, const wchar_t*, const wchar_t *)
0x00584960 void CDB::RequestSetAllianceInfo(unsigned int,unsigned int,unsigned int)
0x007136EC void `anonymous-namespace::HolyThingSkill(class CCreature*, class CSmartID,int,int)
0x007BD1C4 CPetitionCli::LeaveMessage(int nPetitionId, WCHAR * pwsMsg)
0x0075BE6C void CContributeData::ArrangeMPCCContribute(class std::xmapclass CMultiPartyCommandChannel*, double,struct std::lessclass CMultiPartyCommandChannel*, class std::xallocatorstruct std::pairclass CMultiPartyCommandChannel* const,double  &,class CMultiPartyCommandChannel*, double)
0x00954798 class CVehicle *__cdecl CVehicle::GetObjectW(unsigned int)
0x006EBF60 bool MonRaceHTML(class CSocket*, const wchar_t *)
0x00889C74 bool SocialClassNS::IsMasterOrNobless(class User *)
0x004A02F4 bool BuilderCmd_UsePCCafeCoupon(class CSocket*, class User*, wchar_t *)
0x007ACE04 bool CPet::DestroyPet(class User*, class CEtcItem *)
0x00910534 bool MoveToLocationAirShipPacket(class CSocket*, const unsigned char *)
0x00861BBC void CStaticObject::Delete(void)
0x0083B2E8 bool CSkillEffect_p_disarm::PumpStart(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpStartType) const
0x0075A5A8 void CGeneralObject::OnCreate(void)
0x007CEDD0 class CSubPledge *__cdecl CPledge::GetSubPledge(enum PledgeType)
0x0058DA04 void CDB::RequestLoadAllManor(int,int,char *)
0x008FB868 bool User::SummonAgathion(int,int)
0x00417DCC bool CAirShip::IsEnemyTo(class CCreature *)
0x00915984 RequestBrProductInfo()
0x0083DB0C bool CSkillEffect_p_set_collected::CheckPumpCondition(class CCreature *)
0x009246DC void CUserSocket::BindUser(class User *)
0x00584400 void CDB::SetIntervalAnnounce(class CUserSocket*, int,int,wchar_t *)
0x00475FE8 CShopServer::ReadUnlock()
0x0067F8D4 void CInstantZoneManager::AddInzonePartyInfo(int,int)
0x009006B4 bool CBasicActionHandler_PRIVATE_STORE::Handle(class User*, int,bool,bool,int)
0x006101C4 void CEventMatch::Disappear(void)
0x00410364 void CAgitHTML::AddStringMap(wchar_t*, wchar_t *)
0x008A2798 bool User::OnValidateLocationPacket(int,int,int,int,int)
0x004525C8 void CAuctionHtmlCommandHandler::Handle(class CNPC*, class User*, const wchar_t *)
0x00424A64 bool CAirShipManager::_OnLoadAirShip(unsigned int,int,int,unsigned int,int)
0x00914D50 bool CannotAirShipMoveAnymorePacket(class CSocket*, const unsigned char *)
0x006D6244 void CMiniGameAgit::BroadcastToSelectedPledgeMaster(const char*, ...)
0x007BB64C bool Exist(const wchar_t *id)
0x0058A72C void CDB::RequestLoadLastTaxChange(void)
0x0090F3E0 bool GetBossRecord(class CSocket*, const unsigned char *)
0x0041C768 wchar_t *__cdecl CAirShipForFree::GetOwnerName(void)
0x00920FFC bool PrivateStoreBuySetMSG(class CSocket*, const unsigned char *)
0x007D7390 void CPledge::SendDominionChannelSet(bool)
0x005988DC void CDB::RequestSaveResidenceStatus(class CResidence *)
0x004853BC bool BuilderCmd_AddGamePoint(class CSocket*, class User*, wchar_t *)
0x0057C32C void CCursedWeaponMgr::SendExistingCursedWeapon(class CUserSocket *)
0x00579F04 enum CW_DELETE_REASON CCursedWeapon::TimerJob(int)
0x00890384 bool User::CanUseDice(void)
0x0058E480 void CDB::RequestCreateSubJobForNpc(class User*, int,int,int,int)
0x004FD970 void CCleft::_OnCombatStart::Do(class CCleftMemberInfo &)
0x009663AC void CThreadLocalWorldMap21000,3000,8::Push(int,const class FVector &,class CObject *)
0x00740610 bool NpcGiveContribution(class NpcSocket*, const unsigned char *)
0x0087FC38 void CWorldTrap::ReportOrt(char *caller, int line, int nWorkType)
0x0092889C bool RequestRecipeBookOpen(class CSocket*, const unsigned char *)
0x0081121C bool CContainer::PopVehicle(class CVehicle *)
0x0057E814 void CDB::CloseAuthSocket(void)
0x00610760 const wchar_t *__cdecl CEventMatch::GetTeamName(int)
0x00572A24 void CCubic::TimeSkillDelayDel(class User &,struct CubicActivationInfo &,const int)
0x0080ABDC void CSerializedDamageMessage::OnHandle(class CCreature *)
0x0070D2E0 bool CMoveAction::OnTick(void)
0x00410640 void CAgitHTML::BidderList(int,int,int)
0x00586D8C void CDB::RequestWareHouseItemList(unsigned int,class User*, int) const
0x0080AEE4 void Server::Run(int port, CSocket* (*anAllocator)(SOCKET s), bool aRestrict, int nReader, int nWorker)
0x0082F364 bool CSkillOperateCondition_op_change_weapon::CanUse(class CCreature *, const class CSkillInfo*, class CObject *)
0x00780EB8 void CParty::Accept(class CPartyMemberVisitor &)
0x008895FC bool SocialClassNS::Level1(class User *)
0x0091C998 bool CUserSocket::TradeAddItemsPacket(class CSocket*, const unsigned char *)
0x0091FED4 bool PrivateStoreQuit(class CSocket *, const unsigned char *)
0x00445FD8 bool AtomicEventRide::Do(void)
0x00801124 void CResidence::IsInAllAuctions(int,int &,int &,int &)
0x00836920 bool CSkillEffect_i_dispel_all::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x008D70C4 void User::QuitRecipeStore(void)
0x007C5C48 void CPledge::InitSiegeKillDeathCount(void)
0x00912218 RequestBrGamePoint()
0x0074E130 bool NpcInstantTeleportInMyTerritory(class NpcSocket *, const unsigned char *)
0x004C6474 bool BuilderCmd_FakeItem(class CSocket*, class User*, wchar_t *)
0x0055B23C void CCreature::GatherNeighborChargeTarget(int,int,class std::xvectorclass CSafePointer2class CCreature,class std::xallocatorclass CSafePointer2class CCreature  &,class std::xvectordouble,class std::xallocatordouble &,int,int,int,enum SkillAffectObjectTypeEnum,class CCreature*, class CCreature *)
0x004D4494 bool BuilderCmd_cancelgmpeti(class CSocket*, class User*, wchar_t *)
0x004D9FF0 bool BuilderCmd_blockuser(class CSocket*, class User *, wchar_t *)
0x0046A744 void CBossRecordList::AddBossRecord(class CBossRecord *)
0x0092EB3C void CUserSocket::OnRead(void)
0x0070B61C void CMoveToTargetAction::ComputeDistance()
0x007F5DC0 bool CPVPMatchSystem::StartMatch(unsigned int)
0x007C7B84 bool CPledge::IsPledgeTypeMember(wchar_t*, enum PledgeType)
0x007C7778 void CPledge::SetNickName(unsigned int,wchar_t *)
0x00656174 void CHeroSystem::SendHeroAchievements(class CUserSocket*, int,int)
0x008AE8C8 void BroadcastToAllUser(const char*, ...)
0x00773D10 bool COlympiadEntry::AddEntry(class User*, enum GameRuleType)
0x00585B78 void CDB::RequestApproveBattle(class User*, unsigned int,const wchar_t *)
0x0049B0AC bool BuilderCmd_declare_truce2(class CSocket*, class User*, wchar_t *)
0x0046874C bool CBlockUpsetManager::RemoveBlockUpsetWaitingPlayer(int,int)
0x008346AC bool CSkillEffect_i_hp_per_max::InstantEffect(class CCreature &,double)
0x007A3388 bool CPathNodeWorld::FindPathNodeTest(const class FVector &)
0x004DAC28 bool BuilderCmd_reset_alliance_name(class CSocket*, class User*, wchar_t *)
0x00470714 void CBotReportAgent::TimerExpired(int)
0x0047D13C bool BuilderCmd_get_petition_disable_time(class CSocket*, class User *, wchar_t *)
0x00885868 void CUndergroundColosseum::PostEndMatch(void)
0x006EE9E4 class std::_Vector_iteratorunsigned int,class std::xallocatorunsigned int CMultiPartyCommandChannel::_Find(class CParty *)
0x00421300 void CAirShipForRegular::OnEnterWorld(void)
0x0087CCA4 bool CTransform::CanTransform(class User *)
0x004A1360 bool BuilderCmd::XMasEvent(class CSocket*, class User*, wchar_t *)
0x00598AB4 void CDB::RequestPickItem(class User*, class CItem *) const
0x00441A9C int __cdecl AtomicBuyAirShip::Assemble(char *, int)
0x00441CD4 int __cdecl AtomicGetOnAirShip::Assemble(char*, int)
0x004415FC int __cdecl AtomicManipulatePVPPointWithItem::Assemble(char*, int)
0x00441864 int __cdecl AtomicSummonAirShip::Assemble(char*, int)
0x0058A184 void CDB::RequestLoadAgitBid(int,int)
0x00796DE8 bool CPartyMatchingWaitingRoom::SetNonInvitable(class User *)
0x005F8710 void CDoor::DoDoorAction(enum DoorActionTypeEnum)
0x0042E4D4 void CAirShipForRegular::_GetOff(class User *)
0x007EC3FC void CPremiumService::SendRequestDeleteItem(int)
0x008112D4 bool CContainer::PushAirShip(class CAirShip *)
0x007B0B40 void CUserRidingInfo::MakeLog(wchar_t*, int,class User *)
0x007FA47C bool CRecipeInfo::MakeProduct(class User*, bool)
0x00907D34 void User::SendPledgeStatusChanged(void)
0x0053B5C4 CCreature::ResetNeighbor()
0x0094934C bool HtmlCmdTeleport(class CUserSocket*, class User*, const wchar_t*, const wchar_t *)
0x005096B8 void CIOSocketExclass CIOBufferEx16384 ::__async_AsyncWrite(void *)
0x0049C3B8 bool BuilderCmd_camera(class CSocket*, class User*, wchar_t *)
0x0093F2F8 bool CharacterSelectPacket(class CSocket*, const unsigned char *)
0x008B4C54 void User::VoteDayElapse(void)
0x0071E3F0 bool CNPC::OnNpcDispel(int,enum AbnormalStatusSlotType)
0x0041EA9C const struct AirShipPathNode &__cdecl CAirShipConstRegular::GetNextNode(int &)
0x0057DDE4 void CDB::SendAuthConnected(void)
0x0089A830 void User::QuitPrivateStore(void)
0x0053A064 void CCreature::ValidateMAttackPenaltyByCrystal(void)
0x0095D6B4 void CWareHouseDeposit::Request(const unsigned char *)
0x005F4A6C void CDominion::SetVisibleStaticObjects(void)
0x005FE74C void CDuelManager::CancelDuel(class User*, int)
0x0083BAF8 bool CSkillEffect_p_defence_attribute::Pump(class CCreature*, const class CSkillInfo *, int)
0x0047E998 bool BuilderCmd_ssqstatus(class CSocket*, class User *, wchar_t *)
0x0084494C bool CSkillEffect_i_call_pc::Instant(class CCreature *, class CObject *, const class CSkillInfo*, class CSkillAction2*, double)
0x00621078 void CFieldCycleSystem::SetPointLock(int,int,int)
0x0047AFB4 bool BuilderCmd_servername(class CSocket*, class User*, wchar_t *)
0x00440C38 const unsigned char *__cdecl AtomicCreateAcademy::Disassemble(const unsigned char *)
0x008014B4 void CResidence::SummonMercenary(class FVector,struct ResidenceGuardData *)
0x00583928 void CDB::RequestPartyTelBookMark(class User*, class User*, wchar_t *)
0x00924BC0 bool DummyPacket(class CSocket*, const unsigned char *)
0x00971B10 void CWorld::PickAndDeleteItem(class CItem *)
0x00881050 void CPCTrap::OnDetected(class CCreature *)
0x005C0720 bool ReplyDeletePet(class CDBSocket *, const unsigned char *)
0x0058CF90 void CDB::RequestCreateMacro(class User*, int,const char *)
0x006D9AEC void CMiniGameAgitNpcFuncHandler::UnregisterPledge(void)
0x005850E0 void CDB::RequestLoadAllPledgeWar(void)
0x008357E4 bool CSkillEffect_i_soul_shot::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2 *, double)
0x00450AB8 void CAuctionNPC::Delete(void)
0x0077412C bool COlympiadEntry::RemoveEntry(class User *)
0x0049F868 bool BuilderCmd_set_max_channel(class CSocket*, class User*, wchar_t *)
0x0085412C bool CSkillOperateCondition_op_check_class::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x0071BBFC void CNPC::UnequipWeapon(void)
0x0080F3C8 class CContainer *__cdecl CContainerDB::AllocVehicleContainer(int)
0x006DE62C void CMonRaceDB::SetTrackBegin(int,int,int,int)
0x005FC3BC void CPartyDuel::LeaveDuelZone(void)
0x0068FC6C void CTLPipeBaseunsigned int,1000,8::Read(class CTLPipeBaseunsigned int,1000,8::CReadCallback *)
0x008AB200 void User::Say(wchar_t *)
0x00614A80 void CEventMatch::UseSkill(class User*, const class std::xvectorclass CSkillInfo*, class std::xallocatorclass CSkillInfo* &)
0x007FCCE8 void CResidence::OpenObserver(class User *)
0x0076EDCC bool COlympiadTeam::IsActive(void)
0x0093A9BC bool RestartPacket(class CSocket*, const unsigned char *)
0x0071B964 void CNPC::_OnAbnormalStatusChanged(const class CSkillInfo &,class CCreature *, enum SkillPumpStartType,bool)
0x0062C180 void CFortressSiege::SetDefender(bool)
0x00659460 void SetPledgeAnnounceHtmlHandler::DisassemblePacket()
0x00757EE8 void CObject::Set(enum ObjectFieldType,class std::xvectorint,class std::xallocatorint *)
0x00452F48 void CAuction::TimerExpired(int)
0x00842C44 bool CSkillEffect_p_crystal_grade_modify::PumpEnd(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpEndType) const
0x006ACF98 void CThreadLocalWorldMap2100000,50000,8::CTL_Map2::Remove(int)
0x00856D08 bool CSkillOperateCondition_op_check_residence::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x0069DAC0 void CSetItem::SetSkill(enum ObjectFieldType,wchar_t *)
0x004A9C3C bool BuilderCmd::set_dominion_end(class CSocket*, class User *, wchar_t *)
0x0060F638 inline bool GenericFactory::Register(const IndentifierType &id, ProductCreator creator)
0x006B543C void CEventL2day::TimerExpired(int)
0x00776EE8 void COwnThing::SetOwningResidenceID(int)
0x007D374C bool CPledge::GetPledgeSkillLevel(unsigned int,int &)
0x007838C8 void CParty::DismissByWithdraw(class User*, bool)
0x005EAC20 void CDominion::SetHideNameItemName(wchar_t *)
0x007DA160 void CPledge::UpdateSubPledgeMaster(enum PledgeType,unsigned int)
0x004987D8 bool BuilderCmd_expel_from_castle(class CSocket*, class User *, wchar_t *)
0x0091E3A4 bool IconAction(class CSocket*, const unsigned char *)
0x006FCB8C void `anonymous-namespace::ActivateVariationItemSkill(const class CSkillInfo *, double,class CCreature &,class CObject &)
0x00979464 bool CWorld::PutItem(class CItem*, class FVector,class CCreature *)
0x00809A04 void CSerializedOnInfectedSkillByMessage::Clear(void)
0x00900ED4 bool CBasicActionHandler_SUMMON_ACTION::Handle(class User*, int,bool,bool,int)
0x006DF4DC bool CMonRacePacket::DelMonRaceTicket(int,int,int,int,int,__int64)
0x005615A0 void CCreature::DisableSetItemSkill(void)
0x00518A38 void CControlTowerDB::AddControlTower(const wchar_t*, class CControlTower *)
0x0049B484 bool BuilderCmd_AcceptEscapeCommand(class CSocket*, class User*, wchar_t *)
0x00682E7C bool CInstantZone::EnterZoneWithCheck(class User*, enum InZoneEnterType,struct InstantZoneEnterFailInfo &)
0x00583E30 void CDB::RequestGetPunish(unsigned int)
0x004A16AC bool BuilderCmd_view_pledgewar_list(class CSocket*, class User*, wchar_t *)
0x009621F0 void CTLPipeBasestruct CTL_WorldMapNode2,112500,8::CThreadPipe::Write(const struct CTL_WorldMapNode2 &)
0x0085D80C bool SSQSystem::OnCastleSiegeStart(class CCastle *)
0x008D03B8 bool User::IsMakeAttackerChao(class CCreature *)
0x0062BD08 void CFortress::SetFacilityLevel(int,int)
0x0046BC9C bool CBotChecker::CheckImpl_1(class User *)
0x006B1488 void LoadData(void)
0x0062E88C bool CFortressBuilderCmdHandler::BuilderCmd_AllBarracksCaptured(class CSocket*, class User*, wchar_t *)
0x004064F4 void CAgit::StartTimer(void)
0x0078688C void CPartyMatchingResponseToAllMember::Respond(class CPartyMatchingResponseComponent &)
0x005B9540 bool ReplySetUserNickname(class CDBSocket*, const unsigned char *)
0x00692958 void CItem::Set(enum ObjectFieldType,int)
0x0040E780 void CAgitHTML::AgitDealer(void)
0x007FAF00 void CReplyChecker::TimerExpired(int id)
0x00581970 void CDB::RequestLoadPledge(const wchar_t *)
0x006280A0 void CFishingEventMgr::TimerExpired(int)
0x0073A00C bool NpcMoveMoneyToResidenceBank(class NpcSocket*, const unsigned char *)
0x0048087C bool BuilderCmd::showpccafeeventsetting(class CSocket*, class User*, wchar_t *)
0x005DE4E0 bool ReplyLoadCastleGuard(class CDBSocket*, const unsigned char *)
0x0082E570 bool CSkillEffectByArmorType::CheckPumpCondition(class CCreature *)
0x005E2EF8 bool ReplyDelPledgeCrestPacket(class CDBSocket*, const unsigned char *)
0x006381C0 void CFortressSiege::DeleteFlag(class User*, class CItem*, bool)
0x0089313C bool User::OnMoveToLocationAirShipPacket(const unsigned char *)
0x0056B3F8 bool CCreature::AttachedAbnormalStatusByChannelling(class CCreature*, class CSkillInfo *)
0x008FA604 int __cdecl User::AgathionSkillDelayShow(void)
0x006D84D8 void CUnreturnedPointKeeper::Add(unsigned int,unsigned int)
0x0058DD5C void CDB::RequestManBookMarkAdd(class User*, wchar_t *, int,int,int)
0x0061F340 void CFieldCycle::Init(int,int,int,int,int)
0x00455240 void CAuctionAgit::ResetAuction(void)
0x00481100 bool BuilderCmd_redsky(class CSocket*, class User*, wchar_t *)
0x00585448 void CDB::RequestModifyAllianceName(unsigned int,wchar_t *)
0x0050E258 BOOL CCommunity::GetBoardList(const unsigned char *packet)
0x0050ECB4 BOOL CCommunity::GetArticleList(int nBoardId, int nBoardType, WCHAR* sBoardName, int nPage, int nPageSize, int nTotPage, const unsigned char *packet , int nPer,int nSearchOption, WCHAR* sSearch , int nCommentPage, int nThreadPage )
0x005125F0 BOOL CCommunity::GetFavorite(int nCount, const unsigned char *packet)
0x0050D964 BOOL CCommunity::WriteForm(int nBoardId, int nBoardType, WCHAR* sBoardName, const unsigned char *packet)
0x0050DA5C BOOL CCommunity::WriteReplyForm(int nBoardId, int nBoardType, WCHAR* sBoardName, const unsigned char *packet)
0x0050DB54 BOOL CCommunity::WriteModifyForm(int nBoardId, int nBoardType, WCHAR * sBoardName, const unsigned char *packet)
0x0050DC4C BOOL CCommunity::GetAnnounce(const unsigned char *packet)
0x005104D0 BOOL CCommunity::GetArticleComment(int nBoardId, int nBoardType, int nBid, int nSearchOption, int nReadOption, int nListPage, WCHAR * sSearch, int nPermission, int nCommentPage, int nThreadPage, int nCommentCount, const unsigned char *packet, int nCount)
0x005111BC BOOL CCommunity::GetArticleThread(int nBoardId, int nBid, const unsigned char *packet)
0x005124A8 BOOL CCommunity::GetSearch(int nBoardId, int nBoardType, int nSearchOption, WCHAR* sSearch, WCHAR * sBoardName, int nPage, int nPageSize, int nTotPage, const unsigned char *packet, int nPer)
0x006E83F0 void CMonRaceHTML::MonRaceBuy14(int,int,int,int)
0x0050107C void CCleft::_SortByPoint(void)
0x006DF178 bool CMonRaceDB::ModOrder(int)
0x006E1178 bool CMonRaceDB::RequestEndRace(void)
0x006DEA64 bool CMonRaceDB::RequestEndRace2(int,double,double,double,double,double,double,double,double,double,double,int,int,double,double)
0x006DE9AC bool CMonRaceDB::RequestEndBuyTicket(void)
0x00631F34 void CFortress::SetContractInfoFromDB(int,int,int)
0x006E0820 bool CMonRaceDB::CalcRunnerSpeed(void)
0x006A9DF8 bool CKillPVPPointChecker::AddGiveCount(class User *)
0x0081DEA4 bool CSkillInfo::ActivateDuraionSkill(class CCreature*, class CObject*, double) const
0x006E31A4 bool CMonRaceDB::EndRace(void)
0x00761DB4 bool CObjectDB::LoadItem(void)
0x004B05CC bool BuilderCmd::inc_bot_count(class CSocket*, class User*, wchar_t *)
0x007234F4 void CNPC::Set(enum ObjectFieldType,class std::xvectordouble,class std::xallocatordouble *)
0x005E7484 void CDBSocketOp::OustPledgeMember(const unsigned char *)
0x0076AADC void COlympiadUser::ChangeObserverField(int)
0x00453904 void CAuctionAgit::LeaveDoAuction(void)
0x00588ADC void CDB::PetGetItem(unsigned int,unsigned int,unsigned int,class CItem *)
0x004E59E8 bool BuilderCmd::bot_block_clear(class CSocket*, class User*, wchar_t *)
0x005A0708 bool ReplyLoadDominionRegistry(class CDBSocket*, const unsigned char *)
0x008A0C2C bool User::ChangeClass(enum ClassType)
0x00844844 bool CSkillEffect_p_fishing_mastery::Pump(class CCreature*, const class CSkillInfo*, int)
0x0091C6C0 bool GetItemPacket(class CSocket*, const unsigned char *)
0x008E05BC bool User::DeleteItemInInventory(int)
0x008F429C void User::CallPCAnswer(long,bool)
0x004AC014 bool BuilderCmd::attack_test1(class CSocket *, class User*, wchar_t *)
0x00630B60 void CFortress::HandleReplyPayFortressRent(int)
0x0061E154 void CFieldCycleSystem::SendFailureInfo(class CSocket *)
0x0046A8CC bool CBossRecordList::SubtractBossPoint(int,int,int)
0x004FB7C4 void CCleft::ShowCleftInfo(class User &)
0x007D1F30 void CPledge::DeleteMember(class User *)
0x00694B5C void CSetItem::Set(enum ObjectFieldType,int)
0x007F0B44 void CPremiumService::RequestDeleteItem(int,const unsigned char *)
0x007FD828 void CResidence::SetNextCropInfo(int,int,int,int,int,__int64,__int64,int)
0x0081F198 void CSkillInfo::ActivateSkillEffects(class CCreature*, class CObject*, enum CSkillInfo::EffectActivateTiming,class CSkillAction2*, double) const
0x0053088C bool CCreature::IsInDuel(void)
0x005D9E08 bool FriendRemoveInfo(class CDBSocket*, const unsigned char *)
0x008E6570 bool User::CheckAndConsumeDuration(int)
0x00543820 void CCreature::BroadcastEmitterSpawn(int,int,int)
0x0069BD14 bool CItemConstInfo::CanEquip(class CCreature*, class CItem *)
0x005C7450 bool ReplyUseRecipeItem(class CDBSocket*, const unsigned char *)
0x00885C6C bool CUndergroundColosseum::RegisterResurrectionTower(unsigned int,unsigned int)
0x005876DC void CDB::PingNetwork(class User *)
0x0077ECA8 void CParty::MemberPositionPacket(void)
0x004F4488 void CCastle::AnnouncingOnTimerExpired(long)
0x0044F9CC void CAuctionNPC::SetAuctionWeekDay(class std::xvectorint,class std::xallocatorint *)
0x006E1828 void CMonRaceDB::SetInitialWin(int,int,int,int)
0x0071D1F0 void CNPC::SetMaster(class User *)
0x004117AC void CAgitHTML::AgitSale2(void)
0x00611078 void CThreadLocalWorldMap2100000,50000,8::BroadcastToNeighbor(int,int,int,class FVector,const char*, ...)
0x008D9A20 bool User::DeleteItemInInventory(int,__int64,class AtomicJob *)
0x006271C0 bool CFishingController::DoReeling(double)
0x00895F6C void User::SetGetbirthdayGiftDate(int,int,int)
0x0072D340 bool NpcServer::Add(unsigned __int64,class CSocket *)
0x00531074 bool CCreature::OnMagicSkillUsePacket(int,bool,bool)
0x0041872C bool CAirShipForFree::CanRefuel(int)
0x007C439C void CPledge::SaveAcquireSubPledgeSkill(enum PledgeType,unsigned int,int)
0x005B2DFC void CDBSocket::OnClose(void)
0x006236A8 class CFishingDistributionInfo *__cdecl CFishingDB::FindDistribution(int) const
0x00634B08 void CFortress::AddFlag(class FVector &)
0x0090FC64 bool RequestDuelAskStart(class CSocket*, const unsigned char *)
0x0045F0D0 bool CBlockUpset::ChangeBlockColor(int,int)
0x0092B9B4 bool GiveItemToPetPacket(class CSocket*, const unsigned char *)
0x006235B0 class CFishingRodInfo *__cdecl CFishingDB::FindFishingRod(int) const
0x00623208 class CFishingPlaceInfo *__cdecl CFishingDB::FindPlace(const class FVector &,int) const
0x00444854 bool AtomicDestroyPet::Do(void)
0x0093B794 bool FriendAddReply(class CSocket*, int)
0x00697CEC void CItem::Delete(void)
0x007AC7A8 void CPet::CheckCategory(void)
0x0085C6C4 bool SSQSystem::ChangeCurrentStatus(enum SSQStatus::type)
0x00594E24 void CDB::RequestResetInZoneRestriction(int)
0x0071B88C void CNPC::OnUseSkillFinished(int,int,int,int)
0x005EEF7C bool CDominion::UnregisterUser(int,bool)
0x006A4784 bool CItemEquipCondition_requiredlevel::CheckPrivate(class CCreature *, class CItem *)
0x00736FB4 bool NpcShowPremiumItemList(class NpcSocket *, const unsigned char *)
0x005948C4 void CDB::RequestConvertItem(class User*, int,int)
0x00919D14 bool User::OnAcceptJoinMPCC(int,int)
0x005FD0A8 bool CDuelManager::StartDuel(class User*, class User *, enum DuelType)
0x00593F24 void CDB::RequestSaveFortressSiegeState(int,int,int,int,bool)
0x0092DD84 void CSocketLimiter::DeleteAllMAC(void)
0x00948444 bool HtmlCmdObserver(class CUserSocket*, class User*, const wchar_t*, const wchar_t *)
0x00495AB4 bool BuilderCmd::set_siege_period(class CSocket*, class User *, wchar_t *)
0x005B34D0 void CUserSocket::SendSystemMessage_Announce(const wchar_t *)
0x005C03E8 bool ReplyCreatePet(class CDBSocket *, const unsigned char *)
0x0066CF98 void AddBlock::ParseParameter()
0x005791A8 bool CCursedWeaponMgr::AddWeapon(int,int,int,int,double,int,const struct CursedWeaponInfo*, int,int)
0x00948194 bool HtmlCmdFriend(class CUserSocket*, class User*, const wchar_t*, const wchar_t *)
0x006C07D4 void CManor::SetMaxSeedCount(int,int)
0x00470544 void CBotReportAgent::Init(void)
0x006C0E04 void CManor::Set(enum ObjectFieldType,wchar_t *)
0x006C06C8 void CManor::SetMaxCropCount(int,int)
0x005A1E84 bool ReplyUpdatePledgeNameValue(class CDBSocket*, const unsigned char *)
0x0059E010 bool CDB::RequestLogin(wchar_t*, int,int,int,int,class CUserSocket *)
0x00599A40 void CDB::CreateUpdateItemsWithPoint(class User*, int,int,int,int,int,char*, class AtomicJob *)
0x0085DE00 void CastlePledgeSnapshot::TimerExpired(int)
0x0043AA20 void CAreaDB::SortInstantArea(void)
0x00914A30 bool ReplyDismissMPCCRoom(class CSocket*, const unsigned char *)
0x00586BAC void CDB::RequestSetNextAgitBattleTime(class CAgit *)
0x00774C30 void COlympiadHtmlCommandHandler::Handle(class CSocket*, const wchar_t *)
0x006FAFA4 void CAttackAction::Set(class CSmartID,class CSmartID,bool)
0x005F6194 void CDominionManager::TimerExpired(int)
0x004C3698 bool BuilderCmd_SetItemDuration(class CSocket*, class User*, wchar_t *)
0x005EDB38 void CDominionSiegeEntry::Clear(void)
0x00587FDC void CDB::CreatePet(int,int,int,int,__int64,int,double,double,int)
0x004062CC void CAgit::InitAgit(void)
0x0057D8B4 bool CCursedWeaponBuilderCmd::KillPoint(class CSocket*, class User*, wchar_t *)
0x00800164 const wchar_t *__cdecl CastleSiegeMusicPlayer::GetMusicName(int)
0x0042C07C void CAirShip::ProcessLanding(class FVector)
0x0047F84C bool BuilderCmd_manorreset(class CSocket*, class User*, wchar_t *)
0x007E51BC void CancelRenamed::ServeInternal(class User *)
0x00433AF8 void CAlliance::InitAlliance(void)
0x0074D960 bool NpcShowTelposList(class NpcSocket*, const unsigned char *)
0x00842D2C bool CSkillEffect_t_hp::Tick(class CObject*, double,unsigned int)
0x0059FAEC bool ReplyLoadAllAuction(class CDBSocket*, const unsigned char *)
0x0066BB18 void SaveMail::ExecuteInternal()
0x0061D668 class std::basic_stringwchar_t,struct std::char_traitswchar_t,class std::allocatorwchar_t CFHTML::MakeHTMLFromStrMap(const wchar_t*, class std::stringmapclass std::basic_stringwchar_t,struct std::char_traitswchar_t,class std::allocatorwchar_t ,class std::basic_stringwchar_t,struct std::char_traitswchar_t,class std::allocatorwchar_t ,struct std::stringlessclass std::basic_stringwchar_t,struct std::char_traitswchar_t,class std::allocatorwchar_t ,class std::xallocatorstruct std::pairclass std::basic_stringwchar_t,struct std::char_traitswchar_t,class std::allocatorwchar_t const ,class std::basic_stringwchar_t,struct std::char_traitswchar_t,class std::allocatorwchar_t   &,unsigned char)
0x00928C3C bool RequestRecipeBookItemInfo(class CSocket*, const unsigned char *)
0x009215B4 bool RequestCastleSiegeAttackerListPacket(class CSocket*, const unsigned char *)
0x005A79AC bool ReplyCreateSubPledge(class CDBSocket*, const unsigned char *)
0x005B09A4 bool ReplyLoadControlTower(class CDBSocket*, const unsigned char *)
0x008D6594 void User::ShowHTML(const wchar_t*, const wchar_t*, unsigned int)
0x0058F6E4 void CDB::LoadTimeAttackInfo(void)
0x00686F04 class CItem *__cdecl CInventory::GetByIndex(int)
0x00407524 void CAgit::OpenAllDoor(void)
0x00718480 void CNoblessSystem::SetUserNoblessData(class User*, int)
0x007EB860 bool IBNewItemDeliveredToAccountNotiPacket(class CPremiumServiceSocket*, const unsigned char *)
0x004FDF04 void CCleft::UserDie(class User*, class User *)
0x00840E3C bool CSkillEffect_p_reflect_dd::PumpEnd(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpEndType) const
0x008773F8 int __cdecl CTrade::GetTradeItemWeight(int)
0x007E9E28 bool IBGetItemsForServerAckPacket(class CPremiumServiceSocket*, const unsigned char *)
0x007F05E0 bool IBDeleteItemsAckPacket(class CPremiumServiceSocket*, const unsigned char *)
0x004929C8 bool BuilderCmd_setarea(class CSocket*, class User*, wchar_t *)
0x007EE080 bool IBBuyItemAckPacket(class CPremiumServiceSocket*, const unsigned char *)
0x007ED630 bool IBAddPointAckPacket(class CPremiumServiceSocket *, const unsigned char *)
0x007A8FD8 void CPCCafeEventMgr::ResetDailyGiveRecord(void)
0x004413C4 int __cdecl AtomicUpdatePVPPoint::Assemble(char*, int)
0x0044118C int __cdecl AtomicDeleteAcquireSkills::Assemble(char*, int)
0x00777B84 void COwnThing::Regenerate(class CDominion*, class FVector)
0x0096D884 bool CWorld::Attack(int,int,struct AttackTargetDataType &,enum AttackType,bool)
0x005FEFDC void CIndividualDuel::ForTeamPlayer(enum DuelTeamType,class CDuelPlayerOperation &)
0x007DEF58 void CPledgeMemberList::Online(class User *)
0x00440778 int __cdecl AtomicCastBuffWithMpConsumption::Assemble(char*, int)
0x004405C4 int __cdecl AtomicCastBuff::Assemble(char*, int)
0x00440444 int __cdecl AtomicSetHero::Assemble(char*, int)
0x004402C4 int __cdecl AtomicSetNobless::Assemble(char *, int)
0x00440F54 int __cdecl AtomicUpdatePCCafePoint::Assemble(char*, int)
0x00440D3C int __cdecl AtomicCreateSubPledge::Assemble(char*, int)
0x006EFDD8 void CMultiPartyCommandChannel::GetAllMemberWhoCanGetExpSp(class std::xvectorclass User*, class std::xallocatorclass User* &,class CCreature *)
0x004408F8 int __cdecl AtomicAquirePledgeSkill::Assemble(char*, int)
0x0069C460 bool CItem::CheckItemEquipCondition(class CCreature *)
0x005A490C bool ReplyPeriodicItemJob(class CDBSocket*, const unsigned char *)
0x0046D608 void CBotChecker::ShowBotUserCheckList(void)
0x0076898C void COlympiadSystem::GetWantedStatus(time_l2_t tSeasonStart, OlympiadStatus &os)
0x007686B8 void COlympiadParam::SetTerm(int nStart, int nBonus1, int nBonus2, int nBonus3, int nBonus4, int nNominate)
0x004B0E6C bool BuilderCmd::reset_bot_restrain(class CSocket*, class User*, wchar_t *)
0x0046AFBC bool CBossRecordList::AddBossPoint(int,int,int)
0x004850A8 bool BuilderCmd::server_setting(class CSocket*, class User*, wchar_t *)
0x007EAE54 bool CPremiumService::Init(void)
0x007C6AB4 void CPledge::SetCastleByDbId(unsigned int)
0x00670730 void ListMail::ParseParameter()
0x00566DB0 bool CCreature::DispelByBuffLevel(int)
0x004771AC void User::SetCrystalGradepBonus(double)
0x0068F8FC void AddLog(char*, ...)
0x004FA1C0 void CCleft::ReadyPlayerToStart(enum BlueRedTeam::Enum,class User &)
0x009188B8 bool ReplyHandOverPartyMaster(class CSocket *, const unsigned char *)
0x0062BEF8 void CFortress::SetSiegeInfoFromDB(int,int,int,bool)
0x004AE8F0 bool BuilderCmd::tel_real_pos(class CSocket *, class User*, wchar_t *)
0x00588EAC void CDB::IncreaseUserPKCount(int)
0x00719A24 bool CNPC::EquipItem(int)
0x0072DD20 bool NpcSetTaxRate(class NpcSocket*, const unsigned char *)
0x0095B8D8 void CWareHouseWithdraw::AddItemId()
0x0084EB40 bool CSkillOperateCondition_op_target_npc::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x007FB95C void CResidence::ReadLock(const wchar_t*, int)
0x008466F4 bool CSkillEffect_i_inform::Instant(class CCreature*, class CObject*, const class CSkillInfo *, class CSkillAction2*, double)
0x0086B9E4 bool CTerritory::IsInsideRough(const class FVector &,bool)
0x0058D098 void CDB::RequestDeleteMacro(class User*, int)
0x00856474 bool CSkillEffect_p_trigger_skill_by_skill::Pump(class CCreature*, const class CSkillInfo*, int)
0x0075488C bool NpcMakerFinished(class NpcSocket*, const unsigned char *)
0x00956098 void CVehicleDB::QuickDeparture(void)
0x0058B83C void CDB::RequestDelMiniGameAgitPledge(unsigned int,class CPledge *)
0x004DA418 bool BuilderCmd_disband2(class CSocket*, class User*, wchar_t *)
0x00843D64 bool CSkillEffect_i_food_for_pet::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x00548254 void CCreature::UseETCItem(class CItem*, __int64,int,bool)
0x0057ADE4 void CCursedWeaponMgr::OnDropByNPC(class CItem *)
0x00757BD8 void CObject::Set(enum ObjectFieldType,wchar_t*, int)
0x00946AB0 bool HtmlCmdWithdrawPledge(class CUserSocket*, class User*, const wchar_t*, const wchar_t *)
0x0083CF3C bool CSkillEffect_p_max_cp::PumpStart(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpStartType) const
0x007A7C84 int CPCCafeEventMgr::GetPCCafeEventRemainHour()
0x0088438C void CUCRecordBoard::OnHandOverPartyMaster(int,class User *)
0x005BA250 bool ReplyLoadBattleCamp(class CDBSocket*, const unsigned char *)
0x00467B64 bool CBlockUpset::_RemoveBlockUpsetWaitingPlayer(int)
0x007DBCC4 void CPledge::LoadSubPledge(const unsigned char *)
0x005D8710 bool DBPacketHandler::ReplyTrade(class CDBSocket*, const unsigned char *)
0x006D9944 void CMiniGameAgitNpcFuncHandler::RegisterPledge(void)
0x0047FE1C bool BuilderCmd_set_nobless(class CSocket*, class User*, wchar_t *)
0x008940E8 double User::WitBonusF(void) const
0x00455D48 bool DummyAuthPacket(class CAuthSocket*, const unsigned char *)
0x00417F3C void CAirShipManager::LoadAirShipFromDB(void)
0x004BBDE8 bool BuilderCmd_del_subpledge_skill(class CSocket*, class User*, wchar_t *)
0x0058E68C void CDB::RequestDeleteSubJob(class User*, int)
0x00533C5C bool CCreature::ValidateTargetOnAction(class CObject *)
0x0059AE90 void CDB::RequestCreateInitItems(unsigned int,int,class CUserSocket *) const
0x00918C70 bool AskJoinMPCC(class CSocket*, const unsigned char *)
0x008B0528 void User::SendPrivateStoreManageList(bool,class CUserSocket *)
0x006D7E40 void CMiniGameAgitRegistPledgeEntry::BuilderCmd_ShowInfo(class CUserSocket *)
0x005E3700 bool ReplyCreateAllianceByNpc(class CDBSocket*, const unsigned char *)
0x004061D4 void CAgit::SetParentCastle(void)
0x00560450 void CCreature::EnterWorld(void)
0x0068F398 void CTLPipeBaseunsigned int,10000,8::CThreadPipe::Read(class CTLPipeBaseunsigned int,10000,8::CReadCallback *)
0x0094CB48 bool HtmlCmdCreatePledge(class CUserSocket*, class User*, const wchar_t*, const wchar_t *)
0x00805230 __cdecl CResidence::CResidence(void)
0x0056C628 void CCreatureController::SetJustUnfrozen(void)
0x00567438 bool CCreature::DispelAllByGM(enum SkillPumpEndType)
0x00477380 enum CrystalType User::CalcCrystalEquipPenalty(void)
0x004B1A0C bool BuilderCmd::cubic_skill_delay_del(class CSocket *, class User*, wchar_t *)
0x005A69B8 static bool LoadPCCafePointPacket(CDBSocket *socket, const unsigned char *packet)
0x0082D1C8 struct L2SkillFunc::MagicAttackerInfo L2SkillFunc::GetMagicAttackerInfo(class CCreature &)
0x008C8CC0 void User::GetAllInZoneRestriction(class std::xmapint,int,struct std::lessint,class std::xallocatorstruct std::pairint const ,int  &)
0x007AC640 void CPet::InitPet(void)
0x0047CBC4 bool BuilderCmd_check_bot(class CSocket*, class User *, wchar_t *)
0x00890554 bool User::DeleteLoginMsg(const unsigned char *)
0x0068F99C int __cdecl Assemble(char*, int,const char*, ...)
0x0043CB00 int __cdecl AtomicDestroyPet::Assemble(char *, int)
0x006940C0 bool CItem::IsTradable(class User*, bool)
0x0062ECF4 void CFortress::SetOwnerInfo(class CPledge *)
0x00561920 bool CCreature::ValidateSetItem(enum SlotType)
0x004B94AC bool BuilderCmd_declare_truce(class CSocket *, class User*, wchar_t *)
0x0088131C void CPCTrap::OnDefuse(class CCreature *)
0x006A91F8 void ItemManipList::Push(int,class ItemManip [])
0x005A2F38 bool ReplyPCCafeCouponCheck(class CDBSocket *, const unsigned char *)
0x0095959C double CVitalityPoint::GetExpAdvantageByLevel(int)
0x0065D38C void CastleInfoHtmlBuilder::SendHtml()
0x00664074 void CastleInfoHtmlBuilder::BuildAgitList()
0x00664E50 void CastleInfoHtmlBuilder::BuildHtmlInternal()
0x00666134 void CastleInfoHtmlBuilder::Show(unsigned int userServerId, int castleId, int userCommLocalCommunityBid)
0x00856918 bool CSkillEffect_p_trigger_skill_by_avoid::Pump(class CCreature*, const class CSkillInfo*, int)
0x00730D4C void CExecutionSerializerclass CCreature,16::AddExecutable(class MemoryObject*, void (__cdecl MemoryObject::* )(struct CExecutionArgumentPad *),class CExecutionArgument *, const wchar_t *)
0x0059272C void CDB::RequestDelCursedWeaponOnlyInDB(int,int)
0x00630FBC bool CFortressDBEventHandler::ReplyPayFortressRent(class CDBSocket*, const unsigned char *)
0x00582934 void CDB::SendDeletedSkill(int,int)
0x0049927C bool BuilderCmd_reset_time(class CSocket*, class User*, wchar_t *)
0x0088C82C void User::SendShortBuffStatusInfo(void)
0x005D0E54 bool ReplyBookMark(class CDBSocket*, const unsigned char *)
0x004C4B4C bool BuilderCmd_spawn_npcs(class CSocket*, class User*, wchar_t *)
0x004B810C bool BuilderCmd_reset_academy_master(class CSocket*, class User*, wchar_t *)
0x004A0D84 bool BuilderCmd_Vtest(class CSocket *, class User*, wchar_t *)
0x0047A89C bool BuilderCmd_startpet(class CSocket*, class User*, wchar_t *)
0x008F330C int __cdecl User::GetSkillLevel(int)
0x008F9D04 int __cdecl User::SaveInfectedSkills(void)
0x0083E2DC bool CSkillEffect_p_hit_at_night::CheckPumpCondition(class CCreature *)
0x0077B070 void CParseHTML::GetTempletFromFile()
0x008DC48C int __cdecl User::DropItemAll(bool)
0x008DC7C4 int __cdecl User::DestroyItemAll(void)
0x008DF230 int __cdecl User::SetRecipeStoreList(const unsigned char *)
0x00571624 void CCreatureController::__async_LostTarget(struct CExecutionArgumentPad *)
0x0083A878 bool CSkillEffect_i_convert_item::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x007F191C void CPVPMatchSystem::CPVPPointTimeBlock::SetWeekDays(int [])
0x008D9E4C int __cdecl User::GetEquipDurationItemCount(void)
0x008DA96C int __cdecl User::GetEquipedLureId(void)
0x0085F3C8 bool SSQSystem::OnSealEffectStart(void)
0x0089A324 void User::DieByCursedUser(class User *)
0x00434EF4 void CAlliance::DeleteMemberPledge(unsigned int)
0x00692460 void CIOCriticalSection::ReadLock(const wchar_t*, int)
0x005805A0 void CDB::RequestUpgradeSubPledgeMemberCount(class CNPC*, class User *, class CPledge *, enum PledgeType,int)
0x00659610 void CastleInfoHtmlBuilder::DisassemblePacket()
0x0061EB3C void CFieldCycle::AssembleMapInfoPacket(class CPacketHelperEx16384 &)
0x00536820 bool CCreature::ValidatePAvoidRate(void)
0x00641738 void CGameEventMgr::SetEventDropTime(bool)
0x00446320 bool AtomicDeleteDepositedSSQItem::Do(void)
0x004E6EB0 bool BuilderCmd::cleft(class CSocket*, class User*, wchar_t *)
0x0065180C void CHenna::Set(enum ObjectFieldType,wchar_t *)
0x00629920 bool CFishingEventMgr::LoadINIFile(class CFishingEventMgr::EventInfo &)
0x00629D2C bool CFishingEventMgr::Load(void)
0x005197C0 bool CCoretimeTeleportEventMgr::LoadINIFile(void)
0x006290E8 bool CFishingEventMgr::RequestLoadStartTimeSavePrize(void)
0x005196B8 bool CCoretimeTeleportEventMgr::ParseDay(const wchar_t *)
0x00519580 bool CCoretimeTeleportEventMgr::ParseTime(const wchar_t *)
0x0057E454 bool CDB::InitAuthD(void)
0x00653F78 bool CHeroSystem::ClearHeroMatchResult(int)
0x0056EAE0 void CCreatureController::BroadcastFlySelfDestination(class CSkillInfo*, int)
0x0064F060 bool CGeoData::SetStaticField(class CTerritory*, enum GeoFieldTypeEnum)
0x0087ED34 void CTransform::GetSkillList(int,class std::xvectorclass CSkillInfo const*, class std::xallocatorclass CSkillInfo const* &)
0x0082988C void CSkillEnchantDB::GetEnchantedSkills(class std::xvectorstruct SkillEnchantInfo*, class std::xallocatorstruct SkillEnchantInfo* &,int,int)
0x008F89E8 void User::SendSkillAcquireList(enum EtcSkillAcquireType,bool)
0x0042746C bool CAirShip::SetDriver(class User *, bool)
0x00417790 bool CAirShipConstFree::PayCost(class User*, const struct CAirShipConstFree::AirShipCostType &,int)
0x00419980 bool CAirShipConstFree::PayBuyCost(class User *)
0x007FCEDC void CExpelTimer::WriteUnlock(void)
0x00550A94 bool CCreature::_RemoveSkillUsableTime(int)
0x004FAE78 void CCleft::RewardHandler::operator ()(class CPVPMatchMemberInfo *)
0x00687468 bool CInventory::Push(int)
0x00417D48 bool CAirShip::IsDriver(class User *)
0x006D57CC void CMiniGameAgitNpcFuncHandler::GetStatus(void)
0x008782A4 bool CTradeManager::DeleteTrade(int)
0x0055D60C bool CCreature::_DeleteAcquireSkill(int)
0x007AD76C bool CPet::ValidateOrgHPRegen(void)
0x0082C4F0 void SkillEnchantNormal::SendAcquiredSkillList(class User *)
0x007D7908 void CPledge::SetAllOnlineMemberRenamed(int)
0x00940098 bool CUserSocket::LoginPacket(class CSocket *, const unsigned char *)
0x008EE9B4 void User::TakeOustedPenalty()
0x008946F8 void User::OnActivate(void)
0x00855020 bool CSkillEffect_i_rebalance_mp::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x00476624 bool CObjectMapclass CProduct,1,5,class RWLock::Insert(int,class CProduct *, char*, int)
0x005FE804 void CDuelManager::DuelPlayerDie(class User *, class CCreature *)
0x007B9440 CPetitionCli::ReplyCharList(char* packet)
0x009401E4 bool CUserSocket::AnswerJoinPartyPacket(class CSocket*, const unsigned char *)
0x0088E8F8 bool User::StartScenePlay(int)
0x004DFD64 bool BuilderCmd::show_dominion_registry(class CSocket*, class User*, wchar_t *)
0x0060043C __cdecl CDuelManager::CDuelManager(void)
0x008B69E0 bool User::OnDropItemPacket(unsigned int,__int64,int,int,int)
0x00724090 void CNPC::Set(enum ObjectFieldType,class std::xvectorstruct ItemDropStruct*, class std::xallocatorstruct ItemDropStruct* *)
0x007F5EF8 int __cdecl CPVPMatchSystem::CheckRegisterUser(unsigned int,unsigned int)
0x004F6300 int CheckClanOwner( User* pUser)
0x004620E4 bool CBlockUpsetManager::SetMinRegisterCount(int,int)
0x005FE974 void CDuelManagementUnit::HandleDuelStartConditionResult(class User*, enum DuelStartErrorType,class User *)
0x0097BBD0 void CWorldPlaneCollision::ShowBlockTerritory(class User &,int)
0x005FD298 void CDuelUserInfo::SaveDuelRecord(class User *)
0x004F4D10 void CCastle::StartTimer(void)
0x00836B30 bool CSkillEffect_i_teleport_to_target::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x006FE66C double CAttackAction::GetAttackCriticalProb(class CCreature*, int,double,const class FVector &,const class FVector &,const class FAngle &)
0x0077DE10 bool CParty::DeleteMember(unsigned int)
0x007E52D8 void UpdatePledgeInfoWindow::ServeInternal(class User *)
0x0066BE44 void SendPledgeMail::ParseParameter()
0x005C09E8 bool ReplyEvolvePet(class CDBSocket *, const unsigned char *)
0x009772A0 void CWorld::__async_AsyncVehicleLeaveWorld(struct CExecutionArgumentPad *)
0x007CE038 bool CPledge::_GetPledgeSkillLevel(unsigned int,int &)
0x00407754 void CAgit::ExpelNonPledgeMember(void)
0x00482524 bool BuilderCmd_Nametag(class CSocket*, class User*, wchar_t *)
0x0052B1E0 void CCreature::SendMessageOnDamaged(class CCreature *, class CCreature*, int,bool,bool,int)
0x008AD150 bool User::OnFinishRotating(int)
0x0083C3E8 bool CSkillEffect_p_create_common_item::Pump(class CCreature *, const class CSkillInfo*, int)
0x007BC1C4 CPetitionCli::NotifyCheckOut(int nPetitionId, WCHAR * wsGMCharName, WCHAR* wsClientCharName, int nGmDBID, int nClientDBID)
0x009058B0 void CUserBookmarkSetting::SetAddItem(class CItem *)
0x004D6F20 bool BuilderCmd_gmchat(class CSocket*, class User*, wchar_t *)
0x0062E354 void CFortressSiege::AddSiegeLog(wchar_t*, int,enum FortressSiegeStatus)
0x00933F28 bool OustPledgeMemberPacket(class CSocket*, const unsigned char *)
0x008350CC bool CSkillEffect_i_install_camp::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x0091CE28 bool OustPartyMemberPacket(class CSocket*, const unsigned char *)
0x00492CF4 bool BuilderCmd_set_freeze_field(class CSocket*, class User*, wchar_t *)
0x0088D468 bool User::SetStopBotReport(unsigned long,bool)
0x00951FA0 class CommissionInfo VariationDB::GetCommissionInfo(unsigned int,unsigned int)
0x0069F03C void CItem::Set(enum ObjectFieldType,wchar_t*, int)
0x007777C8 void COwnThing::InsertOwnThingToDominion(class CDominion *)
0x00738DD4 bool NPCPlayScene(class NpcSocket*, const unsigned char *)
0x00799D84 void CPartyRoom::GetPartyMasterList(class std::xvectorclass CSPointerclass CRoomMember,class std::xallocatorclass CSPointerclass CRoomMember  &)
0x0070F874 double CSkillAction2::GetCancelTime(class CCreature &,class CSkillInfo &)
0x00758B10 void CTLPipeBaseunsigned int,1000000,8::CThreadPipe::Write(const unsigned int &)
0x0062D444 void CFortress::SetStateInfoFromDB(int,int,int)
0x0044C934 bool AtomicSummonAirShip::Do(void)
0x00591704 void CDB::RequestLoadPVPPointRestrain(class User *)
0x008CA820 void User::LogAbnormalAction(enum AbnormalUserAction,bool)
0x00927920 bool PetUseItemPacket(class CSocket *, const unsigned char *)
0x00447370 bool CAtomicCouponUsed::Do(void)
0x00757FA0 void CObject::Set(enum ObjectFieldType,class std::xvectorstruct ItemDropStruct*, class std::xallocatorstruct ItemDropStruct* *)
0x008E43EC bool User::GetItem(class CItem *)
0x00405660 bool NewInspectorAgent::ExecutePolicy(unsigned long)
0x0057D5DC bool CCursedWeaponBuilderCmd::GiveCursedWeapon(class CSocket *, class User*, wchar_t *)
0x0074DF28 bool DisassembleTerritoryInfo(const unsigned char*, class std::xvectorclass CTerritory*, class std::xallocatorclass CTerritory* &,class std::xvectorclass CTerritory*, class std::xallocatorclass CTerritory* &)
0x00704F90 void CMoveAction::SetValidPendingAction(class CCreature *)
0x00814514 void CSharedRWLock::Done()
0x004E1180 bool BuilderCmd_controltower_levelup(class CSocket*, class User*, wchar_t *)
0x0073A7D4 bool NpcEquipItem(class NpcSocket*, const unsigned char *)
0x00817BC4 void CSiegeAgit::SendCastleSiegeInfo(class CUserSocket*, class User *)
0x0083D5D8 bool CSkillEffect_p_mp_regen_by_move_mode::Pump(class CCreature*, const class CSkillInfo*, int)
0x00492174 bool BuilderCmd::_set_quick_siege(class User*, class CUserSocket*, class CResidence*, int)
0x00801F10 void CResidenceDB::SendResidenceTaxIncome(void)
0x004175A0 void CAirShipConstFree::SetSummonCost(wchar_t*, int)
0x0052DE80 bool CCreature::ValidateAllOnMotionEx(void)
0x00570108 void CCreatureController::ActionBroadcastAttack(const struct AttackTargetDataType &,int,struct AttackTargetDataType [],class CObject &)
0x0055CA4C bool CCreature::ValidateAllOnArmors(void)
0x00966EAC void CWorld::DeleteInZoneItem(class CItem *)
0x0083FE48 bool CSkillEffect_p_skill_critical_probability::Pump(class CCreature *, const class CSkillInfo*, int)
0x00764378 bool COlympiadField::SummonUser(void)
0x0066D5C0 void ViewCastleInfo::ExecuteInternal()
0x00554CC8 void CCreature::_OnDeletedSkill(struct AcquiredSkillInfo &)
0x0086F098 void CThreadLocalTimer::AddTimer(class CIOObject*, __int64,int)
0x006B8890 void CLog::AddV(enum LogType,char*, char *)
0x00474C3C void CInventory::UpdateRuneItem(void)
0x004B1C18 void CExecutionSerializerclass CCreatureController,32::AddExecutable(class MemoryObject*, void (__cdecl MemoryObject::* )(struct CExecutionArgumentPad *),class CExecutionArgument *, const wchar_t *)
0x006B9E14 void CLog::Add(enum LogType,char*, ...)
0x00429924 void CAirShip::KickoutAllPassengers(class FVector)
0x007FFA0C bool CResidence::IsInResidence(const class FVector &,bool)
0x00712F58 bool CSkillAction2::CheckAndConsumeItemDuration(class CCreature *)
0x008521F0 bool CSkillEffect_i_spoil::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x0083B080 bool CSkillEffect_p_transfer_damage_pc::Pump(class CCreature *, const class CSkillInfo*, int)
0x0068CB24 void CInventory::ReleaseMapChangedItems(void)
0x008F2464 void User::SendBasicActionList(void)
0x00973064 void CWorld::__async_AsyncVehicleMove(struct CExecutionArgumentPad *)
0x0051EA90 bool CCrataeCube::CanResurrectedByMatch(class User *)
0x007F1998 bool CPVPMatchSystem::CPVPPointTimeBlock::IsInTime(struct tm *)
0x00491494 bool BuilderCmd_action(class CSocket*, class User*, wchar_t *)
0x007C33D0 bool CPledge::IsFirstChangedJobOrNeverChangedJob(enum ClassType)
0x00841774 bool CSkillEffect_p_dominion_transform::PumpStart(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpStartType) const
0x005B39C8 bool CreateItemPacket(class CDBSocket*, const unsigned char *)
0x005848A8 void CDB::RequestSetPledgeInfo(unsigned int,unsigned int,unsigned int)
0x004AE068 bool BuilderCmd::BuffTest(class CSocket*, class User *, wchar_t *)
0x005F9B20 class CDoor *__cdecl CDoorDB::GetDoor(const wchar_t *, unsigned int)
0x005802E0 void CDB::RequestCreateSubPledgeByNpc(int,class User *, enum PledgeType,class CPledge *, const wchar_t *, unsigned int)
0x006B5DDC void CItemDropEvent::TimerExpired(int)
0x008F2244 void User::ChangeTalkTarget(class CObject *)
0x00549AF8 void CCreature::AddOrUpdateSkillReuseDelay(int,int,unsigned long,unsigned long)
0x0093E548 bool FriendList(class CSocket*, const unsigned char *)
0x0093B94C bool FriendAddReply(class CSocket*, const unsigned char *)
0x0093DDC0 bool FriendList(class CSocket *)
0x0093B6CC bool FriendAddRequest(class CSocket *, const unsigned char *)
0x00902E54 bool CUserBookmarkHandler::CanAddSlot(class User*, int)
0x0043B14C bool CArea::IsBannedPoint(const class FVector &,bool)
0x0093AC34 bool FriendAddRequest(class CSocket *, const wchar_t *)
0x0091E6FC bool FinishRotatingPacket(class CSocket*, const unsigned char *)
0x00746318 bool NpcShowBuyPagePacket(class NpcSocket*, const unsigned char *)
0x008F2B74 void User::StartSpelling(const class CSkillInfo*, class CObject *)
0x00627668 bool CFishingEventMgr::RequestFinishEvent(void)
0x00592DE4 void CDB::RequestPCCafeCouponCheck(class User*, const int,const int,const int,const int)
0x007EC6A8 bool CObjectMapclass CBillingJob,1,5,class RWLock::Insert(int,class CBillingJob*, char*, int)
0x00458C58 bool AuthRequestApplyNewChargeItem(class CAuthSocket *, const unsigned char *)
0x007AD980 bool CPet::IsSyncLevel(void) const
0x0058672C void CDB::RequestBBSReadThread(class User*, int,int,int,int,int,int,wchar_t*, int,int)
0x0089358C void User::SocialAction(int,int,bool)
0x00702084 bool CMoveRelativeAction::SetMovingInVehicleImpl(void)
0x00773870 bool COlympiadEntry::AddEntry(class COlympiadTeam*, enum GameRuleType)
0x0059D9A8 void CDB::RequestLoadAllDominion(void)
0x009752EC void CWorld::ReportUser(void)
0x0043FEFC int __cdecl AtomicAddTimeAttackFee::Assemble(char*, int)
0x00440124 int __cdecl AtomicGiveTimeAttackReward::Assemble(char*, int)
0x006D9050 void CMiniGameAgit::SendTimeElapsedMessage(void)
0x0043ED28 int __cdecl AtomicEventRide::Assemble(char*, int)
0x00584358 void CDB::LoadIntervalAnnounce(void)
0x0043F1BC int __cdecl AtomicDeleteDepositedSSQItem::Assemble(char*, int)
0x0043F35C int __cdecl AtomicDepositSSQItemEx::Assemble(char*, int)
0x0043F7A4 int __cdecl AtomicTeleportParty::Assemble(char*, int)
0x0043F974 int __cdecl AtomicAddTimer::Assemble(char*, int)
0x0043FBDC int __cdecl AtomicTeleportTo::Assemble(char *, int)
0x0043FD7C int __cdecl AtomicSetTicketBuyCount::Assemble(char*, int)
0x007ABAB0 bool CSummon::IsRealEnemyTo(class CCreature *)
0x0044BD0C AbstractProduct* GenericFactory::CreateObject(const IndentifierType &id)
0x00486D38 bool CSParamSettingPacket(class CSocket*, wchar_t*, wchar_t *)
0x0051DFE8 bool CCrataeCube::CheckRegisterLevel(int)
0x0082CEC8 bool L2SkillFunc::pump_rate_by_hp(class CCreature*, const class CSkillInfo*, const bool,const double,enum CCreatureSkillMod::ModName,const double,const enum SkillFxChangeType)
0x0055D734 void CCreature::ModifyAcquireSkill(int,int)
0x008066D8 RWLock::RWLock()
0x0071BCC4 void CNPC::RestoreUnequipedWeapon(void)
0x0044EE5C void CAuction::ExpandAuctionDuration(void)
0x008092F0 bool CSecureINIFileReader::Load(const wchar_t *)
0x004A6BBC bool BuilderCmd_BotCheckItem_npc(class CSocket*, class User*, wchar_t *)
0x00650590 __cdecl CGameInfoPipeline::CGameInfoPipeline(void)
0x006616E4 MULTI_1
0x006D27A0 bool CSmartQueue::MonopolizeSemaphore(void)
0x0083A3D8 bool CSkillEffect_i_real_damage::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x0081BFA0 bool CSkillInfo::CanUsedBy(class CCreature*, bool) const
0x004A904C bool BuilderCmd::end_dominion(class CSocket *, class User*, wchar_t *)
0x006FD9D8 bool CSitAction::OnStart(void)
0x0052A15C bool CSharedCreatureData::DeleteAbnormalStatus(enum AbnormalStatusSlotType)
0x005021A4 void CCommCli::ToggleAutoConnect()
0x0095791C void CVehicle::KickIllegal(int,class FVector)
0x008067C0 RWLock::~RWLock()
0x00734268 bool NpcGiveItemByPCCafePoint(class NpcSocket*, const unsigned char *)
0x006CFCDC CMemoHTML::CMemoHTML(CUserSocket* socket): CParseHTML(socket)
0x0062F288 void CFortress::GiveOwnerReward(void)
0x0083E7E4 bool CSkillEffect_p_vampiric_attack::Pump(class CCreature*, const class CSkillInfo*, int)
0x008D7814 void User::ForceEquipItem(class CItem *)
0x004635DC void CBlockUpsetManager::DeleteItemsAfterMatch(int)
0x0071106C bool CSkillAction2::OnDisappear(void)
0x0085CE64 bool SSQSystem::SetNextSealEffectPeriod(void)
0x004FD20C void CCleft::_ResetNextCat(enum BlueRedTeam::Enum)
0x00573BAC bool CCubicHandler::ActionToCurrentTarget(class CCreature*, class CCubic*, struct CubicActivationInfo &,struct ActivateInfo2 &)
0x0046937C void CBossRecordRound::Set(int,int,int)
0x00783294 void CParty::DismissImpl(bool)
0x008F3234 void User::SetItemCrystalEquipPenalty(enum CrystalType)
0x007FC4C8 void CResidence::InstallHatcher(int)
0x006DEC48 bool CMonRacePacket::BettingResult(int,int,int,int,const unsigned char *)
0x0047D6A8 bool BuilderCmd_show_tutorial_html(class CSocket*, class User*, wchar_t *)
0x008FE100 void User::DismountFromPet(void)
0x0077C5F0 class CSharedPartyData *__cdecl CSharedFactoryclass CParty,class CSharedPartyData,class CSharedPartyConstant,&class CSharedDefine const SharedDefine_Party::AddById(int)
0x00784AD4 void CParty::OnPacketOust(class User &,wchar_t *)
0x00822340 bool CSkillInfo::PushConditionMsg(int,const enum CSkillInfo::OperateConditionTarget)
0x0091FAD4 bool PrivateStoreListSet(class CSocket*, const unsigned char *)
0x0076508C void COlympiadField::SendToPlayers(const char*, ...)
0x008BEE34 void User::InSight(class CObject*, bool)
0x0053D714 void CCreature::DespawnAllCubic(bool)
0x0081F3F0 bool CSkillInfo::ActivateSkill(class CCreature*, class CObject*, double,class CSkillAction2*, enum CSkillInfo::EffectActivateTiming,double) const
0x0065020C void CGameInfoPipeline::TryConnectingToDaemon(void)
0x006C042C void CManor::SetCropProcured(int,__int64)
0x0080E7DC void CContainerIndex::Add(class CContainer *)
0x00476080 CShopServer::SendProductList
0x0079E1E0 int CPartyRoomRegistry::CountMember()
0x007429DC bool NpcEarthquake(class NpcSocket*, const unsigned char *)
0x00530D5C bool CCreature::CanUseShot(const class CSkillInfo *)
0x0060EC74 bool EtcManiGiveItemByCastleSiegeCount::DoAtServer(void)
0x004B3020 bool BuilderCmd_set_pledge_level(class CSocket*, class User*, wchar_t *)
0x007CBA34 void CPledge::ServeForAllMember(class CPledgeMemberService &)
0x007C259C static bool LeaveMsgFail(CPetitionSocket *socket, const unsigned char *packet)
0x005EDCB0 bool CDominionSiegeEntry::RemovePledge(unsigned int)
0x006F9784 class CMultiSellList *__cdecl CMultiSellDB::find(int)
0x0061D1FC char *__cdecl CFHTML::MakeStream(char*, int)
0x00756DB8 void NpcSocket::OnClose(void)
0x0069C368 bool CItem::CheckItemUseCondition(class CCreature *)
0x008FA794 void User::AgathionSkillDelayReset(void)
0x006BD780 void NpcPosEventMap::MakerFinished(void)
0x006BE384 void NpcPosEventMap::GetList(class std::xstringmapint,struct std::xstringless,class std::xallocatorstruct std::pairclass std::basic_stringwchar_t,struct std::char_traitswchar_t,class std::allocatorwchar_t const ,int  &)
0x0072D1B4 void NpcServer::SendNPCCreatePacket(const struct NpcServer::NPCCreateParam &)
0x0074095C void NpcSocket::OnCreate(void)
0x0072D09C void NpcServer::Send(const char*, ...)
0x006BE7CC void NpcPosEventMap::TriggerNpcPosesEvent(const class std::xvectorclass std::basic_stringwchar_t,struct std::char_traitswchar_t,class std::allocatorwchar_t ,class std::xallocatorclass std::basic_stringwchar_t,struct std::char_traitswchar_t,class std::allocatorwchar_t  &,const class std::xvectorclass std::basic_stringwchar_t,struct std::char_traitswchar_t,class std::allocatorwchar_t ,class std::xallocatorclass std::basic_stringwchar_t,struct std::char_traitswchar_t,class std::allocatorwchar_t  &)
0x0079C938 int CPartyRoomInfo::GetLocation()
0x005869FC void CDB::RequestBBSGetFavorite(class User *)
0x00958948 void CVehicleController::TimerExpired(int)
0x0044F4BC void CAuction::InitBid(int,const unsigned char *)
0x0088396C void CUndergroundColosseum::RefreshUser(class User *)
0x004767AC bool CShopServer::PushProduct(CProduct* pProduct)
0x004556F8 void CAuctionAgit::GetAuction(class std::xvectorstruct AuctionInfo,class std::xallocatorstruct AuctionInfo &)
0x00586110 void CDB::RequestResetCastleSiegePledge(class CCastle *)
0x0091D1B0 bool ShortCutRegisterPacket(class CSocket*, const unsigned char *)
0x00797798 int CPartyRoom::GetMemberCount()
0x00584120 void CDB::SendSetLoginAnnounce(int,wchar_t *)
0x00909858 void User::OnChangeSubJobEnd(bool)
0x005968E0 void CDB::RequestLoadBotReport(class User *)
0x004DD678 bool BuilderCmd_pledge_member_call(class CSocket*, class User*, wchar_t *)
0x00952430 void OptionGroup::InsertOption(unsigned short,double)
0x0067B958 void CInstantZone::InitDoor(void)
0x0095A7C4 void CWareHouseWithdraw::SendListEx(enum WareHouseClass)
0x0041AE98 void CTLPipeBaseunsigned int,1000,8::Write(int,const unsigned int &)
0x0042C63C bool CAirShipManager::SummonFreeAirShip(class User*, enum AirShipTypeEnum,int,int)
0x008538E0 bool CSkillEffect_i_harvesting::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x008FF4DC bool User::RideWyvern(int)
0x009482EC bool HtmlCmdAnnounce(class CUserSocket*, class User*, const wchar_t*, const wchar_t *)
0x006DE384 void CMonRaceData::Init(void)
0x00592AD4 void CDB::RequestDelPledgeSkill(unsigned int,unsigned int)
0x0079F454 CPartyRoomSP CPartyRoomRegistry::FindById(int id)
0x007691A8 void COlympiadUser::LeaveParty(void)
0x0048564C bool BuilderCmd::calc_next_all_manor(class CSocket*, class User*, wchar_t *)
0x005C3B38 bool ReplyDeleteBlockList(class CDBSocket*, const unsigned char *)
0x007E4D34 void CSendSubPledgeSkillAdd::ServeInternal(class User *)
0x00905808 void CUserBookmarkSetting::SetTeleportItem(class CItem *)
0x006A49FC bool CItemEquipCondition_castle::CheckPrivate(class CCreature*, class CItem *)
0x00498DF0 bool BuilderCmd_time_limit(class CSocket*, class User*, wchar_t *)
0x0058C960 void CDB::RequestDelMonRaceTicket(class User*, int,int,int)
0x0080F8D8 bool CSharedFactoryclass CCreature,class CSharedCreatureData,class CSharedCreatureConstant,&class CSharedDefine const SharedDefine_Creature::Push(int,int &,int)
0x0087E3C0 void CTransform::ConvertTransformTypes(const class std::xvectorwchar_t*, class std::xallocatorwchar_t* &,class std::xvectorint,class std::xallocatorint &)
0x0042CDFC void BuilderCmdHelper::SailRegularShip(class User*, wchar_t *)
0x0060F9CC void CEventController::SetOnOff(bool bOnOff)
0x0041C108 void BuilderCmdHelper::Ascent(class User*, wchar_t *)
0x0041C260 void BuilderCmdHelper::Descent(class User*, wchar_t *)
0x007BA714 CPetitionCli::ShowMessage(User *pUser, WCHAR* pwsMsg)
0x00428088 void BuilderCmdHelper::SetDriver(class User *, wchar_t *)
0x0042B15C void BuilderCmdHelper::GetOffAirShip(class User*, wchar_t *)
0x0042C9D4 void BuilderCmdHelper::SummonAirShip(class User*, wchar_t *)
0x0042CB7C void BuilderCmdHelper::BuyFreeAirShip(class User*, wchar_t *)
0x0042CCF4 void BuilderCmdHelper::DestroyRegularShip(class User *, wchar_t *)
0x004EBE0C int __cdecl CCastle::GetReservedStatus(unsigned int)
0x008F0ADC void User::HandleOwnThing(class User *)
0x00632354 void CFortress::SetFlagpole(void)
0x005AFF10 bool ReplyPetiGetCharList(class CDBSocket*, const unsigned char *)
0x0045EF78 void CBlockUpset::_OnBlockUpsetPlayerAdded(class CBlockUpsetMemberInfo *)
0x009011E4 bool CBasicActionHandler_SUMMON_DESPAWN::Handle(class User*, int,bool,bool,int)
0x00923A30 bool RequestSSQStatus(class CSocket *, const unsigned char *)
0x0045D724 bool CBlockUpset::_StartVoting(void)
0x008258F0 int __cdecl SkillEnchantNormal::CalculateProb(const struct SkillEnchantInfo*, int)
0x0088E538 void User::PlaySound(const wchar_t*, int,int,int,int,int)
0x008B5E1C void User::ResetInZoneRestriction(int,bool)
0x0077E850 void CParty::GetAllMemberWhoCanGetExpSp(class std::xvectorclass User*, class std::xallocatorclass User* &,class CCreature *)
0x00468614 bool CBlockUpsetManager::AddBlockUpsetWaitingPlayer(int,enum BlueRedTeam::Enum,class User &)
0x0088EC4C int __cdecl User::GetSocialityCount(void)
0x00601EA0 void CPartyDuel::SaveDuelRecord(void)
0x008926AC int __cdecl User::GetCertainBossPoint(int)
0x0088DE00 int __cdecl User::GetPrivateStoreTime(void)
0x008927FC int __cdecl User::AssembleBossRecord(char*, int,int *)
0x0056DCA0 void CCreatureController::ActionBroadcastMoveToTarget(class CObject &,int)
0x008A30DC void User::GetSavingPos(int &,int &,int &)
0x006D5EE4 void CMiniGameAgitSelectedPledgeEntry::BuilderCmd_ShowInfo(class CUserSocket *)
0x007C0530 static bool AcceptFeedback2(CPetitionSocket *socket, const unsigned char *packet)
0x00825A40 int __cdecl SkillEnchantNormal::CalculateSp(const struct SkillEnchantInfo*, int)
0x007BFAE0 static bool AcceptJoinChat(CPetitionSocket *socket, const unsigned char *packet)
0x007BF534 static bool AcceptChatEnd(CPetitionSocket *socket, const unsigned char *packet)
0x007C02CC static bool AcceptUserPchat(CPetitionSocket *socket, const unsigned char *packet)
0x007BFBF8 static bool AcceptLeftChat(CPetitionSocket *socket, const unsigned char *packet)
0x006E4340 bool CMonRaceDB::RequestCreateMonRace(void)
0x0094DBBC void SaveStrToReg(WCHAR* str, const WCHAR* keyStr, const WCHAR* regEntry)
0x00832FB8 bool CSkillEffect_i_dispel_by_slot_myself::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x0083B9A0 bool CSkillEffect_p_physical_defence_by_material::Pump(class CCreature*, const class CSkillInfo*, int)
0x005956E0 void CDB::GetLastBirthdayGiftDate(unsigned int)
0x00825C48 int __cdecl SkillEnchantSafe::CalculateSp(const struct SkillEnchantInfo*, int)
0x00728BA8 void CNPC::Delete(void)
0x0059D5B0 void CDB::RequestSaveAcquiredSkills(class User*, class std::xmapint,struct AcquiredSkillInfo,struct std::lessint,class std::xallocatorstruct std::pairint const ,struct AcquiredSkillInfo  &)
0x006278A0 void CFishingEventMgr::FishingEventStatus(class User *)
0x006B7304 Apr 10 2009_10:40:00
0x006DB5F8 void CMiniGameAgit::BuilderCmd_ShowInfo(class CUserSocket *)
0x007F8404 void QuestionAnswer::ResponseResultQuery(void)
0x007F833C void QuestionAnswer::MakeRequestQuery(const struct Query &,const struct Query &,const struct RGBA &)
0x007F8264 void QuestionAnswer::Encrypt(void)
0x0058F4BC void CDB::SetDawnRoundToPledge(int,int)
0x007F8078 void QuestionAnswer::Deobfuscate(void)
0x00653AA0 void CHeroInfo::RefreshAchievements(void)
0x008688C8 void CTeamBattleAgit::StartBattleRoyal(void)
0x00817894 void CShortCut::DeleteBookmarkshortCut(int)
0x00833F74 bool CSkillEffect_i_Enchant_Weapon::Instant(class CCreature*, class CObject*, const class CSkillInfo *, class CSkillAction2*, double)
0x00929C44 bool WriteHtmlPacket(class CSocket*, const unsigned char *)
0x005370E8 void CCreature::Action(class CObject*, bool,bool)
0x009264FC bool WithdrawPledgePacket(class CSocket*, const unsigned char *)
0x0091D9C8 bool WarehouseWithdrawPacket(class CSocket*, const unsigned char *)
0x008875DC void CUndergroundColosseum::TimerExpired(int)
0x0058865C void CDB::LoadPetItems(class CPet*, int,bool)
0x0042DB94 void CAirShipForFree::SaveInfo(void)
0x005F30F4 void CDominionManager::EndSiege(void)
0x008AEC20 void BroadcastToAllUser_Announce(const wchar_t *)
0x00828D20 bool SkillEnchantRouteChange::Operate(class User*, int,int)
0x00595908 void CDB::RequestDeleteNRMemo(unsigned int,int)
0x0044E430 void CAuctionNPC::TimerExpired(int)
0x00855628 bool CSkillEffect_i_call_party::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x005BAC1C bool ReplyQueryCastleSiegeForRegister(class CDBSocket*, const unsigned char *)
0x005BBF1C bool BBSWriteArticle(class CDBSocket*, const unsigned char *)
0x0083E1A0 bool CSkillEffect_p_heal_effect_add::Pump(class CCreature*, const class CSkillInfo*, int)
0x007E320C void CPledgeMemberList::RefreshMemberList(void)
0x004804A4 bool BuilderCmd::loadpccafeeventsetting(class CSocket*, class User*, wchar_t *)
0x00453764 enum SaleState CAuctionAgit::GetSaleState(void)
0x004F68FC void CClanBBSHTML::ClanBBSView( const unsigned char * packet)
0x00818050 void CSiegeAgit::OnBossNpcEnterWorld(class CNPC *)
0x00738088 bool NpcClassChange(class NpcSocket *, const unsigned char *)
0x00878148 int __cdecl CTradeManager::CreateTrade(class User*, class User *)
0x006A6CF0 void ItemManip::Dump(void)
0x005FE314 void IndividualDuel_Lose::OperateInternal(class User *, class CIndividualDuelPlayerInfo *)
0x005FE26C void IndividualDuel_Win::OperateInternal(class User*, class CIndividualDuelPlayerInfo *)
0x006A92C0 void ItemManipList::Serialize(void)
0x004037F8 void MemoryObject::operator delete(void *)
0x008FA85C void User::ResetPet(int)
0x00931090 bool SellPacket(class CSocket*, const unsigned char *)
0x005E721C void CDBSocketOp::LoadNobless(const unsigned char *)
0x0047B07C bool BuilderCmd_infectedskill(class CSocket *, class User*, wchar_t *)
0x0090728C void User::InitSubJob(int,int)
0x007E815C bool CPledgeRanking::LoadRanking(class CDBSocket*, const unsigned char *)
0x005965C0 void CDB::RemoveExpiredPeriodicItem(unsigned int,unsigned int,unsigned int,unsigned int,int)
0x0051E3E4 bool CCrataeCube::RegisterResurrectionNPC(unsigned int)
0x007E8770 unsigned int CPledgeTypeValidator::GetIndex(enum PledgeType)
0x008023A8 class CDominion *__cdecl CResidenceDB::GetDominion(int)
0x007F1690 bool CPVPMatchSystem::LeaveWorld(class User &)
0x004A1E3C bool BuilderCmd_SummonDoppelganger(class CSocket*, class User*, wchar_t *)
0x0060572C bool SSQSystem::SetCurrentStatus(enum SSQStatus::type)
0x005E6948 bool SSQSystem::SetCollectedPoint(enum SSQPart::type,__int64)
0x00573174 bool SpriteDB::LoadData(wchar_t*, int)
0x006057DC void DxSetSevenSignQuestResult::DoServerJob(void)
0x00418694 bool CAirShipForFree::IsLanded(void)
0x005076DC static bool CommBBSModifyFormpacket(CCommSocket *socket, const unsigned char *packet)
0x0093276C bool BuyPreviewPacket(class CSocket *, const unsigned char *)
0x00644D30 bool CGameEventMgr::LoadNPCSetting(class CUserSocket *)
0x00644B48 bool CGameEventMgr::LoadNPCINIFile(void)
0x00566A64 bool CCreature::DispelByIdLevelMySelf(class CSkillInfo*, bool)
0x00644214 bool CGameEventMgr::LoadINIFile(struct CGameEventMgr::EventInfo &)
0x00436C5C bool CArea::IsOn(const int)
0x0067C6B0 bool CInstantZone::GetAreaIsOn(class CArea *)
0x00766174 bool COlympiadField::SetTeam(enum GameRuleType,class COlympiadTeam*, class COlympiadTeam*, bool)
0x004063C4 void CAgit::Set(int,int,int)
0x00856308 bool CSkillEffect_p_trigger_skill_by_skill::PumpStart(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpStartType) const
0x00481260 bool BuilderCmd_initializebossrecord(class CSocket*, class User*, wchar_t *)
0x005355CC void CTLPipeBasestruct CTL_WorldMapNode2,112500,8::Read(class CTLPipeBasestruct CTL_WorldMapNode2,112500,8::CReadCallback *)
0x0055328C void CCreature::__async_LookNeighbor(struct CExecutionArgumentPad *)
0x0053FED0 void CCreature::ShowBlocks(const class std::xvectorclass FVector,class std::xallocatorclass FVector &)
0x0057D9FC void CCursedWeapon::PickAnotherCursedWeapon(class User*, class CItem *)
0x004461C8 bool AtomicAddSSQMember::Do(void)
0x0085452C bool CSkillEffect_i_align_direction::Instant(class CCreature *, class CObject *, const class CSkillInfo*, class CSkillAction2*, double)
0x006F7A44 __cdecl BroadcastPartyJoin::BroadcastPartyJoin(unsigned int)
0x006D66CC void CMiniGameAgitRegistPledgeEntry::Clear(void)
0x004AFFF4 bool BuilderCmd::go_n_terri(class CSocket*, class User*, wchar_t *)
0x006BF634 int __cdecl CManor::GetManorCropIndex(int)
0x007B0454 void CPetManager::PreCalc(void)
0x0077D028 void CTLPipeBaseunsigned int,10000,8::Write(int,const unsigned int &)
0x0089026C void User::DelHennaFromBD(int)
0x004FA05C void CCleft::InitSetting(void)
0x005FE0CC void CPartyDuel::OnEnd(void)
0x008D76EC void User::SaveDurationItem(class CItem *)
0x004EBFB8 void CCastle::ReserveAttacker(class CPledge *, int)
0x004A54CC bool BuilderCmd_UserPacketMonitor(class CSocket*, class User *, wchar_t *)
0x00965DCC void CThreadLocalWorldMap2100000,500000,8::Push(int,const class FVector &,class CObject *)
0x007FC044 bool CResidence::HaveManor(int)
0x0052ECB4 void CCreature::ValidateItemSkills(void)
0x0054937C void CCreature::InitializeSkillMod(void)
0x005238DC void CTLPipeBasestruct CTL_WorldMapNode2,500000,8::CThreadPipe::Write(const struct CTL_WorldMapNode2 &)
0x00524704 void CTLPipeBasestruct CTL_WorldMapNode2,500000,8::Write(int,const struct CTL_WorldMapNode2 &)
0x00524E5C void CThreadLocalWorldMap2100000,500000,8::Write2(short,short,char,int,class CObject *)
0x00577490 void CCursedWeapon::PickUp(class CItem*, class User *)
0x0087D500 void CTransform::PostLoad(void)
0x005006CC void CCleft::TimerExpired(int)
0x0048024C bool BuilderCmd::loadevent(class CSocket*, class User*, wchar_t *)
0x006201A0 void CFieldCycle::AddPoint(int,int,class CCreature *)
0x006BAB1C CLogCli::CLogCli()
0x006202F8 void CFieldCycle::SetStep(int,int,class CCreature *)
0x005863F4 void CDB::RequestSaveCastleSiegeElapsedTime(int,int)
0x0045E54C void CBlockUpset::ReadyPlayerToStart(enum BlueRedTeam::Enum,class User &)
0x008FFFDC bool CUserBasicAction::HandleServerTriggeredAction(class User*, enum ServerTriggeredUserAction,bool,bool)
0x004DE5B4 bool BuilderCmd::_CheckImitation(class CUserSocket*, class User *)
0x008FEBC8 bool User::TryDismounting(bool,bool)
0x0065DBA4 void SaveMailHtmlBuilder::BuildHtmlInternal()
0x005FCAD0 void Duel_SetFullStatus::Operate(class User *, class CDuelPlayerInfo *)
0x0065B634 void SaveMailHtmlBuilder::SendHtml()
0x0065ABFC void SaveMailHtmlBuilder::Build1001Packet()
0x007C59BC void CPledge::SetPledgeName(wchar_t *)
0x007F4E70 void CPVPMatch::_InsertBannedUser(int)
0x007FA850 void CRecipeDB::Load(void)
0x006EF648 bool CMultiPartyCommandChannel::Contains(class CParty *)
0x00927074 bool SetPledgeCrestPacket(class CSocket*, int,const unsigned char *)
0x00586F3C void CDB::RequestInstallResidenceDeco(int,int,int,int)
0x008A93D4 bool User::OnNpcCreateSubJobPacket(int,int)
0x00589E7C void CDB::RequestCreateAgitAuction(class User*, int,int,wchar_t*, __int64,int,__int64,int)
0x00509D58 __cdecl CCommSocket::CCommSocket(unsigned __int64,bool (__cdecl **)(class CCommSocket*, const unsigned char *))
0x004C1D8C bool BuilderCmd_ssq5(class CSocket*, class User*, wchar_t *)
0x0058F274 void CDB::RequestInitXMasSealAmount(class User *)
0x006BB9C8 TimeAttackInfo::TimeAttackInfo(int nRoomNO, int nRecordType)
0x005FECC4 bool CDuelUserInfo::IsAlly(class User *)
0x007F205C void CPVPMatchSystem::CPVPPointTimeBlock::ShowInfo(class CUserSocket *)
0x0047D9B0 bool BuilderCmd_close_html(class CSocket*, class User*, wchar_t *)
0x006937FC int __cdecl CItem::EnchantAddValuePAttack(void)
0x009465A4 bool HtmlCmdDepositPledge(class CUserSocket *, class User*, const wchar_t*, const wchar_t *)
0x0089130C void User::SetPetitionSeq(char *)
0x00681A24 void CInstantZone::GetAllActiveUser(class std::xvectorclass User*, class std::xallocatorclass User* &)
0x00809C5C void CSerializedPumpEndMessage::Clear(void)
0x005A3604 bool ReplyLoadItemDuration(class CDBSocket*, const unsigned char *)
0x00633588 void CFortress::BanExceptOwnerPledge(void)
0x0043E368 int __cdecl AtomicShowQuestFHTML::Assemble(char*, int)
0x0047CB0C bool BuilderCmd_dup_enterworld(class CSocket*, class User*, wchar_t *)
0x0043E590 int __cdecl AtomicDropItem::Assemble(char*, int)
0x0043E484 int __cdecl AtomicShowFHTML::Assemble(char*, int)
0x0043DCC8 int __cdecl AtomicResetResidenceDeco::Assemble(char *, int)
0x0043DB28 int __cdecl AtomicSetResidenceDeco::Assemble(char*, int)
0x006873A0 class CCreature *__cdecl CInventory::GetOwner(void)
0x0043DE68 int __cdecl AtomicSetFortressFacility::Assemble(char*, int)
0x007F89C8 bool CRecipeInfo::MakeProductPacket(class CPacketHelperEx16384 &)
0x0043EAF0 int __cdecl AtomicRideWyvern::Assemble(char *, int)
0x0043E838 int __cdecl AtomicDropItem2::Assemble(char*, int)
0x007FF1A4 void CResidence::MakeDoorsBreakable(bool)
0x006B56DC __cdecl CHeartEvent::~CHeartEvent(void)
0x005F6A00 void CDoor::Delete(void)
0x00633060 void CFortress::ResetOwnership(void)
0x008E15E0 void User::ReleaseAllPremiumItemList(void)
0x0058BF7C void CDB::DeleteRecipeBookChapter(int,int,int)
0x00456100 bool AuthRequestUserNum(class CAuthSocket*, const unsigned char *)
0x0045726C void CIOSocketExclass CIOBufferEx8192 ::Read(unsigned long)
0x004CAE68 bool BuilderCmd::NpcSkill(class CSocket*, class User *, wchar_t *)
0x007693F0 bool COlympiadUser::WaitingOlympiadPlaying(void)
0x004D5EBC bool BuilderCmd_setbuilder(class CSocket*, class User*, wchar_t *)
0x00890164 void User::AddHennaFromBD(int)
0x008AF55C bool User::AdjustStartPoint(class FVector &)
0x007BE04C BYTE CPetitionCli::RequestPchatStart(int nPetitionId, const wchar_t *pwzGMCharName, const wchar_t *pwzClientCharName)
0x008B46EC bool User::IsInBlockList(wchar_t *)
0x008CABA0 void BroadcastSerializer::TimerExpired(int)
0x004811B8 bool BuilderCmd_Fishing_event_status(class CSocket*, class User*, wchar_t *)
0x00657530 void CHolyThing::SendWarningMessage(void)
0x006F65D8 CMultiPartyCommandChannelSP CMultiPartyCommandChannelRegistry::FindByMasterParty(CParty* party)
0x006F6690 CMultiPartyCommandChannelSP CMultiPartyCommandChannelRegistry::FindByMemberParty(CParty* party)
0x0067714C void CInstantZone::OnCreate(void)
0x006F63B0 CMultiPartyCommandChannelSP CMultiPartyCommandChannelRegistry::Find(CParty* party, MultiPartyCommandChannelMap& registry)
0x00854374 bool CSkillOperateCondition_op_check_class_list::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x004F64C8 bool ClanBBS(CSocket* socket, const WCHAR *sCmd)
0x00571B84 void CCreatureController::__async_DoNothing(struct CExecutionArgumentPad *)
0x009114C8 bool RequestBaseAttributeCancel(class CSocket*, const unsigned char *)
0x008E4B28 bool User::ReplyCancelVariationItem(class CItem*, __int64)
0x0077A828 std::xwstring CParseHTML::GetTempletStr(int nTempletId )
0x007799F4 std::xwstring CParseHTML::ConvertStr(WCHAR* szSrc, int nOption)
0x004D475C bool BuilderCmd_recall(class CSocket*, class User*, wchar_t *)
0x0077A9B0 std::xwstring CParseHTML::GetWorldName(int nWorldId)
0x00674E84 std::xwstring CHtmlGenerator::Generate()
0x006746A0 std::xwstring CHtmlGeneratorHelper::Generate(std::xwstring &templet)
0x0043E008 int __cdecl AtomicResetFortressFacility::Assemble(char*, int)
0x00659C18 std::xwstring CHtmlBuilder::BuildHtmlDataPacket(int packetNumber, WCHAR *charName, WCHAR *title, WCHAR *content, int option)
0x00446C78 bool AtomicAquirePledgeSkill::Do(void)
0x00832C40 bool CSkillEffect_i_dispel_by_name::Instant(class CCreature*, class CObject*, const class CSkillInfo *, class CSkillAction2*, double)
0x0044521C bool AtomicShowPage::Do(void)
0x0063D6E8 void CFortress::RecieveNpcEvent(const unsigned char *)
0x007ADD7C void CPet::ValidateSpeed(void)
0x00858558 int __cdecl CSlotIndexManager::Add(int,class CItem *)
0x007D7508 void CPledge::SendDominionMessageToAllOnlineMember(int,int,wchar_t*, bool)
0x006261CC bool CFishingController::StartFishing(void)
0x00447B14 bool AtomicDeleteAcquireSkills::CanDo(void)
0x005675D0 bool CCreature::DispelByNames(const class std::xvectorwchar_t*, class std::xallocatorwchar_t* &,class CCreature*, class CSkillInfo *)
0x0042F93C void CAirShip::TimerExpired(int)
0x0092C52C bool ReplyManagePartyRoom(class CSocket*, const unsigned char *)
0x008659A4 class FVector CTeamBattleAgit::GetChallengerRestartPoint(int)
0x00916480 bool UserPacketEx::TryToPutIntensiveForVariationMakePacket(class CSocket*, const unsigned char *)
0x007695DC bool COlympiadUser::ValidInventory(void)
0x0047D5C0 bool BuilderCmd_click_tutorial_question(class CSocket*, class User*, wchar_t *)
0x006C408C void CManorFuncHandler::ShowManorDefaultInfo(void)
0x006B2A44 int __cdecl InitInstance(struct HINSTANCE__ *, int)
0x008A7FE8 bool User::CancelStore(void)
0x005A27AC bool ReplyGraduateAcademy(class CDBSocket*, const unsigned char *)
0x00572CC4 bool CCubicHandler::CanUseSkill(class CSkillInfo*, class CCreature*, class CObject *)
0x00484B54 bool BuilderCmd_BotCheckItem_give_user(class CSocket *, class User*, wchar_t *)
0x0043EC70 void AtomicRideWyvern::Dump(void)
0x0069E018 void CItemConstInfoDB::AddItemConstInfo(int,class CItemConstInfo *)
0x004A99E0 bool BuilderCmd::get_dominion_start(class CSocket*, class User*, wchar_t *)
0x0059D79C void CDB::RequestLoadAllFortress(void)
0x007A61B4 double CPCParamDB::GetKarmaIncreaseAmount(int nLevel)
0x006DBC70 void CMiniGameAgitNpcFuncHandler::JoinGame(void)
0x0090EF80 bool AutoSoulshotEXPacket(class CSocket*, const unsigned char *)
0x00458A4C bool AuthRequestNotifyRemainTime(class CAuthSocket*, const unsigned char *)
0x00838138 bool CSkillEffect_i_call_skill::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x007C83A4 void CUserSocket::SendSystemMessage_S_d(unsigned int,const wchar_t*, int)
0x0092900C bool RequestManagePledgePower(class CSocket *, const unsigned char *)
0x00676A24 CInspector* CInspectorDB::GetInspector()
0x004B7A7C bool BuilderCmd_show_clan_info(class CSocket*, class User*, wchar_t *)
0x008662D0 void CTeamBattleAgit::OnBossNpcEnterWorld(class CNPC *)
0x00883428 void CWorldTrap::Delete(void)
0x0069DEC0 void CItemConstInfo::GetUnpackableCapsuledItemList(class std::xvectorstruct CapsuledItem *, class std::xallocatorstruct CapsuledItem * &)
0x006B73B0 void CL2Time::IntervalAnnounceCheck(void)
0x00592944 void CDB::RequestSavePledgeSkill(unsigned int,unsigned int,int)
0x0040498C bool GameGuardAgent::ResponseSecond(const unsigned char **)
0x0058E274 void CDB::RequestCreateSubJob(class User*, int,int,bool)
0x004046B0 bool GameGuardAgent::TimeCheckImpl(void)
0x00432574 void CShipController::__async_DoNothing(struct CExecutionArgumentPad *)
0x00446AF0 bool AtomicSetHero::Do(void)
0x0055DEE8 bool CCreature::ChangeClass(enum ClassType)
0x006F6284 int CMultiPartyCommandChannelRegistry::GetChannelCount()
0x00580B00 void CDB::RequestGraduateAcademy(class CPledge*, class User *)
0x0049AA08 bool BuilderCmd_move_cell(class CSocket*, class User *, wchar_t *)
0x00951CD8 unsigned short VariationDB::GetItemGroupNo(unsigned int)
0x0087F5E4 void CTrap::ReportOrt(char *caller, int line, int nWorkType)
0x0089AB2C void User::SetPrivateStoreMsg(const unsigned char *)
0x005F6CE4 bool CDoor::CanBeOpenedBy(class CCreature *)
0x00499614 bool BuilderCmd_lotto_set_reward(class CSocket*, class User*, wchar_t *)
0x0058F074 void CDB::RequestGetSubJobListForNpc(class User*, int,int,int,int)
0x006DAEB0 bool CMiniGameAgit::TeleportToGameArea(class User *)
0x007C8DF0 class CAlliance *__cdecl CPledge::GetAlliance(void)
0x008FA6CC void User::AgathionSkillDelayDel(const int)
0x00583C60 void CDB::RequestBreakFriendship(class User *, unsigned int)
0x0046429C void CBlockUpset::ShowBlockUpsetState(class User &)
0x00737724 bool NpcChangeStatus(class NpcSocket*, const unsigned char *)
0x00461F34 void CBlockUpset::SetMinRegisterCount(int)
0x004C80AC bool BuilderCmd_door_open_all(class CSocket *, class User*, wchar_t *)
0x006D9C94 void CMiniGameAgitNpcFuncHandler::GetUnreturnedPoint(void)
0x0052C108 enum SkillFxPositionType CCreature::GetDirectionAt(class CCreature *)
0x0084E630 bool CSkillOperateCondition_enchant::CanUse(class CCreature*, const class CSkillInfo *, class CObject *)
0x0054AB18 bool CCreature::SetPassiveSkillPumpStart(int,int,enum SkillPumpStartType)
0x007E7BCC void CPledgeRanking::Remove(unsigned int)
0x0044BE04 void CParty::GetAllMemberId(class std::xvectorunsigned int,class std::xallocatorunsigned int &)
0x00475BB0 CProduct::AddItem(itemId, itemAmount)
0x004770D4 void User::SetSPBonusPercent(double)
0x007076D0 bool CMoveAction::SetMovingFlyingImpl(void)
0x00658C3C void ForwardMailFormHtmlBuilder::DisassemblePacket()
0x0058E084 void CDB::RequestManBookMarkDel(class User*, int)
0x00735FF0 bool NPCUnequipWeapon(class NpcSocket*, const unsigned char *)
0x00871A10 void CTrade::OnCreate(void)
0x0047BD1C bool BuilderCmd_social(class CSocket*, class User*, wchar_t *)
0x0053608C void CCreature::MoveToLocationRelative(class CAbstractCarrier*, int,int,int)
0x0076D32C void COlympiadTeam::ObserverEnd(void)
0x0083B91C bool CSkillEffect_p_physical_attack_by_material::Pump(class CCreature*, const class CSkillInfo*, int)
0x005C3D00 bool ReplyBlockList(class CDBSocket *, const unsigned char *)
0x008FB720 bool User::HaveAgathion(int)
0x0073D664 bool NpcGetBattleRoyalPledgeList(class NpcSocket*, const unsigned char *)
0x0079BB8C void CMPCCRoom::GetPartyMasterList(class std::xvectorclass CSPointerclass CRoomMember,class std::xallocatorclass CSPointerclass CRoomMember  &)
0x0084607C bool CSkillEffect_i_fatal_blow::ApplyBlowEffect(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double,bool)
0x00610800 void CEventMatch::ObserverHide(class CSocket*, class User*, int)
0x0068D4F4 bool CInventory::CheckAddable(int,__int64,bool)
0x006A9B90 void CKillPVPPointChecker::ResetAll(class User *)
0x005EE258 bool CDominionSiegeEntry::IsInSiegePledge(unsigned int)
0x0084C50C bool CSkillEffect_i_m_attack_by_abnormal::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x00489F4C bool BuilderCmd_telbookmark(class CSocket*, class User*, wchar_t *)
0x005C6448 bool ReplyCancelAgitAuction(class CDBSocket *, const unsigned char *)
0x004E3DF4 bool BuilderCmd_InZone(class CSocket*, class User*, wchar_t *)
0x005E6F84 void CDBSocketOp::DelPledgeEmblem(const unsigned char *)
0x008402B8 bool CSkillEffect_p_enlarge_storage::PumpStart(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpStartType) const
0x008C4C54 bool User::OnDuelAcceptStart(enum DuelType,int,int)
0x00595E58 void CDB::RequestSavePremiumItemForChar(int,int,wchar_t*, int,int,wchar_t*, int,int,char *)
0x00636B7C void CFortress::SetOwnership(class CPledge*, bool)
0x00810AF4 bool CContainer::PopCreature(class CCreature *)
0x008044E8 int __cdecl CResidenceDB::GetCastlePledgeList(class std::xvectorint,class std::xallocatorint &)
0x00805E20 int __cdecl CRestartOriginalManager::HaveRestartItem(class User *)
0x008815C8 class User *__cdecl CPCTrap::GetMaster(void)
0x0087BDA4 void CTransformCombatData::Init(void)
0x008AA2CC class FVector User::GetRestartPointInSiegeField(class CResidence *)
0x00494A3C bool BuilderCmd_killNPC(class CSocket*, class User*, wchar_t *)
0x007B0910 bool CUserRidingInfo::RideWyvern(class CPet *, double,double)
0x00589418 void CDB::RequestPackageSendToTarget(class User*, int,int,int,char*, int) const
0x005AE3C8 static bool ReplyHtmlBuilder_RP_UNREAD_MAIL_COUNT_EX(CDBSocket *pSocket, const unsigned char *packet)
0x00903CF0 bool CUserBookmark::ModifySlot(class User*, int,wchar_t*, int,wchar_t *)
0x00580C18 void CDB::RequestUpdateUserPledge(class User*, class CPledge *, int,enum PledgeType)
0x006D71DC bool CMiniGameAgit::PartyTeleportToGameArea(class CParty *)
0x0053D60C void CCreature::RemoveSkillUsableTimeAll(void)
0x00953A08 void CVehicleController::SetVehicle(class CVehicle *)
0x00912130 bool UserPacketEx::EndScenePlayer(class CSocket*, const unsigned char *)
0x0083DEFC bool CSkillEffect_p_mana_charge::Pump(class CCreature*, const class CSkillInfo*, int)
0x0083445C bool CSkillEffect_i_Enchant_Weapon_Rate::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x0083D064 bool CSkillEffect_p_critical_rate::Pump(class CCreature*, const class CSkillInfo*, int)
0x00414A78 void CAgitHTML::AgitBid1ReReply(int,int,__int64)
0x00891018 void User::SetFootEffect(enum FootEffectEnum,int)
0x0085CCBC void SSQSystem::TimerExpired(int)
0x0062BD8C void CFortress::ResetFacilityLevel(void)
0x00831520 bool CSkillOperateCondition_op_home::CanUse(class CCreature*, const class CSkillInfo *, class CObject *)
0x0047CD0C bool BuilderCmd_lotto_pause(class CSocket*, class User*, wchar_t *)
0x0048231C bool BuilderCmd_Targetable(class CSocket*, class User*, wchar_t *)
0x00675830 void CHtmlGenerator::AddValue(WCHAR *valueName, std::xwstring &value)
0x005B3598 bool ReplyExPacket(class CDBSocket*, const unsigned char *)
0x0084123C bool CSkillEffect_p_block_chat::PumpEnd(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpEndType) const
0x00965508 bool CWorld::GetOnVehicle(class CCreature*, class CVehicle*, class FVector)
0x004D6890 bool BuilderCmd_add_petition_chat(class CSocket*, class User *, wchar_t *)
0x00844ABC bool CSkillOperateCondition_enchant_range::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x007E96C4 void CPremiumServiceSocket::OnClose(void)
0x009261B8 void CUserSocket::ItemDebug(class User*, int)
0x0062888C void CFishingEventMgr::ShowEventSetting(class User *)
0x0059E798 static bool ReplyLoadSevenSignQuestInfo(CDBSocket *socket, const unsigned char *packet)
0x0085A648 bool SSQSystem::Close(void)
0x00906198 void User::OnChangeSubJobBegin(void)
0x00947398 bool HtmlCmdWithdraw(class CUserSocket*, class User*, const wchar_t*, const wchar_t *)
0x0047A70C bool BuilderCmd_petans(class CSocket*, class User*, wchar_t *)
0x00607E78 void CDxSetFortressFacility::DoServerJob(void)
0x00801AD0 void CResidenceDB::ChangeAllResidenceTaxRate(void)
0x00586008 void CDB::RequestQueryCastleSiegeForDismiss(class User*, class CPledge*, unsigned int)
0x004882C4 bool BuilderCmd_xmastree(class CSocket*, class User*, wchar_t *)
0x00844574 bool CSkillEffect_i_fishing_reeling::Instant(class CCreature *, class CObject *, const class CSkillInfo*, class CSkillAction2*, double)
0x00417C80 void CAirShip::OnLanding(int,int)
0x007FC6AC void CResidence::SendDecoInfo(class CUserSocket *)
0x00733CC8 bool DeleteOlympiadTradePoint(class NpcSocket*, const unsigned char *)
0x0060D77C int __cdecl EtcManiUpdateUserItemBaseAttribute::Assemble(class CPacketHelperEx16384 &)
0x0060D8A8 int __cdecl EtcManiRollbackUserItemBaseAttribute::Assemble(class CPacketHelperEx16384 &)
0x006D2954 int __cdecl CSmartQueue::CreateItems(void)
0x00677384 bool CInstantZone::CanBeCreated(enum CreateFailReason &)
0x0060CDEC int __cdecl EtcManiGiveItemByCastleSiegeCount::Assemble(char *, int)
0x0060D5FC int __cdecl EtcManiUpdatePledgeNameValue::Assemble(class CPacketHelperEx16384 &)
0x0060D6B4 int __cdecl EtcManiUpdateUserEventTime::Assemble(class CPacketHelperEx16384 &)
0x0060BBB4 int __cdecl EtcManiUpdatePledgeNameValue::Assemble(char*, int)
0x0060BEAC int __cdecl EtcManiUpdateUserEventTime::Assemble(char*, int)
0x0060C1A8 int __cdecl EtcManiUpdateUserItemBaseAttribute::Assemble(char*, int)
0x0060C54C int __cdecl EtcManiRollbackUserItemBaseAttribute::Assemble(char*, int)
0x00821360 class CSkillKey CSkillDB::GetSkillKeyByName(wchar_t *)
0x0062DEC0 void CFortress::SendResetFacilityLevelToCacheD(void)
0x00478D08 __int64 SSQSystem::GetCollectedPoint(enum SSQPart::type) const
0x00445EE0 bool AtomicRideWyvern::Do(void)
0x004C6E38 bool BuilderCmd::_NpcSkill(class User*, class CUserSocket *)
0x005446A4 void CCreature::__async_LookItems(struct CExecutionArgumentPad *)
0x006D563C void CMiniGameAgit::OnSetWinner(class CPledge *)
0x0056B808 void CCreatureController::DoAttack(struct AttackTargetDataType &,int,struct AttackTargetDataType [],int,enum AttackType)
0x008FACDC bool User::CanRide(class CPet*, bool)
0x007F0FD0 enum BlueRedTeam::Enum CPVPMatch::GetTeamType(wchar_t*, class CUserSocket *)
0x004FA368 enum BlueRedTeam::Enum CCleft::GetCleftWinner(const struct CCleft::CleftPoint [])
0x004AB354 bool BuilderCmd::change_evolution(class CSocket*, class User *, wchar_t *)
0x0055D4F4 void CCreature::_DeleteAllAcquireSkills(void)
0x0042D8FC bool CAirShipForFree::EnterWorld(int,int)
0x00592D1C void CDB::RequestSetAcademyMaster(unsigned int,unsigned int,unsigned int,unsigned int)
0x007D0F94 void CPledge::SetNewEmblem(unsigned int)
0x00868C80 void CTeamBattleAgit::WaitFinal(void)
0x0062BB2C void CFortress::MaintainOwnership(void)
0x0053A794 bool CCreature::ValidatePAttack(void)
0x008B5324 enum DuelStartErrorType User::CheckDuelStartCondition(bool)
0x00577160 void CCursedWeaponMgr::Init(void)
0x007FBA04 void CResidence::ReadUnlock(void)
0x00537B04 void CCreature::FearAction(void)
0x00421EC8 void CThreadLocalWorldMap2100000,50000,8::BroadcastToNeighborDist(class CObject*, int,class FVector,int,const char*, ...)
0x005511A8 void CCreature::EraseCubicNotSelfCast(void)
0x00576BD8 void CCursedWeapon::ChangeOwner(class User*, class User *)
0x00592484 void CDB::RequestAddCursedWeapon(int,int,int,int,double,int,int,int,int)
0x0073E400 bool NpcQueryTeamBattlePledge(class NpcSocket*, const unsigned char *)
0x00561CB4 void CCreature::_CheckBuffLock(void)
0x0054A098 void CCreature::CheckAbnormalVisualEffect(void)
0x0055CB14 void CCreature::ValidateParameters(void)
0x006B49EC void CL2Time::ResetAllUserVoteData(void)
0x0053D83C void CCreature::GetAttackTypeValue(const class CSkillInfo*, int &,int &)
0x007D1558 void CPledge::UpdateInfoWindowPacket(void)
0x00621D80 bool CFieldCycleSystem::AddField(int,class CFieldCycle *)
0x0076EB7C bool COlympiadTeam::IsValidSubjob(void)
0x0052A43C void CSharedCreatureData::ValidateCP(double)
0x007D1660 void CPledge::Offline(class User *)
0x007F6F64 bool CPVPMatchSystem::StartMatch(unsigned int,unsigned int,unsigned int)
0x00796614 bool CPartyMatchingWaitingRoom::IsInvitable(class User *)
0x0093F7F0 bool CUserSocket::_LoginPacket(wchar_t*, int,int,int,int,int)
0x00439DCC void CArea::AddSkillInfo(class CSkillInfo *)
0x00633320 int __cdecl CFortress::ContractWithCastle(class CCastle *)
0x006369F4 int __cdecl CFortress::UnregisterSiege(unsigned int)
0x0063AD84 int __cdecl CFortressSiege::GetNumBarracksCaptured(void)
0x0063C098 int __cdecl CFortress::RegisterSiege(unsigned int)
0x00627790 int __cdecl CFishingEventMgr::GetBreakTimeSec(void)
0x00622694 int __cdecl CFishingController::GetFishingExperienceLevel(void)
0x00630810 int __cdecl CFortress::GoIndependent(void)
0x00632D70 int __cdecl CFortressSiege::GetNumFlagInWorld(void)
0x0040E4C8 void CAgitHTML::AgitMaid(void)
0x0063CEC0 int __cdecl CFortress::GetNumBarracksCapturedInSiege(void)
0x0062BC8C int __cdecl CFortress::GetNumBarracks(void)
0x008D9F24 void User::PayTeleportAddItem(int,int)
0x00651E04 class CHenna *__cdecl CHennaDB::Find(int)
0x0096FA30 void CWorld::Spell(class CCreature &,class CObject &,int,int)
0x008C90A8 bool User::OnRequestUserCommand(int)
0x008955A8 void User::SendLevelUpNPCEvent(void)
0x0053117C void CCreature::SetInZoneID(unsigned int)
0x0071008C bool CSkillAction2::CheckEnergySoul(class CCreature &,class CSkillInfo*, bool)
0x00479A94 bool BuilderCmd_friendaddon(class CSocket*, class User*, wchar_t *)
0x004693F4 void CBossRecordRound::MoveToNextRound(void)
0x0046AA44 int __cdecl CBossRecordList::AssembleBossRecord(char*, int,int *)
0x0046ABEC int __cdecl CBossRecordRanking::GetRank(int)
0x0045DEBC void CBlockUpsetManager::ReadyPlayerToStart(enum BlueRedTeam::Enum,class User &)
0x008DB388 void User::CancelRecipeStore(void)
0x008DCC2C bool SharedReuseDelaysOfItems::UseDelayShareItem(int,int,int,int *)
0x00479D1C bool BuilderCmd_observer_end(class CSocket*, class User*, wchar_t *)
0x0045D8DC int __cdecl CBlockUpset::GetCombatFinishRemainSec(void) const
0x0045DD94 int __cdecl CBlockUpsetManager::GetRelation(class User &,class User &)
0x00461C48 int __cdecl CBlockUpset::AddBlockUpsetPoint(class User &,int)
0x00461FFC int __cdecl CBlockUpsetManager::IsBlockUpsetWaitingPlayer(int)
0x0048072C bool BuilderCmd::showeventsetting(class CSocket*, class User *, wchar_t *)
0x00463504 int __cdecl CBlockUpsetManager::AddBlockUpsetPoint(class User &,int)
0x0046A5FC int __cdecl CBossRecordList::GetTotalBossPoint(void)
0x0058BAAC void CDB::RequestResetMiniGameAgit(unsigned int)
0x006E22A0 void CMonRaceDB::BroadCastMusic(void)
0x0089516C bool User::CanGetOnVehicle(void)
0x007776D0 void COwnThing::OnDestructed(class CCreature *)
0x005864AC void CDB::RequestBBSList(class User *, int,int,int)
0x007D53B0 void CPledge::ReplyGraduateAcademy(class User *)
0x004CBB68 bool CObjectMapclass User,8191,5,class RWLock::ExistKey(int)
0x009037BC int __cdecl CUserBookmarkSetting::HaveAddItem(class User *)
0x008886FC int __cdecl CUndergroundColosseum::CheckRegisterParty(unsigned int)
0x0075BFA4 void CContributeData::DistributeMPCC(class CCreature *, class std::xmapclass CMultiPartyCommandChannel*, double,struct std::lessclass CMultiPartyCommandChannel*, class std::xallocatorstruct std::pairclass CMultiPartyCommandChannel* const,double  &,class std::xmapunsigned int,double,struct std::lessunsigned int,class std::xallocatorstruct std::pairunsigned int const ,double  &,double &,double,double,double,double,unsigned long,int,int)
0x008845C4 int __cdecl CUndergroundColosseum::GetRegisteredPartyIndex(unsigned int)
0x0072F874 bool NpcInstantZoneEvent(class NpcSocket*, const unsigned char *)
0x0082F28C bool CSkillOperateCondition_not_in_underwater::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x006E1970 void CMonRaceDB::Insert(class CMonRaceData *)
0x009148F8 bool ReplyDismissPartyRoom(class CSocket*, const unsigned char *)
0x0057DBB4 void CBitStorage1024,int,32::GetFlagAll(char*, int)
0x006A2F30 bool CQuestItemDB::DestroyQuestItem(class User*, int,bool)
0x0046DD38 void CBotChecker::Init(class User *)
0x0045DA04 void CBlockUpsetManager::InitSetting(void)
0x008F30C4 bool User::IsSkillAcquireableItem(class CItem &,enum User::CheckCrystalType)
0x0075A0D8 void CTLPipeBaseunsigned int,1000000,8::Read(class CTLPipeBaseunsigned int,1000000,8::CReadCallback *)
0x007ABBD8 bool CSummon::IsEnemyTo(class CCreature *)
0x0058A4E4 void CDB::RequestSaveControlTowerStatus(class CControlTower *)
0x00481460 bool BuilderCmd_show_fish_rewardlist(class CSocket*, class User*, wchar_t *)
0x008193B4 void CSiegeAgit::SendSiegeAttackerList(class CUserSocket*, class User *)
0x00725BD8 void CNPC::SendNPCInfo(class User*, int,class FVector,int,bool)
0x0085D8B4 bool SSQSystem::OnCastleSiegeEnd(class CCastle *)
0x006509B4 void CGameInfoPipeline::_Add(wchar_t*, ...)
0x007327D4 bool NpcChangeStopType(class NpcSocket*, const unsigned char *)
0x006D56F4 class CMiniGameAgit *__cdecl CMiniGameAgit::GetMiniGameAgit(int)
0x004AB680 bool BuilderCmd::scene_play(class CSocket*, class User*, wchar_t *)
0x00897B40 bool User::ValidateOrgHPRegen(void)
0x00618190 int __cdecl CEventMatchBuilderCommandParser::Parse_leader(class CSocket*, class User *, wchar_t *)
0x00816948 void CShortCut::Load(bool)
0x00840B3C bool CSkillEffect_p_hide::PumpEnd(class CCreature &,class CCreature*, const class CSkillInfo *, enum SkillPumpEndType) const
0x0095375C void CTLPipeBaseunsigned int,100,8::CThreadPipe::Write(const unsigned int &)
0x006B3BB8 CL2StatusWnd::~CL2StatusWnd(void)
0x00971D10 void CWorld::DoAsyncPickItem(class CItem *)
0x006FD584 SetShortTimeStamp()
0x006DA7E0 bool CMiniGameAgitRegistPledgeEntry::Regist(unsigned int,int,bool)
0x006E66DC void CMonRaceHTML::MonRaceBuy3(int,int,int)
0x00462788 void CBlockUpset::Init(int,class CBlockUpsetManager &)
0x00822560 void CSkillDB::Add(class CSkillInfo *)
0x008A80B0 void User::SendInvenHennaList(void)
0x005614B8 void CCreature::OnGotDamage(class CCreature *, double)
0x004BC7B0 bool BuilderCmd::register_dominion_pledge(class CSocket*, class User *, wchar_t *)
0x006784FC int __cdecl CInstantZone::GetUserCount(void)
0x0067784C int __cdecl CInstantZone::GetTimeLimitLeft(class User*, int,int)
0x006770C8 int __cdecl CInstantZoneConst::GetNextResetBindingDay(int,int)
0x00677044 int __cdecl CInstantZoneConst::GetLatesetResetBindingDay(int,int)
0x00676E0C int __cdecl CInstantZoneGroup::GetNextResetBindingDay(int,int)
0x00677F98 int __cdecl CInstantZoneGroup::GetLatestBindingTime(void)
0x0068AC68 int __cdecl CInventory::ValidateCarringWeight(void)
0x00858A80 void CSocket::Send(const char*, ...)
0x008F35E4 void User::ChangeTarget(class CObject*, enum ChangeTargetReason)
0x004D8380 bool BuilderCmd_view_sociality(class CSocket*, class User*, wchar_t *)
0x00811574 class CContainer *__cdecl CContainerDB::GetContainer(int)
0x00860098 void CStaticObject::SetOrgTargetable(bool)
0x0071043C bool CSkillAction2::CheckCondition(class CCreature *)
0x0067B350 int __cdecl CInstantZoneDB::GetInstantZoneTypeId(const wchar_t *)
0x0067CC20 bool CInstantZone::GetCollisionCheck(class CPlaneCollision *)
0x0058BB64 void CDB::RequestChangeTimeLimit(wchar_t*, int,int,int)
0x006B4C98 void CL2Time::SetTime(unsigned int)
0x008CD35C bool User::SendDiePacket(void)
0x00592B8C void CDB::RequestDelSubPledgeSkill(unsigned int,enum PledgeType,unsigned int)
0x0094D500 bool HtmlCmdMatch(class CUserSocket *, class User*, const wchar_t*, const wchar_t *)
0x008F8DF0 void User::ResetAllEnchantSkill(class CUserSocket *)
0x00423994 void CAirShip::LoadCannon(class CNPC *)
0x007771BC void COwnThing::DecideDistance(class CMoveToTargetShareData*, class CSmartID)
0x0088BB78 void User::SendItemDecreaseSystemMessage(int,__int64,int,bool)
0x009A2F7C static __int64 FindInTable(ObjectFieldType field, TCHAR* str)
0x00479C44 bool BuilderCmd_tradeoff(class CSocket*, class User*, wchar_t *)
0x005020CC void CCommCli::CreateThread()
0x00917254 bool ChooseInventoryAttributeItem(class CSocket*, const unsigned char *)
0x00561A08 void CCreature::CubicActionTimer(void)
0x0059FA24 bool ReplyLoadFieldCycleInfo(class CDBSocket*, const unsigned char *)
0x004263FC void CAirShip::OnDelete(enum AirShipDespawnReason)
0x00447228 bool AtomicCreateSubPledge::Do(void)
0x00585390 void CDB::RequestModifyPledgeName(unsigned int,wchar_t *)
0x0083407C bool CSkillEffect_i_Enchant_Armor::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x007FF8F4 void CResidence::GoTerritory(class CCreature &,const enum TerritoryType::Enum)
0x005AC098 ReplyGetPledgeEmblem(CDBSocket *socket, const unsigned char *packet)
0x004AA0E8 bool BuilderCmd::get_dominion_end(class CSocket*, class User *, wchar_t *)
0x004B0CF0 bool BuilderCmd::see_bot_top10(class CSocket*, class User*, wchar_t *)
0x0081ED64 void CSkillInfo::SetRideState(class std::xvector__int64,class std::xallocator__int64 *)
0x0042F514 void CAirShipAreaDB::CheckAirShip(class CAirShip *)
0x00861CB4 void CThreadLocalWorldMap210000,20000,8::Push(int,const class FVector &,class CObject *)
0x0049ACD4 bool BuilderCmd_siege_list(class CSocket*, class User*, wchar_t *)
0x005815D0 void CDB::RequestUseItem(class CItem*, class User*, __int64) const
0x00849944 bool CSkillEffect_i_bookmark_teleport::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2 *, double)
0x005FD190 void CDuelManager::EndDuel(class CDuel *)
0x00589970 void CDB::RequestDepositItemEx(int,int,class User*, int,int,int,char *) const
0x00519118 void CControlTower::OnMidVictory(void)
0x0068FAFC void CTLPipeBaseunsigned int,900000,8::Read(class CTLPipeBaseunsigned int,900000,8::CReadCallback *)
0x006BF804 void CManor::SaveNowManorInfo(void)
0x00589140 void CDB::RecipeMakeItems(class User*, int,int,int,int,char *) const
0x006A2180 class CObject *__cdecl CWeapon::Copy(void)
0x006D4A08 class CObject *__cdecl CMerchant::Copy(void)
0x0071B08C class CObject *__cdecl CNPC::Copy(void)
0x008B7AEC class FVector User::GetShelterPos(void)
0x0069BAE4 bool CItemConstInfo::HasEquipConditionType(enum EquipConditionType)
0x009552AC void CVehicleController::Start(void)
0x00880524 class CObject *__cdecl CPCTrap::Copy(void)
0x00881DC0 class CObject *__cdecl CWorldTrap::Copy(void)
0x0062BF9C void CFortressSiege::StartTimer(void)
0x0059AD78 void CDB::DepositPet(class User*, class CPet *)
0x0070158C bool CMoveRelativeAction::SetMovingIntoVehicleImpl(void)
0x00844BA4 bool CSkillOperateCondition_can_bookmark_add_slot::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x0057E8AC bool CDB::AuthRequestAgeKoreanStyle(int)
0x008EF138 void User::SetPledgeMasterSkill(void)
0x0047A4B4 bool BuilderCmd_netping(class CSocket*, class User*, wchar_t *)
0x008FA964 void User::PetLevelChanged(int,int)
0x0062EFB4 void CFortress::ResetOwnerRewardInfo(void)
0x00650050 void CGameInfoPipeline::_CreateNewGIPFile(int,int,int,int,int)
0x0076912C int __cdecl COlympiadUser::GetTeamId(void)
0x0052F2A8 void CCreature::SetPrivateID(int)
0x00588A04 void CDB::ChangePetName(class CPet*, const wchar_t *)
0x004ADC30 bool BuilderCmd::set_country(class CSocket*, class User*, wchar_t *)
0x00482D78 bool BuilderCmd_PlayScene(class CSocket*, class User *, wchar_t *)
0x004466D8 bool AtomicSetTicketBuyCount::Do(void)
0x0044A18C bool AtomicShowQuestFHTML::Do(void)
0x00737C0C bool NpcGetRegistrySize(class NpcSocket*, const unsigned char *)
0x0049CD50 bool BuilderCmd_char_stop(class CSocket*, class User *, wchar_t *)
0x0084B258 bool CSkillEffect_i_hp_drain::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x006C4570 void CManor::RollProcureDice(struct ProcureTempData*, class User *)
0x0072255C bool CResidenceDB::IsSiegeAgit(int)
0x006965B4 bool CItem::EnchantAttributeItemWeapon(class CItem*, class User*, enum AttributeTypeEnum,int)
0x0049D5CC bool BuilderCmd_set_partyroom_waiting_count(class CSocket*, class User*, wchar_t *)
0x005206D8 int __cdecl CCCRecordBoard::AddKillPoint(class User *, int)
0x007696B4 bool COlympiadUser::SetReturnPos(class FVector &,bool)
0x004FB0E4 bool CCleft::_SelectCat(enum BlueRedTeam::Enum,int)
0x00954A20 class FVector CVehicle::GetAdjustPos(double,class FVector)
0x00693FA8 __int64 CItem::GetBaseAttributeCancelCommision(void)
0x0080FA10 bool CSharedFactoryclass CCreature,class CSharedCreatureData,class CSharedCreatureConstant,&class CSharedDefine const SharedDefine_Creature::Pop(int,int &)
0x0075DE1C void CContributeData::Distribute(class CCreature*, class CCreature *)
0x005FD8AC enum DuelTeamType CDuel::GetLoser(void)
0x00847C04 bool CSkillEffect_i_physical_attack_hp_link::Instant(class CCreature *, class CObject *, const class CSkillInfo *, class CSkillAction2*, double)
0x0071B7F4 void CNPC::OnNpcSocketClose(void)
0x004EA620 void CCastle::ValidateLifeControlLevel(bool)
0x00479110 bool BuilderCmd_bbssysinfo(class CSocket*, class User*, wchar_t *)
0x0088D288 bool User::IsMyParty(class CCreature *)
0x0091C220 bool AttackPacket(class CSocket*, const unsigned char *)
0x008B5998 void User::UpdateInZoneRestrictionTime(int,int,bool)
0x0083D968 bool CSkillEffect_p_avoid_agro::Pump(class CCreature *, const class CSkillInfo*, int)
0x008D435C __cdecl User::User(wchar_t*, wchar_t*, unsigned int,unsigned int,unsigned int,int,int,int,int,int,int,int,int,double,double,unsigned int,__int64,int,int,int,unsigned int,unsigned int,int,int,int,int,int,int,int,int,int,wchar_t*, unsigned char*, unsigned int,unsigned int,unsigned int,int,int,int,int,int,int,int,int,int,int,bool)
0x00600B14 void CIndividualDuel::OnPlayerLeaveWorld(class User *)
0x00601848 void CPartyDuel::OnPlayerDie(class User*, class CCreature *)
0x008CAF18 bool User::IsPartyJoinable(void)
0x0067E8F8 bool CInstantZone::CheckEnterConditionCommon(class User*, struct InstantZoneEnterFailInfo &)
0x00942F84 bool HtmlCmdHeroes(class CUserSocket*, class User*, const wchar_t*, const wchar_t *)
0x0097E290 bool CYearCatchEventMgr::IsEventPeriod(void)
0x004477EC bool AtomicUpdatePCCafePoint::Do(void)
0x0059F204 static bool ReplyFishingEventFinish(CDBSocket *socket, const unsigned char *packet)
0x005F8578 void CDoor::ValidatePlaneCollision(void)
0x0056B240 bool CCreature::InfectedSkillBy(class CCreature*, const class CSkillInfo*, const class CSkillInfo*, double,int)
0x00477444 void User::StartBuyProduct(void)
0x0086C77C class FVector CTerritory::PickRandomPos(bool)
0x0076BCC4 bool COlympiadPacket::ObserverEnd(class CSocket*, const unsigned char *)
0x004807D4 bool BuilderCmd::shownpcsetting(class CSocket*, class User*, wchar_t *)
0x00454304 void CAuctionAgit::SetNextCost(int,int)
0x006DEBE0 __cdecl CMonRacePacket::CMonRacePacket(int)
0x0047BE34 bool BuilderCmd_DebugNPC(class CSocket*, class User*, wchar_t *)
0x006976C0 void CItem::OnCreate(void)
0x008403E8 bool CSkillEffect_p_enlarge_abnormal_slot::Pump(class CCreature*, const class CSkillInfo*, int)
0x0052EFE8 bool CCreature::IsShieldDefend2(class CCreature &,double)
0x005990A8 void CDB::RequestSaveNoblessType(class User *, int)
0x00967610 void CWorld::__async_AsyncStaticObjectDisappear(struct CExecutionArgumentPad *)
0x0059EDAC static bool ReplyGetNoblessAchievements(CDBSocket *socket, const unsigned char *packet)
0x00687FC8 __int64 CInventory::GetAdenaAmount(void)
0x00600D2C void CIndividualDuel::OnCloseUp(void)
0x0084DE74 bool CSkillEffect_p_defence_trait::Pump(class CCreature*, const class CSkillInfo*, int)
0x005959C0 void CDB::RequestLoadDailyQuest(unsigned int)
0x0080D578 class FVector CSetting::GetRestartPoint(enum RaceType,class FVector,bool,int)
0x006000E0 void CIndividualDuelManagement::EndDuel(class CDuel *)
0x0044A9E4 bool AtomicCastBuff::Do(void)
0x0059EA68 static bool ReplyLoadMarketPriceList(CDBSocket *pSocket, const unsigned char *packet)
0x005FDE3C void CPartyDuel::OnStart(void)
0x008E7248 bool User::EquipItem(class CItem*, enum SlotType)
0x0091E604 bool StartRotatingPacket(class CSocket*, const unsigned char *)
0x0092AD94 bool PledgeExtendedInfo(class CSocket*, const unsigned char *)
0x007030D4 bool CMoveRelativeAction::OnTick(void)
0x0059288C void CDB::RequestSetPledgePowerGrade(unsigned int,int)
0x008FF5F4 void User::EatStriderFood(int)
0x00758504 bool CContributeData::PickableIn5Sec(class CCreature *)
0x0045EA6C void CBlockUpsetManager::ShowBlockUpsetInfo(class User &)
0x00953A88 class FVector CVehicle::ConvRelToAbs(class FVector) const
0x004534FC bool CAuctionAgit::CheckSendable(int)
0x00415E6C void CAgitHTML::AgitMaidInfo(void)
0x0049DBA4 bool BuilderCmd_ns(class CSocket*, class User*, wchar_t *)
0x00867934 void CTeamBattleAgit::WaitBattleRoyal(void)
0x007EB310 void CPremiumService::CreateThread(void)
0x008E55C0 bool User::ReplyEnchantItem(class CItem*, __int64,class CItem*, __int64,class CItem*, int)
0x006D6954 bool CMiniGameAgitNpcFuncHandler::PreCheck(void)
0x0084FCFC bool CSkillEffect_i_abnormal_time_change::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x0077E0C4 bool CParty::RouteAdena(class CItem *, class User *)
0x0076BDDC void COlympiadHtmlCommandHandler::MoveObserverField(class CSocket*, int)
0x00769774 bool COlympiadTeam::IsRegisteredUser(unsigned int)
0x004DAF60 bool BuilderCmd_delete_alliance_member(class CSocket *, class User*, wchar_t *)
0x0041B0F8 void CTLPipeBasestruct CTL_WorldMapNode2,3000,8::Write(int,const struct CTL_WorldMapNode2 &)
0x005C12D0 bool ReplyGiveItemToPet(class CDBSocket*, const unsigned char *)
0x007FCFFC void CResidence::SetNPCPledge(class CNPC*, int)
0x00737A34 bool NpcDeclareLord(class NpcSocket *, const unsigned char *)
0x00918128 bool UserPacketEx::TryToPutEnchantSupportItem(class CSocket*, const unsigned char *)
0x00676C1C int __cdecl ResetBindingDayHelper::FindLatestResetBindingDay(int,int,int,int)
0x005EF12C bool CDominion::IsPledgeInSiege(int)
0x00935AAC bool PledgeCrest(class CSocket*, const unsigned char *)
0x00919198 bool PledgeEmblem(class CSocket*, const unsigned char *)
0x00810260 bool CSharedFactoryclass CStaticObject,class CSharedStaticObjectData,class CSharedStaticObjectConstant,&class CSharedDefine const SharedDefine_StaticObject::Push(int,int &,int)
0x005EEDD4 bool CDominion::UnregisterPledge(int,bool)
0x00972280 bool CWorld::GetOffAirShip(class CCreature*, class CAirShip*, class FVector)
0x00579550 bool CCursedWeaponMgr::DestroyWeapon(class CItem*, class User *)
0x00500554 void CCleft::_BalanceTeam(void)
0x007669D4 void COlympiadField::DoFinishJobDraw(int)
0x0089BD04 bool User::ValidateStorageSlot(void)
0x0087BF84 bool CTransform::SetTransformData(class User *)
0x00544DA0 bool CCreature::ValidateBaseData(void)
0x0053A3C4 bool CCreature::ValidateBaseAttributeData(void)
0x0060606C void DxChangeSealOwner::DoServerJob(void)
0x0057BAEC void CCursedWeaponMgr::BuilderCmd_SetKillPoint(int,int)
0x00554168 bool CCreature::ValidateSkillMod(void)
0x0054B0BC bool CCreature::IsLockedBuff(int)
0x00965690 bool CWorld::GetOffVehicle(class CCreature*, class CVehicle*, class FVector,bool)
0x0083A310 bool CSkillEffect_i_pledge_send_system_message::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x0057EE4C void CDB::SendCacheVersion(void)
0x007106DC bool CSkillAction2::BeReadyToActivate(class CCreature*, int,int,bool)
0x00441E54 void AtomicGetOnAirShip::Dump(void)
0x0089BBEC void User::WriteNoblessAchievement(enum NoblessWinType,int)
0x00857968 bool CSkillEffect_i_distrust::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x00772FA0 void COlympiadHtml::Init(void)
0x005C202C bool ReplyPetDropItem(class CDBSocket*, const unsigned char *)
0x007A74F4 bool CPCCafeCouponEventMgr::Load(const bool)
0x007802F0 bool CParty::CheckRouteItem(class CItem*, class User *)
0x00464D1C void CBlockUpsetManager::ShowBlockUpsetState(int,class User &)
0x004E9354 void CCastle::ChangeOwner(class CPledge*, bool)
0x00519C64 void CCoretimeTeleportEventMgr::ShowEventSetting(class User *)
0x00860330 void CTLPipeBasestruct CTL_WorldMapNode2,20000,8::CThreadPipe::Write(const struct CTL_WorldMapNode2 &)
0x00580448 void CDB::RequestUpdateSubPledgeMaster(class CNPC*, class User*, class CPledge*, enum PledgeType,unsigned int)
0x007F5A38 bool CPVPMatchSystem::UnregisterUser(unsigned int,class User &,int)
0x006EF204 void CMultiPartyCommandChannel::GetAllParty(class std::xvectorclass CParty*, class std::xallocatorclass CParty* &)
0x0093D9F8 void CSocketLimiter::DeleteUserSocketPerIP(unsigned int)
0x00518D10 class CControlTower *__cdecl CControlTowerDB::GetControlTower(wchar_t *)
0x0071DF1C bool CNPC::GetOffAirShip(class CAirShip*, class FVector)
0x0076A814 void COlympiadUser::ObserverHide(bool,const class FVector &)
0x0092E9E4 bool UserExPacket(class CSocket*, const unsigned char *)
0x006D421C void CMerchant::SendSellList(class CUserSocket *)
0x005826CC void CDB::RequestResetUserNickname(unsigned int)
0x0067E6CC void CInstantZone::InitArea(void)
0x006C4488 void CManor::Set(enum ObjectFieldType,struct ProcureStruct *)
0x00680968 void CInstantZone::Activate(void)
0x00591B64 void CDB::RequestFishingEventGivePrize(class User *)
0x004993E8 bool BuilderCmd_lotto_cancel(class CSocket*, class User*, wchar_t *)
0x0067729C void CInstantZone::InitNPC(void)
0x00577838 void CCursedWeapon::Destroy(class User *)
0x006CFDF0 void CMemoHTML::MemoRead(const unsigned char* packet)
0x00592674 void CDB::RequestDelCursedWeapon(int)
0x00582AA4 void CDB::RequestDestroyItem(class CItem*, __int64,class User *)
0x008322B8 bool CSkillOperateCondition_can_enchant_attribute::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x006F987C void CMultiSellDB::Load(void)
0x008F0B94 bool CResidence::IsInBattleCampZone(const class FVector &)
0x008F14A8 void User::InstallBattleCamp(bool)
0x00450010 bool CAuction::CreateBid(int,__int64)
0x0079AFEC void CMPCCRoom::GetPartyList(class std::xvectorclass CParty*, class std::xallocatorclass CParty* &)
0x008349BC bool CSkillEffect_i_mp_per_max::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x00837890 bool CSkillEffect_i_blink::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x0087FEF4 void CWorldTrap::InSight(class CObject*, bool)
0x0089862C void User::ProcessUnderWaterEffect(void)
0x006F68F8 bool CMultiPartyCommandChannelRegistry::IsMPCCMemberPartyMaster(class User *)
0x0085F1F0 void CastlePledgeSnapshot::Start(void)
0x00911A08 bool UserPacketEx::DispelPacket(class CSocket*, const unsigned char *)
0x008ADE30 void User::BR_SendExtraCharInfo(class CUserSocket*, bool)
0x007BF968 static bool RequestCharList2(CPetitionSocket *socket, const unsigned char *packet)
0x008F29A4 bool User::BasicAction(int,bool,bool,enum StopType)
0x006A4E54 bool CItemEquipCondition_chao::CheckPrivate(class CCreature*, class CItem *)
0x0052EB1C __int64 CCreature::GetResurrectExp(class CCreature*, double)
0x0041C5B0 void CAirShip::OnMoveToLocationPacket(class User*, const unsigned char *)
0x00841304 bool CSkillEffect_p_block_party::PumpStart(class CCreature &,class CCreature *, const class CSkillInfo*, enum SkillPumpStartType) const
0x008172E0 bool CShortCut::AddShortCut(int,int,int,int,bool,int)
0x0087C408 void CTransformForCombat::_SetCombatData(class User *)
0x0076D83C void COlympiadTeam::Win(class COlympiadTeam *, struct OlympiadGameInfo &)
0x00795E6C void Make(CPacketHelper& helper)
0x00465F00 void CBlockUpset::_BalanceTeam(void)
0x008A4B3C bool User::TradeItemAdd(const unsigned char *)
0x005822F4 void CDB::RequestSetPledgeEmblem(class User *, class CPledge*, const unsigned char*, int)
0x005A8100 bool ReplySetAcademyMaster(class CDBSocket*, const unsigned char *)
0x0059309C void CDB::RequestUpdateCommPledgeMasterResult(const unsigned char *)
0x006072DC void CResetResidenceDeco::DoServerJob(void)
0x005B0E10 bool ReplyLoadIntervalAnnounce(class CDBSocket*, const unsigned char *)
0x00805F58 void CRestartOriginalManager::AddRestartItem(int)
0x00840330 bool CSkillEffect_p_enlarge_storage::PumpEnd(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpEndType) const
0x0059D028 void CDB::RequestResetTeamBattleAgitPledge(class CTeamBattleAgit *)
0x006FBEE8 bool CAttackWaitAction::OnStart(void)
0x00710244 bool `anonymous-namespace::CheckOrDeleteItem(class CCreature *, const int,const __int64,bool)
0x0071AFB4 bool CNPC::ValidateOrgSpeed(void)
0x00480F28 bool BuilderCmd::checkbossalive(class CSocket*, class User*, wchar_t *)
0x0085CBD4 bool SSQSystem::ChangeCycleMode(int,int)
0x0068A650 bool CInventory::HaveItemByClassId(int,__int64,bool)
0x00523FCC int __cdecl CSharedFactoryclass CCreature,class CSharedCreatureData,class CSharedCreatureConstant,&class CSharedDefine const SharedDefine_Creature::RemoveByIndex(int)
0x0067E2CC void CInstantZone::_ClearInstantZoneUserMap(void)
0x0086AAA0 void CTeamBattleFlag::Disappear(void)
0x00496E4C bool BuilderCmd_set_bp(class CSocket*, class User*, wchar_t *)
0x0076B6B4 void COlympiadSystem::SaveOlympiadRecord(int,int,int,int,int,int,enum GameRuleType)
0x00636ECC void CFortress::BroadcastSystemMessageW(int,bool)
0x0047F458 bool BuilderCmd_EventMatchOp(class CSocket*, class User*, wchar_t *)
0x005F2A08 void CDominionSiegeEntry::SendDominionScriptEvent(int,int,int)
0x00430E38 void CShipController::__async_AsyncTimerExpired(struct CExecutionArgumentPad *)
0x00584BA8 void CDB::RequestGetPledgeCrest(class User*, unsigned int)
0x0047C128 bool BuilderCmd_ask_now(class CSocket*, class User*, wchar_t *)
0x005AEBA0 static bool ReplyHtmlBuilder_RP_SET_PLEDGE_ANNOUNCE_EX(CDBSocket *pSocket, const unsigned char *packet)
0x005AEA58 static bool ReplyHtmlBuilder_RP_GET_PLEDGE_ANNOUNCE_EX(CDBSocket *pSocket, const unsigned char *packet)
0x005AE8C0 static bool ReplyHtmlBuilder_RP_DELETE_BLOCK_BATCH_EX(CDBSocket *pSocket, const unsigned char *packet)
0x005AE728 static bool ReplyHtmlBuilder_RP_DELETE_FRIEND_BATCH_EX(CDBSocket *pSocket, const unsigned char *packet)
0x005AE578 static bool ReplyHtmlBuilder_RP_SEND_PLEDGE_MAIL_EX(CDBSocket *pSocket, const unsigned char *packet)
0x006E0AB8 bool CMonRaceDB::RunRace(void)
0x005AE270 static bool ReplyHtmlBuilder_RP_DELETE_MAIL_EX(CDBSocket *pSocket, const unsigned char *packet)
0x005AE0D8 static bool ReplyHtmlBuilder_RP_MODIFY_SEND_TEMP_MAIL_EX(CDBSocket *pSocket, const unsigned char *packet)
0x0092D7E4 bool RequestNetPing(class CSocket*, const unsigned char *)
0x00597E64 void CJobFinishSignal::SetCastleLoaded(void)
0x00594EDC void CDB::RequestLoadUI(int,int)
0x006664AC static bool ReplyHtmlBuilder_RP_MODIFY_TEMP_MAIL_EX(CDBSocket *pSocket, const unsigned char *packet)
0x00666314 static bool ReplyHtmlBuilder_RP_SEND_MAIL_EX(CDBSocket *pSocket, const unsigned char *packet)
0x0047B518 bool BuilderCmd_undying(class CSocket*, class User*, wchar_t *)
0x006E6164 void CMonRaceHTML::MonRaceBuy2(int,int)
0x00540138 bool CCreature::SetVisible(bool)
0x0089B944 void User::ValidateHenna(void)
0x0075BD34 void CContributeData::ArrangePartyContribute(class std::xmapclass CParty*, double,struct std::lessclass CParty*, class std::xallocatorstruct std::pairclass CParty* const,double  &,class CParty*, double)
0x006D40A4 void CMerchant::ReportOrt(char *caller, int line, int nWorkType)
0x008500B4 bool CSkillEffect_t_hp_fatal::Tick(class CObject*, double,unsigned int)
0x00606810 void DxSaveOlympiadRecord::DoServerJob(void)
0x0084D548 bool CSkillOperateCondition_can_refuel_airship::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x007554A0 bool NpcCheckRegisterParty(class NpcSocket*, const unsigned char *)
0x008170F8 __cdecl CShortCut::CShortCut(class User &)
0x0091F0A4 bool RestoreCharacter(class CSocket *, const unsigned char *)
0x006EE380 void CMultiPartyCommandChannel::UpdateSharedPartySidList(void)
0x0083E254 bool CSkillEffect_p_area_damage::Pump(class CCreature*, const class CSkillInfo*, int)
0x00833A34 bool CSkillEffect_i_hp_self::Instant(class CCreature *, class CObject *, const class CSkillInfo*, class CSkillAction2*, double)
0x00405508 bool NewInspectorAgent::QuerySecondImpl(void)
0x0057171C void CCreatureController::__async_Disappear(struct CExecutionArgumentPad *)
0x005BE254 bool ReplyGetContributionRelatedPledge(class CDBSocket*, const unsigned char *)
0x007F48F8 class CPVPMatch2 *__cdecl CPVPMatchSystem::GetMatchByUserLevel(int)
0x00531970 bool CCreature::IsCheckBot3(int)
0x007CD9E4 bool CPledge::IsSubMaster(unsigned int)
0x00479710 bool BuilderCmd_eventview(class CSocket*, class User *, wchar_t *)
0x0045CA20 bool CObjectMapclass CBattleCamp,1,5,class RWLock::DeleteObject(int,char*, int)
0x00597D8C void CJobFinishSignal::SetAllianceLoaded(void)
0x004184AC void CAirShipForFree::OnEnterWorld(void)
0x0083C118 bool CSkillEffect_p_luck::CheckPumpCondition(class CCreature *)
0x0088E640 void User::PlayVoice(const wchar_t*, int,int,int,int,int,int)
0x0081FB40 void CSkillInfo::SetTransformType(class std::xvectorint,class std::xallocatorint &)
0x0072E850 bool NpcCastleBanishOthers(class NpcSocket*, const unsigned char *)
0x005879A4 void CDB::RequestCreateAllianceByNpc(class CNPC*, class User *, class CPledge *, const wchar_t *)
0x0049CA3C bool BuilderCmd_escape_mode(class CSocket*, class User*, wchar_t *)
0x007EB1A8 void CPremiumServiceSocket::SendV(const char*, char *)
0x008AC5A4 void User::SendPrivateStoreMessage(class CUserSocket *, bool)
0x00615A9C void CEventMatch::SendTeamInfo(int,class CParty*, class CSocket*, int)
0x00691568 void CRegisterPendedStaticObjects::OnReceive(int)
0x007A680C void CPCCafeCouponEventMgr::ShowEventSetting(class User *)
0x0068F1C0 void CTLPipeBaseunsigned int,900000,8::CThreadPipe::Read(class CTLPipeBaseunsigned int,900000,8::CReadCallback *)
0x0058DE94 void CDB::RequestManBookMarkList(class User *, int)
0x0082EFAC bool CSkillOperateCondition_can_use_in_transform::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x008FA450 void User::ShowStriderHungryGauge(void)
0x007A0508 bool CPartyRoomRegistry::List(CPartyRoomListFilter& filter, xvectorCPartyRoomSP& partyRoomList)
0x00797200 bool CPartyRoom::UpdateInfo(CPartyRoomInfo& partyRoomInfo)
0x0065F95C void SendMailHtmlBuilder::SendMsg()
0x008F2CB4 class CObject *__cdecl User::SetSkillTarget(class CObject *)
0x0076A224 void COlympiadUser::ReadyForMatch(const class FVector &)
0x008A600C class CMultiPartyCommandChannel *__cdecl User::GetMPCC(void)
0x00843574 bool CSkillEffect_c_rest::Consume(class CObject*, double)
0x0090EDE0 bool CNickColorManager::IsNickColorItem(int)
0x0047D7E0 bool BuilderCmd_show_question_mark(class CSocket*, class User*, wchar_t *)
0x004E6AC8 bool BuilderCmd::user_pvpmatch(class CSocket*, class User*, wchar_t *)
0x0043BFE0 int __cdecl AtomicCreatePet::Assemble(char*, int)
0x00814D60 bool SharedPlatformInfo::IsOccupied(int)
0x00564BFC bool CCreature::DetachAllChannelling(void)
0x00622544 bool CFishingController::CheckFishingReelingCondition(void)
0x0083D7A8 bool CSkillEffect_p_damage_shield::Pump(class CCreature*, const class CSkillInfo*, int)
0x005714FC void CCreatureController::__async_AsyncTimerExpired(struct CExecutionArgumentPad *)
0x00782340 bool CParty::SweepItem(int,int,class User *)
0x005C3EB8 bool ReplyWarehouseItemsEx(class CDBSocket*, const unsigned char *)
0x00844CCC bool CSkillEffect_i_bookmark_add_slot::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2 *, double)
0x007B0A28 bool CUserRidingInfo::RideForEvent(class CPet*, int,double,double,int)
0x008ACAFC bool User::UpdateBuilder(int)
0x00734038 bool NpcSetEnchantOfWeapon(class NpcSocket*, const unsigned char *)
0x00504670 void RequestDeleteMemo ( User* pUser, int nMemoId)
0x0062C2A8 void CFortressSiege::SetProtectedNpcDie(void)
0x0047A644 bool BuilderCmd_pingoff(class CSocket*, class User*, wchar_t *)
0x007CC4FC void CPledge::MemberAffectedByWar(void)
0x006522CC void CHeroSystem::SetHeroWinCount(int,int)
0x00802B6C class CResidence *__cdecl CResidence::GetBattleFieldResidence(const class FVector &)
0x00885B70 void CUndergroundColosseum::SendEndMatchPacket(void)
0x006A5FB4 bool CItemEquipCondition_some_castle::CheckPrivate(class CCreature*, class CItem *)
0x007DA044 void CPledge::SendPledgeSkillListThatCanBeAcquiredBy(class User*, bool,bool)
0x006A526C class CResidence *__cdecl CResidenceDB::GetWhoseBattleFieldWithBattleCampZone(const class FVector &)
0x005F50C4 void CDominionManager::AnnounceMessage(int,int)
0x0040C204 class CResidenceDeco *__cdecl CResidenceDecoDb::FindResidenceDeco(unsigned int)
0x0040C2FC class CResidenceDeco *__cdecl CResidenceDecoDb::FindResidenceDeco(int,int)
0x008020F8 class CResidence *__cdecl CResidenceDB::GetResidence(wchar_t *)
0x00593A74 void CDB::RequestSaveFieldCycleInfo(int,int,int,int,int,int)
0x0089EBF4 void User::SendGIPCharacterInfo(bool)
0x005338B4 bool CCreature::ValidateCarryWeight(void)
0x00658F40 void DeleteMailHtmlBuilder::DisassemblePacket()
0x008D85C8 void User::SetRecipeStoreMsg(const unsigned char *)
0x009017FC bool CUserBasicAction::Add(int,wchar_t*, int)
0x00838FD8 bool CSkillEffect_i_cp::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x007FD638 class CResidenceData *__cdecl CResidenceDB::InitializeResidenceData(int)
0x0087F898 bool CTrap::Defuse(class CCreature *)
0x00758754 bool CContributeDataForEvent::PickableIn15Sec(class CCreature *)
0x00496674 bool BuilderCmd_viewcomment(class CSocket*, class User*, wchar_t *)
0x0044833C bool CSharedCreatureData::SetJournal(int,int)
0x0076D1F4 void COlympiadTeam::SetPlayer(enum OlympiadTeamEnum,int,const struct OlympiadStartPoint &)
0x006B82E4 __cdecl CLog::~CLog(void)
0x00453488 void CAuctionAgit::StartAuctionTimer(int)
0x0066CC58 void DeleteAllFriendConfirm::ExecuteInternal()
0x0085D774 bool SSQSystem::OnClose(void)
0x0066D14C void DeleteAllBlockConfirm::ExecuteInternal()
0x0091C3C8 bool ItemListPacket(class CSocket*, const unsigned char *)
0x006A09B0 void CAsset_ORT::ReportOrt(char *caller, int line, int nWorkType)
0x0093D820 int __cdecl CSocketLimiter::DecUserSocketPerIP(unsigned int)
0x0083C330 bool CSkillEffect_p_create_common_item::CheckPumpCondition(class CCreature *)
0x0080B668 void Server::Remove(SOCKET socket)
0x004EA3F0 void CCastle::StandByOnTimerExpired(long)
0x0056D480 void `anonymous-namespace::AssembleInstantEffects(class CCreature*, class CSmartID,class CSkillInfo*, class CSkillAction2*, short &,char*, const unsigned int,unsigned int &,class std::xvectorclass FVector,class std::xallocatorclass FVector *)
0x0076ECA4 bool COlympiadTeam::IsAlive(void)
0x00659898 void ModifyTempMailHtmlBuilder::BuildHtmlInternal()
0x0076CD94 bool COlympiadTeam::WaitingGame(void)
0x00635040 void CFortressSiegeRegistry::GetRegisteredPledgeList(class std::xvectorclass CPledge*, class std::xallocatorclass CPledge* &)
0x006534FC void CHeroSystem::ClearAchievements(int)
0x00415298 void CAgitHTML::AgitBid2(int,int,int)
0x0082EE84 bool CSkillOperateCondition_can_untransform::CanUse(class CCreature*, const class CSkillInfo *, class CObject *)
0x00467028 bool CBlockUpset::EnterBlockUpsetPlayer(class User &)
0x00825558 int __cdecl SkillEnchantOperator::CalculateBaseSp(const struct SkillEnchantInfo*, int)
0x005FF0E4 bool CPartyDuel::IsTeamAllDead(enum DuelTeamType)
0x005BD1D0 bool BBSGetSearch(class CDBSocket*, const unsigned char *)
0x00733408 bool NpcShowDirection(class NpcSocket*, const unsigned char *)
0x0094CDE0 bool HtmlCmdCreateAlliance(class CUserSocket*, class User*, const wchar_t*, const wchar_t *)
0x0057FB00 void CDB::RequestLoadMercenary(int) const
0x00709438 bool CMoveToTargetRelativeAction::OnTick(void)
0x00423B20 void CAirShip::UnloadAllCannons(void)
0x0073AC44 bool NpcShowSkillList(class NpcSocket*, const unsigned char *)
0x0091BCA8 bool UserPacketEx::BlockUpsetEnter(class CSocket*, const unsigned char *)
0x00888AB4 bool CUndergroundColosseum::CheckDistance(class FVector &,class FVector &,int)
0x0081A318 void CObserverRemains::SendObserverRemainsInfo(CUserSocket* pSocket)
0x005060DC static bool CommBBSWriteArticlePacket(CCommSocket *socket, const unsigned char *packet)
0x00635974 void CFortressSiege::SetMembersInSiege(void)
0x006435E0 void CGameEventMgr::Init(void)
0x0071D598 bool CNPC::OnNpcUseSkillPacket(int,int,enum NpcAttackMoveType,int)
0x0094A098 bool LinkHtmlPacket(class CSocket*, const unsigned char *)
0x0097A624 void CWorldPlaneCollision::Load(void)
0x005FFE48 void CPartyDuel::ForTeamPlayer(enum DuelTeamType,class CDuelPlayerOperation &)
0x005FB794 bool CDoppelganger::IsEnemyTo(class CCreature *)
0x006211F0 void CFieldCycleSystem::SendMapInfo(class User *)
0x005086F0 static bool CommManPledgeBBSPacket(CCommSocket *socket, const unsigned char *packet)
0x004AD9F4 bool BuilderCmd::skill_reuse_delay(class CSocket*, class User*, wchar_t *)
0x0050A47C static bool CommCheckVersion(CCommSocket *socket, const unsigned char *packet)
0x00505794 static bool CommDummyPacket(CCommSocket *socket, const unsigned char *packet)
0x00596AA0 void CDB::RequestLoadBotReportTopTen(class User *)
0x008B39D8 bool User::CheckPrivateStoreInventory(void)
0x004FA5E4 bool CCleft::CanAddCleftPlayer(enum BlueRedTeam::Enum,class User &)
0x007E5BFC void CPledgePenaltyViewer::RenderCanNotJoinAsPledgeMemberPenalty(CHtmlGenerator& generator)
0x008A5C78 void User::UnequipHenna(int)
0x0058218C void CDB::RequestSetPledgeCrest(class User*, class CPledge*, const unsigned char*, int)
0x00594C54 void CDB::RequestLoadInZoneRestriction(class User *)
0x00522AEC void CCrataeCube::AddKillPoint(class User*, int)
0x005DA398 bool GetPunishPacket(class CDBSocket*, const unsigned char *)
0x00478EE8 enum VariationKey::WeaponType VariationKey::GetWeaponType(class CItem *)
0x005CD7D0 bool ReplyManLoginMsgPacket(class CDBSocket *, const unsigned char *)
0x008860FC bool CUndergroundColosseum::CheckAllMemberDied(int)
0x00588F54 void CDB::IncreaseUserDuelCount(int)
0x0063858C void CFortressSiege::BroadcastSystemMessageW(int)
0x00917BA4 bool RequestShowAgitInfo(class CSocket*, const unsigned char *)
0x008DAA54 bool User::BuySell(int)
0x004A1968 bool BuilderCmd_SetNoRestart(class CSocket*, class User*, wchar_t *)
0x00586CB4 void CDB::RequestSaveDoorStatus(class CDoor *)
0x00874410 bool CTrade::Canceled(class User *)
0x004AD090 bool BuilderCmd::skill_test2(class CSocket*, class User*, wchar_t *)
0x004A5954 bool BuilderCmd_CachePingTime(class CSocket *, class User*, wchar_t *)
0x0083B854 bool CSkillEffect_p_physical_attack_by_material::CheckPumpCondition(class CCreature *)
0x00466788 void CBlockUpset::CheckLogoutPlayers(class std::xmapunsigned int,class CPVPMatchMemberInfo*, struct std::lessunsigned int,class std::xallocatorstruct std::pairunsigned int const ,class CPVPMatchMemberInfo*  &)
0x004F6D08 void CClanBBSHTML::ClanBBSList2( const unsigned char* packet)
0x0091CA60 bool CUserSocket::TradeDonePacket(class CSocket*, const unsigned char *)
0x008B5BB4 void User::SetInZoneRestriction(int,const unsigned char *)
0x007035F4 bool CTreeLoc::CanUseTree(class FVector,int)
0x0082E3A8 bool CSkillEffectAddBonusByWeaponType::CheckPumpCondition(class CCreature *)
0x0086D524 void CTerritory::AddTerritoryPoint(class FVector *)
0x008FA364 bool User::IsRidingOf(enum PetCheckCond,int)
0x0093519C bool GiveNicknamePacket(class CSocket*, const unsigned char *)
0x00859D18 void `anonymous-namespace::PushSSQSkillToUser(class User*, int,int)
0x006FF14C void CAttackAction::GenerateAttackTargetData(class CCreature *, class CObject *, struct AttackTargetDataType &,bool &,double)
0x007355C4 bool ShowBaseAttributeCancelWindow(class NpcSocket*, const unsigned char *)
0x0067CE80 void CInstantZoneManager::TimerExpired(int)
0x00919360 bool RequestSetPledgePowerGrade(class CSocket*, const unsigned char *)
0x004ECAB8 bool CCastle::IsCastleSiegeRegistered(class CPledge *)
0x007339B8 bool SendBufferToUser(class NpcSocket*, const unsigned char *)
0x005678B8 bool CCreature::DispelBySlot(enum AbnormalStatusSlotType,class CCreature*, int,class CSkillInfo*, enum SkillPumpEndType)
0x0086C06C bool CTerritory::IsOddNodes(const class FVector &)
0x0071B398 bool CNPC::IsEnemyToAsNpc(class CCreature*, bool)
0x005646D4 bool CCreature::_DeleteAbnormalStatus(const int,class CCreature*, const class CSkillInfo*, bool,enum SkillPumpEndType)
0x0068DC20 bool CInventory::GetItemListByClassID(class std::xvectorclass CSPointerclass CItem,class std::xallocatorclass CSPointerclass CItem  &,int,int,int,bool)
0x0068BFC0 bool CInventory::IsValidManipulation(class ItemManipList *)
0x00623CCC bool CFishingController::SendFishingEndPacket(void)
0x00504D54 void CCommCli::RequestClanBBSMake( User* pUser, int nWorldId, int nPledgeId , WCHAR * pledge_name, WCHAR* owner_name )
0x00504BC8 void CCommCli::RequestClanBBSView2( User* pUser, int nWorldId, int nPledgeId, WCHAR * pledge_name, int owner_id, WCHAR* owner_name, int alliance_id, WCHAR* alliance_name, int skill_level, int nMemberCount)
0x005048A0 void CCommCli::RequestUpdateMemo( User* pUser, int nMemoId , WCHAR* memotitle, WCHAR* memotext)
0x005044D8 void CCommCli::RequestCreateMemo ( User* pUser, WCHAR* memotitle, WCHAR* memotext )
0x005E9574 void CDeferredJob::DoEnterWorldJob(User *pUser)
0x0050538C void CCommCli::RequestClanSetIntro( User* pUser, WCHAR* intro)
0x00505224 void CCommCli::RequestClanBBSAdmin( User* pUser, int nWorldId, int nPledgeId)
0x00504E7C void CCommCli::RequestBBSSysinfo(User* pUser )
0x00585D88 void CDB::RequestQueryCastleSiegeForRegister(class User*, class CCastle*, int)
0x00840F04 bool CSkillEffect_p_mp_vampiric_attack::PumpStart(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpStartType) const
0x005CC9DC bool ReplyManorSellCrop(class CDBSocket*, const unsigned char *)
0x00838DA8 bool CSkillEffect_i_change_hair_color::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2 *, double)
0x00595308 void CDB::RequestSaveLastColor(unsigned int,int,int)
0x00405F90 bool NewInspectorAgent::QueryFirstImpl(class std::_Vector_iteratorclass CPacketHelperEx16384*, class std::xallocatorclass CPacketHelperEx16384* )
0x00605B94 void DxChangeSealSelectionCount::DoServerJob(void)
0x00893F38 double User::IntBonusF(void) const
0x0072FA9C bool NpcSetXMasEventState(class NpcSocket*, const unsigned char *)
0x004B5BA8 bool BuilderCmd::_set_castle_owner(class User*, class CUserSocket*, class CResidence *, wchar_t *)
0x00448B6C bool CSharedCreatureData::RemoveNRMemo(int)
0x007D1BC8 void CPledge::SetAcademyMasterStudentRelationship(class User *)
0x0088DD38 bool User::IsCharmOfCourageAvailable(enum CrystalType)
0x0052F9A8 void CCreature::ResetPassingPos(class FVector)
0x0053422C void CCreature::AddPassingPos(const class FVector &)
0x004E5A90 bool BuilderCmd::bot_block_add(class CSocket*, class User*, wchar_t *)
0x0083A688 bool CSkillEffect_i_capture_flag_start::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x0083E680 bool CSkillEffect_p_2h_blunt_bonus::CheckPumpCondition(class CCreature *)
0x00896364 void CTLPipeBasestruct CTL_WorldMapNode2,50000,8::CThreadPipe::Write(const struct CTL_WorldMapNode2 &)
0x008A35FC void CThreadLocalWorldMap2100000,50000,8::Write2(short,short,char,int,class CObject *)
0x008A0384 void CTLPipeBasestruct CTL_WorldMapNode2,50000,8::Write(int,const struct CTL_WorldMapNode2 &)
0x00962978 void CWorld::IncreaseUserMapDensity(const class FVector &)
0x0065389C void CHeroSystem::SetHeroAlliance(class User *)
0x00962A40 void CWorld::DecreaseUserMapDensity(int,int)
0x0046ADD4 bool CBossRecord::AddPoint(int,int)
0x005B2428 bool ReplyUnregisterTeamBattleAgitPledge(class CDBSocket*, const unsigned char *)
0x00699C60 void CItem::ActivateMultiSkillList(class CCreature*, class CObject *)
0x008B012C void User::BroadcastItemGet2Party(int,int,__int64,int)
0x0063B154 void CFortressSiege::ResetBarracksCaptured(void)
0x00706BBC bool CMoveToTargetWaitAction::OnTargetOutOfSight(int id)
0x008DE8A0 class CRecipeInfo *__cdecl User::GetRecipeInfo(int)
0x00855ACC bool CSkillEffect_p_trigger_skill_by_dmg::Pump(class CCreature*, const class CSkillInfo*, int)
0x008777E0 bool CTrade::RequestAddItems(const unsigned char*, class User *)
0x00922F90 bool RequestBuySeed(class CSocket*, const unsigned char *)
0x007DC8D4 void CPledge::LoadPledge(wchar_t*, int,int,wchar_t*, int,const unsigned char *)
0x0047F3B0 bool BuilderCmd_EventMatch(class CSocket*, class User*, wchar_t *)
0x004A3784 bool BuilderCmd_SendSubPledgeSkill(class CSocket*, class User*, wchar_t *)
0x008D9348 bool User::BuyMonRaceTicket(int,int,int,int)
0x00894380 bool User::ValidateAllOnWeapon(void)
0x0089F354 void User::ResetNicknameAndColor(void)
0x0084979C bool CSkillEffect_i_dismount_for_event::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x008AFA00 bool User::DropCastleGuard(class CItem*, unsigned int)
0x007B6860 void CPet::TimerExpired(int)
0x005025C8 void CCommCli::RequestSetPledgeInfo(int,int,wchar_t*, wchar_t *)
0x00979664 bool CWorld::LeaveWorld(class CAirShip *)
0x0072E798 bool NpcDummy(class NpcSocket*, const unsigned char *)
0x0094483C bool HtmlCmdTransferMasterCancel(class CUserSocket*, class User*, const wchar_t*, const wchar_t *)
0x00418604 void CAirShipForFree::OnLeaveWorld(void)
0x00721210 bool SendClanDiedEvent(class CNPC *)
0x00864F28 bool CTeamBattleAgit::IsRegisteredForSiege(class CPledge *)
0x00574F2C bool SpriteDB::Load(void)
0x00581B20 void CDB::ReqLogoutCharacter(int,int,int,struct _SYSTEMTIME*, struct in_addr)
0x0075B564 bool CWorldObject::SetTargetable(bool,bool)
0x008E1D90 void User::SendPeriodicItemList(void)
0x006B41D8 void CL2Time::Init(void)
0x00669364 void CHTMLCacheManager::ToggleCaching()
0x004B0AD4 bool BuilderCmd::reset_bot_count(class CSocket*, class User*, wchar_t *)
0x0067FE68 void CInstantZoneGroup::AddZone(int)
0x0063A75C bool CFortress::HandleFlagPicked(class CFortress*, class User*, class CItem *)
0x0045EE50 void `anonymous-namespace::SendBlockUpsetMemberState::operator ()(class CPVPMatchMemberInfo *)
0x008904F4 bool User::InsertLoginMsg(const unsigned char *)
0x0049F6DC bool BuilderCmd_record_fish_length(class CSocket*, class User*, wchar_t *)
0x0083BA28 bool CSkillEffect_p_attack_attribute::Pump(class CCreature*, const class CSkillInfo*, int)
0x00467DB0 bool CBlockUpset::LeaveWorld(class User &)
0x009725A8 bool CWorld::MoveTo(class CCreature *, class FVector &,bool)
0x005A7DD8 bool ReplyUpdateQuest(class CDBSocket*, const unsigned char *)
0x005340E8 bool CCreature::IsShieldDefend(class CCreature &,double)
0x005C6610 bool ReplyShowIntervalAnnounce(class CDBSocket*, const unsigned char *)
0x006ADC68 void CThreadLocalWorldMap21000,3000,8::CTL_Map2::Remove(int)
0x007C9C78 void CPledge::SetRemainedSubPledgeTypeToLoad(unsigned long)
0x0052D340 bool CCreature::ValidateOrgPAttack(void)
0x00501CC0 bool CCommCli::Connect()
0x00428300 void CAirShipForFree::OnDelete(enum AirShipDespawnReason)
0x008BDB48 bool CObjectMapclass CReplyChecker,1,5,class RWLock::Insert(int,class CReplyChecker*, char*, int)
0x007FFB44 bool CResidence::IsInBattleField(const class FVector &,bool)
0x006DC080 bool CMiniGameAgitBuilderCmd::View(class CSocket*, class User*, wchar_t *)
0x006064DC void DxDeleteOlympiadTradePoint::DoServerJob(void)
0x006092FC void DxChangeSSQUserPoint::DoServerJob(void)
0x006233A0 class CFishingMonsterInfo *__cdecl CFishingDB::FindMonster(int) const
0x006082B8 void DxAddSevenSignQuestMember::DoServerJob(void)
0x007C0EB8 static bool RequestConnectedChars2(CPetitionSocket *socket, const unsigned char *packet)
0x00607B10 void DxNominateHeroes::DoServerJob(void)
0x0073268C bool NpcDespawn(class NpcSocket*, const unsigned char *)
0x0072CD10 class NpcSocket *__cdecl NpcServer::GetNpcSocket(void)
0x006FB254 void CAttackAction::GetTimeData(class CCreature &,struct CAttackAction::TimeData &)
0x00607890 void DxInitAllOlympiadPoint::DoServerJob(void)
0x0042D694 bool CAirShipHandler::DBPacketHandler(class CDBSocket*, const unsigned char *)
0x0060763C void DxWriteNoblessAchievement::DoServerJob(void)
0x00898248 void User::SendGeoQuery(void)
0x00608160 void DxSetTicketBuyCount::DoServerJob(void)
0x006E5BC8 void CMonRaceHTML::MonRaceBuy1(int)
0x007CD2D8 void CPledge::SendSubPledgeUpdatedPacket(enum PledgeType)
0x00489DF0 bool BuilderCmd_bk(class CSocket*, class User*, wchar_t *)
0x004D6BE8 bool BuilderCmd_force_peti(class CSocket*, class User*, wchar_t *)
0x00600718 void CDuel::OnPlayerStatusUpdate(class User *)
0x0076769C void COlympiadField::ProcessMessage(void)
0x00765D1C void COlympiadField::Broadcast(const char*, ...)
0x007B9740 bool IsDisableTime()
0x005F478C bool CDominion::RegisterUser(int,bool)
0x0084F0B0 bool CSkillEffect_i_restoration_random::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x00589A98 void CDB::RequestAgitSale1(class User*, int,int)
0x004F4AF0 void CCastle::ValidateStatus(void)
0x00867E7C void CTeamBattleAgit::BanExceptTeamBattleEntry(bool)
0x00774960 bool COlympiadSystem::RegisterEntry(class User*, enum GameRuleType,bool &)
0x0057F190 void CDB::RequestSaveItemExpiration(int,int,int)
0x005A0B10 void PeriodicItemJobHandler::OnLoadInfo(class User*, const unsigned char *)
0x0083B3C0 bool CSkillEffect_p_disarm::PumpEnd(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpEndType) const
0x0091BE30 bool UserPacketEx::BlockUpsetVote(class CSocket*, const unsigned char *)
0x006AE2C0 void CThreadLocalWorldMap210000,20000,8::CTL_Map2::Remove(int)
0x00768B08 void COlympiadParam::SetDebugString(xwstring &sDebug)
0x008C6418 bool TalkeChannelCache::ResetCache(unsigned int UserSID)
0x00695F00 void CItem::TimerExpired(int)
0x004D74F0 bool BuilderCmd_time_info(class CSocket*, class User *, wchar_t *)
0x006B4F64 void CEventTimer::TimerExpired(int)
0x00801CF8 int __cdecl CResidenceDB::VerifyMaxRateOfCastle(void)
0x0049E63C bool BuilderCmd_gmreg(class CSocket *, class User*, wchar_t *)
0x006FAA24 void CNewAction::AddTimer(int)
0x00604C00 void Duel_RestoreInfectedSkills::Operate(class User*, class CDuelPlayerInfo *)
0x00596348 void CDB::RequestLoadPremiumItemForBatch(void)
0x005A118C bool ReplyGetPointtop10Packet(class CDBSocket*, const unsigned char *)
0x0083F054 bool CSkillEffect_p_attack_speed_by_hp2::Pump(class CCreature*, const class CSkillInfo*, int)
0x007FBAAC bool CResidence::IsDefendingPledge(int)
0x008034F4 void CExpelTimer::ReserveExpelWithNoLock(class User*, class FVector)
0x0081B4EC void CSignBoard::SendObserverListHTML(User *pUser)
0x0054A53C bool CCreature::InfectedInstantDurationSkillBy(class CCreature*, const class CSkillInfo *)
0x00690BF8 int __cdecl CreateIOThread(int)
0x005632BC bool CCreature::EquipItem(class CItem*, enum SlotType)
0x00498A24 bool BuilderCmd_polymorph(class CSocket*, class User *, wchar_t *)
0x00802D34 void CResidence::AddResidenceSkill(class CPledge &)
0x006B7D44 void CLog::CloseLogFile(void)
0x004B83F4 bool BuilderCmd_reset_clan_name(class CSocket*, class User*, wchar_t *)
0x006A5C2C bool CItemUseCondition_transmode_exclude::CheckPrivate(class CCreature*, class CItem *)
0x00889E9C bool SocialClassNS::IsMasterOrHero(class User *)
0x005216D0 bool CCrataeCube::_UnregisterUser(unsigned int,int)
0x00825610 bool SkillEnchantOperator::CheckLearnable(class CUserSocket*, const struct SkillEnchantInfo*, int,__int64,int)
0x0077DCD0 void CSmartIdManagerclass CParty,10000,8::DeleteObject(unsigned int)
0x0092206C bool ObserverEndPacket(class CSocket*, const unsigned char *)
0x004775DC enum BrBuyProductResultType __cdecl User::CheckBuyProduct(class CSocket*, int,int)
0x00803A2C void CResidenceDB::AddResidence(const wchar_t*, class CResidence *)
0x0066C930 void ArchiveMail::ParseParameter()
0x0065CA44 void ArchiveMailHtmlBuilder::SendHtml()
0x0066C888 void ArchiveMail::ExecuteInternal()
0x00722634 void CNPC::Set(enum ObjectFieldType,class std::xvectorstruct GoodStruct*, class std::xallocatorstruct GoodStruct* *)
0x005806F8 void CDB::RequestPledgeMasterTransferByNpc(class CNPC*, class User*, class CPledge*, const wchar_t *)
0x00576DD4 void CCursedWeapon::ReplyPickCursedWeaponFromDB(class CItem*, class User*, const unsigned char *)
0x0058CB90 void CDB::RequestUpdateSociality(int,int,int,struct _SYSTEMTIME *)
0x005BD4FC bool BBSModifyForm(class CDBSocket*, const unsigned char *)
0x007AB780 void CSummon::SendSystemMessage(unsigned int)
0x004BB46C void `anonymous-namespace::DelSubPledgeSkillAll(class CSocket*, wchar_t*, int)
0x00428BC4 void CAirShip::InSight(class CObject*, bool)
0x00709C8C void CMoveAction::OnEnd(bool)
0x004797F8 bool BuilderCmd_who(class CSocket*, class User*, wchar_t *)
0x00838408 bool CSkillEffect_i_summon_agathion::Instant(class CCreature *, class CObject *, const class CSkillInfo*, class CSkillAction2*, double)
0x007B98F8 bool CPetitionCli::LoadPetitionCategory()
0x0058B714 void CDB::RequestAddMiniGameAgitPledge(unsigned int,class CPledge*, int)
0x00855C58 bool CSkillEffect_p_trigger_skill_by_dmg::PumpEnd(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpEndType) const
0x0064B1A0 bool CGeoZone::IsInNoUseBookmarkArea(const class FVector &)
0x008095B0 void CSecureINIFileReader::_RemoveFile(const wchar_t *)
0x00782BF4 void CParty::OnReplaceMaster(class User *)
0x008939F0 void User::SetOriginalBaseStat(void)
0x008EE8DC void User::TakeWithdrawPenalty()
0x0058B104 void CDB::RequestSetTeamBattleNpcType(unsigned int,unsigned int,int)
0x004A5230 bool BuilderCmd::path_finder(class CSocket*, class User*, wchar_t *)
0x006CB208 void CManorDB::Load(void)
0x007BF45C static bool AcceptChatStart(CPetitionSocket *socket, const unsigned char *packet)
0x0083E0EC bool CSkillEffect_p_heal_effect::Pump(class CCreature*, const class CSkillInfo*, int)
0x0076B7DC void COlympiadSystem::StartOlympiadSeason(void)
0x0048E520 bool BuilderCmd_setIntervalAnnounce(class CSocket*, class User*, wchar_t *)
0x0071BB54 void CNPC::OnCorpseDecayed(void)
0x005415F8 void CThreadLocalWorldMap2100000,50000,8::BroadcastToNeighborExceptSelf(class CObject*, int,class FVector,const char *, ...)
0x00754D00 bool NpcRegisterPVPMatch(class NpcSocket*, const unsigned char *)
0x0083A5C0 bool CSkillEffect_i_set_visible::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x0085D69C bool SSQSystem::OnAccountStart(void)
0x004335E4 enum SHIP_ACTION_RESULT CShipMoveAction::OnStart(void)
0x0041C870 void CAirShipForRegular::BroadcastMovePacket(void)
0x008DC9AC void SharedReuseDelaysOfItems::AddReuseDelay(int,int,int)
0x0053E638 bool CCreature::_NeedLookNeightbor(class CCreature &,const double,const int)
0x0091535C bool UserPacketEx::ReplyManagePartyRoom(class CSocket*, const unsigned char *)
0x00898494 void User::CheckCompassRegionOnTimerExpired(void)
0x005865C4 void CDB::RequestBBSRead(class User *, int,int,int,int,int,int,wchar_t*, int,int)
0x0088984C bool SocialClassNS::IsMasterMember(class User *)
0x0045D988 enum BlueRedTeam::Enum CBlockUpset::GetBlockUpsetWinner(const struct CBlockUpset::BlockUpsetPoint [])
0x007D8E38 void CPledge::SendWarReport(class CUserSocket *)
0x00962038 bool CWorld::CanSummonNpc(const class FVector &,class User *)
0x008F1D54 void User::GetPVPPointByTimerInBattleField(void)
0x00651048 void CGIPSocket::OnRead(void)
0x0069200C __cdecl CIOCriticalSection::CIOCriticalSection(unsigned long)
0x005A0A28 bool ReplyCachePing(class CDBSocket *, const unsigned char *)
0x008F252C bool User::IsValidAction(int)
0x00889DE4 bool SocialClassNS::IsKnightMasterOrHero(class User *)
0x0059224C void CDB::UpdatePledgeNameValueByUserDBID(unsigned int,int)
0x0094DE0C int AnsiToUnicode(char* ansistr, int maxansilen, WCHAR* unistr, int maxunilen)
0x004355F8 void CAlliance::GetAllMemberPledge(class std::xvectorclass CPledge*, class std::xallocatorclass CPledge* &)
0x00536988 bool CCreature::ValidateArmorType(void)
0x0084D7B8 bool CSkillEffect_i_collecting::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x008408C4 bool CSkillEffect_p_recovery_vp::PumpStart(class CCreature &,class CCreature *, const class CSkillInfo*, enum SkillPumpStartType) const
0x004688EC bool CBlockUpsetManager::EnterBlockUpsetPlayer(int,class User &)
0x0092DE7C __cdecl CUserSocket::~CUserSocket(void)
0x00658024 void CHtmlBuilder::SetTemplateFileName(const WCHAR *fileName)
0x00865BB8 void CTeamBattleAgit::SendWaitTimeMessage(long)
0x005A0278 bool ReplyLoadOwnthing(class CDBSocket*, const unsigned char *)
0x00567BF8 void CCreature::PumpStartAllPumpEffects(void)
0x008351A4 bool CSkillEffect_i_delete_hate::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x00479318 bool BuilderCmd_mrrun(class CSocket *, class User*, wchar_t *)
0x00891A78 void User::LoadPCCafePoint(int)
0x0057B44C void CCursedWeaponMgr::OnDeleted(class CItem*, class User*, enum CW_DELETE_REASON)
0x0077F908 void CParty::AddPetWindowPacket(class CSummon *)
0x007B4798 void CSummon::TimerExpired(int)
0x00584ED8 void CDB::RequestPetitionGetCharList(int)
0x0075A7C0 void CSmartIdManagerclass CGeneralObject,1000000,8::DeleteObject(unsigned int)
0x00480E00 bool BuilderCmd_addpccafepoint(class CSocket*, class User*, wchar_t *)
0x00914600 bool ReplyWithdrawPartyRoom(class CSocket*, const unsigned char *)
0x00567200 bool CCreature::DispelAll(int,class CCreature*, class CSkillInfo *)
0x0077EF50 void CParty::TimerExpired(int)
0x0083D31C bool CSkillEffect_p_reduce_cancel::Pump(class CCreature*, const class CSkillInfo*, int)
0x00508A78 static bool CommSysinfoPacket(CCommSocket *socket, const unsigned char *packet)
0x005083C8 static bool CommManMemoPacket(CCommSocket *socket, const unsigned char *packet)
0x00508220 static bool CommBBSGetAnnouncePacket(CCommSocket *socket, const unsigned char *packet)
0x007B0030 bool CPet::DropItem(class CItem*, __int64,class FVector &,bool)
0x0052DF48 bool CCreature::ValidateAttackRange(void)
0x005073B0 static bool CommBBSSearchPacket(CCommSocket *socket, const unsigned char *packet)
0x00507184 static bool CommBBSWriteFormPacket(CCommSocket *socket, const unsigned char *packet)
0x00507908 static bool CommBBSModifyPacket(CCommSocket *socket, const unsigned char *packet)
0x004A836C bool BuilderCmd::show_dominion(class CSocket*, class User*, wchar_t *)
0x00507D68 static bool CommBBSGetFavoritePacket(CCommSocket *socket, const unsigned char *packet)
0x00507AA0 static bool CommBBSDeletePacket(CCommSocket *socket, const unsigned char *packet)
0x005080A8 static bool CommBBSDelFavoritePacket(CCommSocket *socket, const unsigned char *packet)
0x00507F30 static bool CommBBSAddFavoritePacket(CCommSocket *socket, const unsigned char *packet)
0x00691250 void CVehicleEraseMessage::OnReceive(int)
0x0081793C void CSiegeAgit::StartTimer(void)
0x00811ADC bool CContainerDB::CanAllocAirShipContainer(void)
0x005B893C bool DBPacketHandler::DestroyItemPacket(class CDBSocket*, const unsigned char *)
0x0072F9D4 bool NpcSocket::NpcYearCatchEventManagerEnter(class NpcSocket*, const unsigned char *)
0x00501334 void CCleft::_OnReward(void)
0x005515C4 void CCreature::GetSkillListByType(class std::xvectorclass CSkillInfo const*, class std::xallocatorclass CSkillInfo const* &,class std::xvectorclass CSkillInfo const*, class std::xallocatorclass CSkillInfo const* &,class std::xvectorclass CSkillInfo const*, class std::xallocatorclass CSkillInfo const* &)
0x0086B31C void CTeleporter::ReportOrt(char *caller, int line, int nWorkType)
0x0059F594 bool ReplyMoveToNextBossRecordRound(class CDBSocket*, const unsigned char *)
0x0061180C void CEventMatchItemRuleSet::ShowInfo(class CSocket *)
0x008FA144 bool User::HaveSummon(void)
0x00683154 void CInstantZone::SetBindingAllUser(void)
0x00688240 int __cdecl CInventory::GetAdenaDBID(void)
0x007A2FCC bool CPathNodeWorld::FindClosestPathNode(const class FVector &,class CPathNode **, int &,bool)
0x005ECBA8 void CDominion::NotifyCastleSiegeStart(void)
0x0088E9F0 bool User::StopScenePlay(int)
0x00943554 bool HtmlCmdObserverGroup(class CUserSocket *, class User*, const wchar_t*, const wchar_t *)
0x007C6C34 bool CPledge::SetAcademyMaster(wchar_t*, wchar_t *)
0x0090338C void BuilderCmdHandler::OnSendList(class User*, wchar_t *)
0x008F8388 void User::GetOptionSkillsFromItem(class CItem &,class std::xmapint,class CSkillKey,struct std::lessint,class std::xallocatorstruct std::pairint const ,class CSkillKey  &,enum User::CheckCrystalType)
0x008F6C04 void User::SendSkillList(class CUserSocket*, bool)
0x00710844 void CSkillAction2::ActivateAttachedItemSkill(class CCreature &,class CObject &,const class CSkillInfo*, const float,enum CSkillInfo::EffectActivateTiming)
0x00755B20 bool NpcIsPVPMatching(class NpcSocket*, const unsigned char *)
0x0040F91C bool CAgitHTML::SellActionRequest(__int64,int,wchar_t *)
0x0062EC3C void CFortress::SiegeRegister(void)
0x00979894 void CWorld::__async_AsyncDoorOpenClose(struct CExecutionArgumentPad *)
0x00904E00 void CUserBookmarkHandler::OnLoadList(const unsigned char *)
0x0049B288 bool BuilderCmd_reset_respawn(class CSocket *, class User*, wchar_t *)
0x0091D0F8 bool AppearingPacket(class CSocket*, const unsigned char *)
0x008C7B10 void User::PrivateStoreBuyBuy(const unsigned char*, class User *)
0x007AEAF0 void CCommonRidingInfo::OnRide(const class PetDataSheet::Record &,double,double)
0x0049A184 bool BuilderCmd_GenerateSummonAction(class CSocket*, class User*, wchar_t *)
0x00756428 bool NpcSocket::NpcBlockUpset(class NpcSocket*, const unsigned char *)
0x00673DB8 std::xwstring FormatString(WCHAR *format, ...)
0x00611B74 void CEventMatch::SetFenceStatus(enum ColosseumFenceState)
0x007239CC bool CObjectMapclass CNPC,8191,5,class RWLock::Insert(int,class CNPC*, char*, int)
0x006D688C void CMiniGameAgit::EndGame(void)
0x0044D284 void CAuction::LoadBid(void)
0x0084344C bool CSkillEffect_c_hp::Consume(class CObject*, double)
0x0080A044 void CSerializedActivateSkillEffectsMessage::OnHandle(class CCreature *)
0x00978BF8 void CWorld::__async_AsyncAirShipLeaveWorld(struct CExecutionArgumentPad *)
0x008A97C4 bool User::OnNpcRenewSubJobPacket(int,int,int)
0x008783EC bool CTrade::PressDone(class User *)
0x004C5F28 bool BuilderCmd_dropitem(class CSocket*, class User*, wchar_t *)
0x006B68A8 void CEventTimerYear1::Init(void)
0x008A4CFC void User::TradeDone(void)
0x008395E8 bool CSkillEffect_i_death::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x0094E968 int CUser::GetDayDiff(SYSTEMTIME *tmNow, SYSTEMTIME *tmOld)
0x0044D124 void CAuction::SetAuctionDuration(const int)
0x009212CC bool RequestPackageSendableItemList(class CSocket*, const unsigned char *)
0x0097DB94 class CXmasSantaEventInfo *__cdecl CXmasSantaEventMgr::find(int)
0x005EE6B0 void CDominionSiegeEntry::SendDominionScriptEventToPledge(int,int,int)
0x0058ECD8 void CDB::RequestSaveCharacterForSubJob(class User *)
0x004BDAD0 bool BuilderCmd_SetProductBuyable(class CSocket*, class User *, wchar_t *)
0x004699EC CObject* CBoss::Copy()
0x007C6230 void CPledge::SetCastle(class CCastle *)
0x00627710 int __cdecl CFishingEventMgr::GetFinishTime(void)
0x00466890 bool CBlockUpset::AddBlockUpsetWaitingPlayer(enum BlueRedTeam::Enum,class User &)
0x007662EC bool COlympiadField::AddObserver(int)
0x009530C0 bool CVehicle::SetMovingIntoCarrier(class CMoveRelativeAction *)
0x005FC2F4 void CPartyDuel::SendToAllPlayers(const char*, ...)
0x005E9DA8 void CDominionManager::SetSiegeEndTime(int,bool)
0x00825808 bool SkillEnchantOperator::IsEnchantSuccess(const struct SkillEnchantInfo*, int)
0x005B9170 bool ReplyDeletePledge(class CDBSocket*, const unsigned char *)
0x00823288 struct SkillAcquireInfo *__cdecl CSkillAcquireDB::GetEtcSkillAcquireInfo(enum EtcSkillAcquireType,int,int)
0x005F88C8 void CDoorDB::OnSunrise(bool)
0x00823E80 struct SkillAcquireInfo *__cdecl CSkillAcquireDB::GetSkillAcquireInfo(enum EtcSkillAcquireType,enum ClassType,int,int)
0x005971A8 void CDB::RequestLoadOwnthing(int)
0x004FC858 void CCleft::RemoveAllCleftPlayers(void)
0x006D75F4 bool CMiniGameAgitPlayerEntry::AddPlayer(unsigned int)
0x004746B0 void CInventory::LoadRuneSelectSkill(void)
0x00763E44 void CObjectDB::PostLoad(void)
0x0061E620 void CFieldCycle::PostLoad(void)
0x00620960 void CFieldCycleSystem::PostLoad(void)
0x006219EC void CFieldCycleSystem::Load(void)
0x00423CA8 void CAirShipManager::Load(void)
0x00433A1C void CAirShipPart::LeaveWorld(class CAirShip *)
0x004C4E44 bool BuilderCmd_spawn_all_npc(class CSocket *, class User*, wchar_t *)
0x005A2974 bool ReplyPledgeMasterTransfer(class CDBSocket*, const unsigned char *)
0x00722D18 void ComputeClanHelpTable(void)
0x0076AD4C void COlympiadSystem::Init(void)
0x0090018C bool CBasicActionHandler_WALK_RUN::Handle(class User *, int,bool,bool,int)
0x004FC244 void CCleft::_RemoveAllCleftPlayers(void)
0x006FB908 void COpenCloseAction2::Set(class CSmartID,class CSmartID)
0x00562A34 enum SlotType CCreature::UnequipItem(class CItem *)
0x00776DE0 void COwnThing::SetOriginalResidenceID(int)
0x00742740 bool NpcBroadcastSystemMessage(class NpcSocket*, const unsigned char *)
0x0059C324 bool CDB::AuthQuitGame(int,short,int,int)
0x0087D8A8 void CTransformCommonData::Init(void)
0x0080FC48 bool CSharedFactoryclass CCreature,class CSharedCreatureData,class CSharedCreatureConstant,&class CSharedDefine const SharedDefine_Creature::Change(int,int &,int &,int)
0x00634BE0 void CFortress::GetFlags(class std::xvectorclass FVector,class std::xallocatorclass FVector &)
0x0087C5E8 void CTransformForFlying::OnCancelTransform(class User *)
0x005AB5D0 bool ReplyBrGiveItem(class CDBSocket*, const unsigned char *)
0x00831D68 bool CSkillOperateCondition_op_alignment::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x00418FF4 class CSharedAirShipData *__cdecl CSharedFactoryclass CAirShip,class CSharedAirShipData,class CSharedAirShipConstant,&class CSharedDefine const SharedDefine_AirShip::AddById(int)
0x00543068 void CCreature::BroadcastFlyToLocation(int,int,int,enum FLY_TO_LOCATION_TYPE)
0x00860578 class CSharedStaticObjectData *__cdecl CSharedFactoryclass CStaticObject,class CSharedStaticObjectData,class CSharedStaticObjectConstant,&class CSharedDefine const SharedDefine_StaticObject::AddById(int)
0x00759210 class CSharedGeneralObjectData *__cdecl CSharedFactoryclass CGeneralObject,class CSharedGeneralObjectData,class CSharedGeneralObjectConstant,&class CSharedDefine const SharedDefine_GeneralObject::AddById(int)
0x00523B24 class CSharedCreatureData *__cdecl CSharedFactoryclass CCreature,class CSharedCreatureData,class CSharedCreatureConstant,&class CSharedDefine const SharedDefine_Creature::AddById(int)
0x0067DE8C void CInstantZone::OnRelease(void)
0x009257FC bool CharacterDeletePacket(class CSocket*, const unsigned char *)
0x0041B350 class CSharedAirShipData *__cdecl CSharedFactoryclass CAirShip,class CSharedAirShipData,class CSharedAirShipConstant,&class CSharedDefine const SharedDefine_AirShip::Add(class CAirShip *)
0x007C47D8 class CSharedPledgeData *__cdecl CSharedFactoryclass CPledge,class CSharedPledgeData,class CSharedPledgeConstant,&class CSharedDefine const SharedDefine_Pledge::AddById(int)
0x00594F94 void CDB::RequestSaveUI(int,int,int,unsigned char *)
0x007D4218 bool CObjectMapclass CPledge,1,5,class RWLock::DeleteObject(int,char*, int)
0x008A91F8 bool User::CreateMPCCWithItem(class User *)
0x006C4B3C void CManorDB::Add(class CManor *)
0x00769B20 void COlympiadEntry::AddEntryCount(enum GameRuleType,int,int)
0x006DD51C bool CMiniGameAgitDBHandler::ReplyLoadMiniGameAgit(class CDBSocket*, const unsigned char *)
0x00859B88 bool SSQSystem::StartEvent(void)
0x009155C4 bool UserPacketEx::ReplyJoinPartyRoom(class CSocket*, const unsigned char *)
0x005FF4D4 bool CPartyDuelManagement::CheckDuelStartCondition(class User*, class User*, bool)
0x005EF3BC void CDominion::RemoveOwnthing(class COwnThing *)
0x00802250 class CResidence *__cdecl CResidenceDB::GetResidence(int)
0x006A4AD4 bool CItemEquipCondition_clan_leader::CheckPrivate(class CCreature*, class CItem *)
0x0046EC24 bool CObjectMapstruct BotBlockData,10,5,class CIOCriticalSection::DeleteObject(int,char*, int)
0x007C5B90 bool CPledge::SetCastleSiegeDefenceCount(unsigned int)
0x008418AC bool CSkillEffect_p_dominion_transform::PumpEnd(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpEndType) const
0x009214FC bool RequestCastleSiegeInfoPacket(class CSocket*, const unsigned char *)
0x005DE87C bool ReplyGetCharDBIDByName(class CDBSocket *, const unsigned char *)
0x006B74E8 void CL2Time::TimerExpired(int)
0x00584E30 void CDB::RequestLoadAllAlliance(void)
0x00682574 bool CInstantZoneManager::EnterInstantZone(class User*, class CInstantZone*, enum InZoneEnterType,int,bool)
0x00737254 bool NpcSetVitalityPoint(class NpcSocket*, const unsigned char *)
0x009756D8 void CWorld::__async_AsyncAirShipMove(struct CExecutionArgumentPad *)
0x0060FD7C bool CParty::IsMember(unsigned int)
0x0076AC94 bool COlympiadTeam::IsRegisteredUser(class User *)
0x0061571C CEventMatchRuleSet::CEventMatchRuleSet()
0x007B0D3C void CUserRidingInfo::MakeEventLog(class User*, int)
0x007FBE2C void CResidence::AddManor(int)
0x00882D68 bool CWorldTrapDB::AddWorldTrap(class CWorldTrap *)
0x0058A23C void CDB::RequestCancelAgitAuction(class User*, int,int)
0x008897B8 bool SocialClassNS::IsKnight(class User *)
0x00478FC0 bool BuilderCmd_xmasseal(class CSocket*, class User*, wchar_t *)
0x00844304 bool CSkillEffect_i_fishing_cast::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x00914B68 bool MPCCShowPartyMembersInfo(class CSocket *, const unsigned char *)
0x00866798 void CTeamBattleAgit::BanBattleRoyalLoser(unsigned int)
0x00971C08 void CWorld::VehicleEnterWorld(class CVehicle*, class FVector)
0x004FE560 void CCleft::_RemoveCleftPlayerInfo(class CCleftMemberInfo *)
0x0094E078 bool CheckCharacterName(const WCHAR * name, int code)
0x007F8C6C bool CRecipeInfo::CheckMaterial(class User *)
0x0066072C community_id
0x006FADE8 bool CNothingAction::OnDamaged(class CSmartID,int)
0x00929860 void CUserSocket::ReportPacketLog(bool)
0x006BFF34 void CManor::ClearNextSeedData(void)
0x00958530 void CVehicleDB::EraseAllVehicle(void)
0x00889C04 bool SocialClassNS::IsHero(class User *)
0x00582D74 void CDB::RequestCrystallizeItem(class CItem*, __int64,int,__int64,class User *)
0x009565FC void CVehicle::InSight(class CObject*, bool)
0x00567A90 bool CCreature::_FindReplacableBuffAndRemove(class CCreature *, const class CSkillInfo*, bool &,int)
0x00597540 void CDB::RequestDeleteAllDominionRenamed(void)
0x0067B6D8 void CInstantZone::_ClearInstantZoneDoorMap(void)
0x0084AE48 bool CSkillOperateCondition_op_harvest::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x00954D34 void CSmartIdManagerclass CVehicle,100,8::DeleteObject(unsigned int)
0x00897D90 bool User::ValidateOrgMPRegen(void)
0x005BD718 bool BBSModify(class CDBSocket*, const unsigned char *)
0x007EC830 bool CObjectMapclass CBillingJob,1,5,class RWLock::DeleteObject(int,char*, int)
0x0060CB30 int __cdecl EtcManiWithdrawItemAuctionBid::Assemble(char*, int)
0x007F3B24 void CPVPMatchSystem::OnHandOverPartyMaster(class CParty*, class User *)
0x00953278 void CVehicle::StartDrive(void)
0x00535FB4 void CCreature::MoveToLocation(int,int,int,bool)
0x0047D2C8 bool BuilderCmd_tutorial_event(class CSocket*, class User*, wchar_t *)
0x0052F728 enum CCreature::Position CCreature::GetMyPositionFrom(const class CCreature *) const
0x008FFE14 class CBasicActionHandler *__cdecl CUserBasicAction::GetHandler(wchar_t *)
0x005F45E4 bool CDominion::RegisterPledge(int,bool)
0x005EA65C void CDominion::ChangeDominionStatus(int)
0x0058A0CC void CDB::RequestSetAgitAuction(int,int)
0x0059325C void CDB::RequestReorganizePledgeMember(class User*, class CPledge*, int,unsigned int,enum PledgeType,unsigned int)
0x006BBEE0 bool AddMember(const WCHAR *szName)
0x006EED54 void CMultiPartyCommandChannel::SetMasterPartyRouting(class CNPC *)
0x00734140 bool NpcUpdatePCCafePoint(class NpcSocket*, const unsigned char *)
0x007CC6AC wchar_t *__cdecl CPledge::GetSubPledgeName(enum PledgeType)
0x0088CDC4 wchar_t *__cdecl User::GetNickName(void)
0x008F5F20 bool User::IsLearnableSkill(const struct SkillAcquireInfo &,bool)
0x006D62FC bool CMiniGameAgitBuilderCmd::SetWinner(class CSocket*, class User*, wchar_t *)
0x005835F4 void CDB::RequestEnchantItemFail(class CItem*, class CItem*, class CItem*, class User*, int)
0x007BEC28 bool CGMListMgr::Insert(const wchar_t *id)
0x004B2D34 bool BuilderCmd::teleport_to_npc(class CSocket*, class User*, wchar_t *)
0x008A88A0 bool User::OnUseItemPacket(unsigned int,int)
0x0043EE00 const unsigned char *__cdecl AtomicEventRide::Disassemble(const unsigned char *)
0x0066CA58 void SearchMail::ExecuteInternal()
0x006679B0 const wchar_t *__cdecl CHTMLCache::GetHTMLFileContent(const wchar_t *)
0x0043E0D0 const unsigned char *__cdecl AtomicResetFortressFacility::Disassemble(const unsigned char *)
0x00761854 const wchar_t *__cdecl CObjectDB::GetName(int) const
0x0043DC00 const unsigned char *__cdecl AtomicSetResidenceDeco::Disassemble(const unsigned char *)
0x006928B0 const wchar_t *__cdecl CItem::GetName(void) const
0x0043D8E0 const unsigned char *__cdecl AtomicShowPage::Disassemble(const unsigned char *)
0x005D1660 void CDBSocket::SendV(const char*, char *)
0x007C3624 bool CPledge::CanAcceptNewMember(void)
0x00597D08 bool CJobFinishSignal::NotifyFinish(enum JobFinishType)
0x006BBB00 TimeAttackInfo::Set(const unsigned char *packet)
0x0043F294 const unsigned char *__cdecl AtomicDeleteDepositedSSQItem::Disassemble(const unsigned char *)
0x0043F078 const unsigned char *__cdecl AtomicAddSSQMember::Disassemble(const unsigned char *)
0x0083F13C bool CSkillEffect_p_fatal_blow_rate::Pump(class CCreature*, const class CSkillInfo*, int)
0x007F7AA8 static bool DummyPacket(CQuerySocket *socket, const unsigned char *packet)
0x00447A1C bool AtomicDeleteAcquireSkills::Do(void)
0x006157D0 void CEventMatch::SendTeamInfo(int,class User*, class CSocket*, int)
0x008A71A4 void User::DieCursedUser(void)
0x00833B0C bool CSkillEffect_i_mp::Instant(class CObject*, const class CSkillInfo *)
0x005EEC4C void CDominionManager::SetAndCheckLoadedOwnThing(void)
0x0082DE98 void L2SkillFunc::SendHpMpChangedSystemMessage(class CCreature*, class CCreature &,const int,int)
0x00783700 bool CParty::HandOverMaster(class User *)
0x0090054C bool CBasicActionHandler_SOCIAL_ACTION::Handle(class User*, int,bool,bool,int)
0x00587524 void CDB::PingOneAdenaDrop(class User*, unsigned long,class CItem*, class User*, class FVector,enum SlotType,int)
0x00824840 bool SkillEnchantOperator::CheckRequestSkill(class User*, int,int)
0x006BAF34 static bool LogCheckStatus(CLogSocket *socket, const unsigned char *packet)
0x00592164 void CDB::UpdatePledgeNameValue(unsigned int,unsigned int,int,int)
0x00822248 bool CSkillInfo::PushCondition(class CSkillOperateCondition*, const enum CSkillInfo::OperateConditionTarget)
0x004453A4 bool AtomicPledgeLevelUp::Do(void)
0x00880BE4 bool CPCTrap::IsEnemyTo(class CCreature *)
0x00437E50 void CArea::SetOnOff(bool)
0x0066D460 void SwitchPledgeAnnounceShowFlag::ParseParameter()
0x005B5BD0 bool BuyItemsPacket(class CDBSocket *, const unsigned char *)
0x00612770 void CEventMatch::GiveEventMatchId2Team(int)
0x0084B404 bool CSkillEffect_i_m_attack::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x005923DC void CDB::RequestLoadCursedWeaponList(void)
0x005909FC void CDB::RequestGetNoblessTop10(int)
0x008620E4 void CPendingStaticObjects::AppearInWorld(void)
0x008A3374 void User::OnGotDamage(class CCreature*, double)
0x0060281C bool CDuelUserInfo::IsEnemy(class User *)
0x0053C6E4 bool CCreature::AddItemToInventory3(int,int,bool,int,int,int,class ItemOptionKey,int,class BaseAttribute)
0x00671288 bool SendMail::CheckReceiverList()
0x0077F384 void CParty::OpenAllWindowPacket(class User *)
0x0052ACF0 void CCreature::Suicide(enum DamageTypeEnum)
0x004FD51C void CCleft::_MakeCleftStateTotal(class CPacketHelperEx16384 &)
0x004401FC const unsigned char *__cdecl AtomicGiveTimeAttackReward::Disassemble(const unsigned char *)
0x00602A1C bool CDuelBuilderCmdHandler::BuilderCmd_IndividualDuelStart(class CSocket*, class User*, wchar_t *)
0x007053C0 void CCreatureController::__async_Jump(struct CExecutionArgumentPad *)
0x0088AE7C void User::ValidateMUseSpeed(void)
0x005F4884 void CDominion::RequestBroadcastMessage(int)
0x00659168 void UnreadMailCountMsgSender::DisassemblePacket()
0x006E0FBC bool CMonRaceDB::SendRacePacket(class User *)
0x008A0608 void User::CheckPCCafeEvent(void)
0x00909464 void User::GetBaseAndMyJobClass(class std::xvectorenum ClassType,class std::xallocatorenum ClassType &)
0x00923350 bool ConfirmDlg_CloseDoor(class CUserSocket *, class User*, bool,int)
0x007FBC3C void CResidence::SetPledge(class CPledge *)
0x006C967C bool CManorPacketHandler::ProcureCropList(class CSocket*, const unsigned char *)
0x004F1EBC void CCastle::SendCastleSiegeAttackerList(class CUserSocket*, class User *)
0x00922E98 bool RequestDeleteMacro(class CSocket*, const unsigned char *)
0x00634CF8 void CFortress::SetOwnerInfoFromDB(int,int,int)
0x006690F4 const wchar_t *__cdecl CHTMLCacheManager::GetHTMLFile(const wchar_t*, int)
0x0083E374 bool CSkillEffect_p_hit_at_night::Pump(class CCreature*, const class CSkillInfo*, int)
0x0084747C bool CSkillOperateCondition_op_call_pc::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x006AB3BC ReportRefCount()
0x00759F30 void CTLPipeBaseunsigned int,1000000,8::Write(int,const unsigned int &)
0x005C1BD4 bool ReplyPetGetItem(class CDBSocket*, const unsigned char *)
0x009238C8 bool CUserSocket::ConfirmDialog(class CSocket*, const unsigned char *)
0x006BB0CC void CLogSocket::OnClose(void)
0x005F4DE4 void CDominion::StartRegistration(void)
0x004311A0 void CShipController::__async_Move(struct CExecutionArgumentPad *)
0x006515D4 void CHenna::Set(enum ObjectFieldType,int)
0x0062CB94 bool CResidence::IsOwnerPledge(int)
0x00592C54 void CDB::RequestSavePledgePower(unsigned int,int,unsigned long)
0x00422FB8 const struct CAirport::GetOffInfo &__cdecl CAirport::GetGetOffInfo(int)
0x00716FE8 bool CSkillAction2::OnStart(void)
0x00805AF4 bool CResidenceData::IsDefendingPledge(int)
0x006DCCD4 void CMiniGameAgit::PrepareGame(void)
0x0052A928 void CCreature::IncrementParam(enum ParameterType,__int64)
0x008360D8 bool CSkillEffect_i_run_away::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x00931E38 bool DismissAlliancePacket(class CSocket*, const unsigned char *)
0x008D754C void User::LeaveItemManipulation(void)
0x007FCBF0 void CResidence::SendResidenceTaxIncome(int)
0x0088BAC0 void User::SendSystemMessage(wchar_t*, wchar_t *)
0x00921BC4 bool RequestRecipeShopSetList(class CSocket *, const unsigned char *)
0x0058B5A4 void CDB::RequestLoadMiniGameAgit(unsigned int)
0x0072DA88 int __cdecl CEnterWorldSerializer::GetModifiedHeight(int,int,int)
0x0075A190 class CSharedGeneralObjectData *__cdecl CSharedFactoryclass CGeneralObject,class CSharedGeneralObjectData,class CSharedGeneralObjectConstant,&class CSharedDefine const SharedDefine_GeneralObject::Add(class CGeneralObject *)
0x007AB9C8 void CSummon::SendSystemMessageWithSelf(unsigned int)
0x007F2FC0 bool CPVPMatch::IsBannedUser(int)
0x005018F0 void CCollection::ReportOrt(char *caller, int line, int nWorkType)
0x007C4DCC void CPledge::CreatePledgeByNpc(class CNPC*, class User*, const wchar_t *)
0x0095A4AC void CWareHouseWithdraw::SendList(enum WareHouseClass)
0x0074C95C void CEnterWorldSerializer::TimerExpired(int)
0x0082F49C bool CSkillOperateCondition_equip_weapon::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x005B4118 bool LoadWarehouseItemsPacket(class CDBSocket*, const unsigned char *)
0x004A348C bool BuilderCmd_SendLearnableSkillList(class CSocket *, class User*, wchar_t *)
0x00417B30 void CAirShip::OnEnterWorld(void)
0x0076A43C bool COlympiadUser::SetPlayer(unsigned char,int,const class FVector &,enum GameRuleType)
0x00925DE8 bool LogoutPacket(class CSocket*, const unsigned char *)
0x00840A94 bool CSkillEffect_p_hide::PumpStart(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpStartType) const
0x00480B4C bool BuilderCmd_set_fatigue_user(class CSocket*, class User*, wchar_t *)
0x0048FF08 bool BuilderCmd::_teleport_to_npc(class User*, class CUserSocket*, int)
0x006D55B8 void CMiniGameAgit::ResumeGame(void)
0x0072C36C void CNpcBattleAgit::PauseSiege()
0x0072C3EC void CNpcBattleAgit::ResumeSiege();
0x0072C7C0 void CNpcBattleAgit::EndSiege()
0x0072C074 void CNpcBattleAgit::TimerExpired(int id)
0x0072C29C void CNpcBattleAgit::StartTimer()
0x004E94FC void CCastle::InitCastle(void)
0x00583A30 void CDB::RequestLoadFriendList(class User *)
0x0088C0A8 void User::SetGuilty(char)
0x007B5E58 void CPet::GiveAllItemToMaster(bool)
0x008CEDB4 bool User::OnTradeDonePacket(unsigned int)
0x004FA76C int __cdecl CCleft::AddPoint(enum BlueRedTeam::Enum,int)
0x0072FBA4 bool NpcSetYearCatchEventState(class NpcSocket*, const unsigned char *)
0x00579C18 class CCursedWeapon *__cdecl CCursedWeaponMgr::GetCursedWeapon(int)
0x0074BC70 bool FindRandomUser(class NpcSocket *, const unsigned char *)
0x00622BD4 void CFishingController::SetActor(class User *)
0x007E4148 void CPledgeMemberList::ServeForAllMember(class CPledgeMemberService &)
0x007CBC44 void CPledge::SetMemberAllianceCrest(unsigned int)
0x008DCE14 bool `anonymous-namespace::CheckRidingFoodItem(const int,const int)
0x007FCB28 void CResidence::ResetVault(int)
0x004FF838 void CCleft::_OnCombat(void)
0x008FCDD8 void User::SummonPet(class CItem *)
0x005234FC void CSharedCreatureData::DeleteAllAbnormalStatus(void)
0x008735C4 bool CTrade::Request(void)
0x00838808 bool CSkillEffect_i_register_siege_golem::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x004616B4 void CBlockUpset::_RemoveAllBlockUpsetCombatPlayers(void)
0x00428160 void CAirShip::OnAppearingPacket(class User *)
0x006BF208 void CManor::WriteLock(const wchar_t*, int)
0x0044FCFC class CAuctionNPC *__cdecl CAuctionNPCDB::GetAuctionNPC(int)
0x005818B8 void CDB::RequestLoadPledgeSkill(unsigned int)
0x00893034 bool User::OnActionPacket(int,bool)
0x0043C180 void AtomicCreatePet::Dump(void)
0x005F75A0 double CDoor::GetPDefend(void)
0x007329EC bool NpcShowQuestMark(class NpcSocket*, const unsigned char *)
0x0044D9A8 void CAuction::ShowAuctionUIByNPC(class CNPC*, class User *)
0x007ACFCC int __cdecl CPet::GetLevel(int,int)
0x00840CAC bool CSkillEffect_p_hate_attack::PumpEnd(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpEndType) const
0x0079B54C void CPartyRoom::GetPartyMember(xvectorCRoomMemberSP& memberList)
0x0095BC18 void CWareHouseDeposit::RequestEx(const unsigned char *)
0x00642AF0 void CGameEventMgr::ProcessNextSchedule(int,int)
0x008CE2EC bool User::OnRequestAcquireSkillPacket(int,int,enum EtcSkillAcquireType,const unsigned char *)
0x00680198 void CInstantZoneDB::AddZone(class CInstantZone*, const wchar_t *)
0x00467F18 void CBlockUpset::_OnReward(void)
0x0094AFE8 bool HtmlCmdMenuSelect(class CUserSocket*, class User*, const wchar_t*, const wchar_t *)
0x00717F04 struct RGBA __cdecl CNewInspectorDB::GetAnswer(const struct Query &)
0x004438A8 bool AtomicSetFortressFacility::Do(void)
0x0089535C void User::CheckSummonBattleTimeStamp(void)
0x0052DFD8 bool CCreature::ValidateAllOnSIM(void)
0x0083F378 bool CSkillEffect_cub_attack_speed::Pump(class CCreature*, const class CSkillInfo*, int)
0x0055D7DC void CCreature::ResetSkillsAfterValidateSkill(class std::xvectorclass CSkillInfo const*, class std::xallocatorclass CSkillInfo const* &,class std::xvectorclass CSkillInfo const*, class std::xallocatorclass CSkillInfo const* &,class std::xvectorclass CSkillInfo const*, class std::xallocatorclass CSkillInfo const* &)
0x0050A8E0 const unsigned char *CCommunity::ReadTree(const unsigned char *packet, std::xwstring &szDst, int &nPledgeId)
0x0068EA18 const unsigned char *__cdecl VDisassemble(const unsigned char*, const char*, char *)
0x0043CDF0 const unsigned char *__cdecl AtomicChangePetName::Disassemble(const unsigned char *)
0x00485724 bool BuilderCmd::remove_skill_delay_all(class User*, class CUserSocket *)
0x0043C9A0 const unsigned char *__cdecl AtomicEvolvePetWithSameExp::Disassemble(const unsigned char *)
0x0043C738 const unsigned char *__cdecl AtomicEvolvePet::Disassemble(const unsigned char *)
0x004537C8 bool CAuctionAgit::CanDoAuction(void)
0x0043D750 const unsigned char *__cdecl AtomicShowQuestPage::Disassemble(const unsigned char *)
0x00601660 void CPartyDuel::OnReady(void)
0x007A3444 void CPathNodeWorld::ViewPathNode(FVector vPos, CUserSocket *pSocket)
0x008E8BBC bool User::DestroyItemReturn(class CItem*, __int64)
0x0088B3BC void User::CheckXMasSantaEvent(void)
0x006EDE00 bool CMultiPartyCommandChannel::IsMember(int)
0x00629ED4 bool CFishingEventMgr::SendRankList(class User *)
0x00902940 bool CUserBookmark::CanUseBookmark(class User *)
0x008B8828 void User::AddNewCharID(int)
0x0082E66C void CSkillEffectByAdditionalArmorType::SetAdditionalArmorTypeArray(bool [])
0x0056683C bool CCreature::DispelBySlotProb(enum AbnormalStatusSlotType,class CCreature *, int,class CSkillInfo *)
0x00953984 int __cdecl CVehicleController::GetNextStation(void)
0x0088B784 void User::ProcessVioletBoy(void)
0x0048DF88 bool BuilderCmd_announce(class CSocket*, class User*, wchar_t *)
0x00427678 bool CAirShipManager::CanGetOnAirShip(class User*, unsigned int)
0x00623898 void CFishingDB::Load(void)
0x00766764 void COlympiadField::StatusProcessMatch(int)
0x0067AD5C void CInstantZoneDB::Load(void)
0x0044FAC4 void CAuctionNPCDB::Load(void)
0x007E7F50 void CPledgeRanking::Update(unsigned int,int)
0x00594D3C void CDB::RequestMarkInZoneRestriction(int,int,int,int,bool,int)
0x004F5540 void CCategoryDataDB::Load(void)
0x0040C404 void CResidenceDecoDb::Load(void)
0x0052CD58 bool CCreature::ValidateBaseCP(void)
0x0069B574 void CConvertItemDB::Load(void)
0x006065F4 void DxAddOlympiadTradePoint::DoServerJob(void)
0x0044C5E8 class AtomicJobList *__cdecl CreateAtomicJobList(const unsigned char *, int)
0x0052CC30 bool CCreature::ValidateBaseMP(void)
0x0069B9DC void CItemConstInfo::GetUseConditionList(class std::xvectorint,class std::xallocatorint &,enum UseConditionType)
0x00882000 bool CWorldTrap::CheckTrap(class CCreature &,const class FVector &,const class FVector &)
0x0062D570 void CFortress::SetRewardInfoFromDB(int,int,int)
0x006EDBFC void CMultiPartyCommandChannel::CalcMPCCTeleportPointCount(int,int &,int &)
0x004B68B4 bool BuilderCmd_reset_castle_owner(class CSocket*, class User*, wchar_t *)
0x00634950 bool CFortress::CanFlagBePicked(class User*, class CPledge*, class CItem*, bool)
0x007D3424 void CPledge::CloseMemberWindowPacket(class User *)
0x00971978 bool CWorld::LeaveWorld(class CCreature*, class FVector)
0x008FEA80 bool User::TryRiding(void)
0x0047FFEC bool BuilderCmd_create_pledge(class CSocket *, class User*, wchar_t *)
0x00973918 void CWorld::PickAndUseItem(class CItem*, class CCreature *)
0x008FFC00 void User::SummonPCTrap(int)
0x008362E0 bool CSkillEffect_i_consume_body::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x008A1424 void User::ValidateLocationInAirShip(class FVector,int,int)
0x007E9C20 bool IBVersionPacket(class CPremiumServiceSocket*, const unsigned char *)
0x004E5378 bool BuilderCmd_NpcPosEvent(class CSocket*, class User*, wchar_t *)
0x0083035C bool CSkillOperateCondition_target_my_pledge::CanUse(class CCreature *, const class CSkillInfo*, class CObject *)
0x007CA834 void CPledge::ViewPledgPowerPacket(class User*, enum PledgeType,wchar_t *)
0x0059C8C4 bool CDB::CreateUpdateItemsAtWarehouse(int,int,class ItemManip [],class AtomicJob*, int,class CPacketHelperEx16384 *) const
0x004F5F08 CClanBBSHTML::~CClanBBSHTML()
0x00427B98 void CAirShipManager::DestroyAllAirShip(void)
0x0060F914 void CEventController::Delete(void)
0x0089EDB0 void User::AcuireVitalityPointInPeaceZone(void)
0x007C0928 void CPetitionSocket::OnRead(void)
0x00530C3C bool CCreature::IsDuelAlly(class CCreature *)
0x0086C554 enum CTerritory::CollisionResult CTerritory::IsCollide(const class FVector &,const class FVector &,bool)
0x007DFDE8 int __cdecl CPledgeMemberList::GetGradeByCharName(wchar_t *)
0x007C42E4 void CPledge::SaveAcquirePledgeSkill(unsigned int,int)
0x00832098 bool CSkillOperateCondition_op_check_skill::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x008E69C8 void User::CheckPeriodicItemOnTick(void)
0x00693E4C class BaseAttribute __cdecl CItem::GetTotalAttribute(void)
0x007EDB58 bool IBSubPointAckPacket(class CPremiumServiceSocket *, const unsigned char *)
0x00622AC8 __cdecl CFishingController::CFishingController(void)
0x00613058 void CEventMatch::PauseAllUser(int)
0x00440B60 int __cdecl AtomicCreateAcademy::Assemble(char*, int)
0x0093E5E0 void CUserSocket::OnClose(void)
0x0084CE18 bool CSkillEffect_i_m_attack_range::Instant(class CCreature*, class CObject*, const class CSkillInfo *, class CSkillAction2*, double)
0x005976A0 void CDB::RequestBuyAirShip(unsigned int,int,int,unsigned int,int,unsigned int)
0x005BAF94 bool ReplyQueryCastleSiegeForUnregister(class CDBSocket*, const unsigned char *)
0x007F8E54 bool CRecipeInfo::CheckCatalyst(class User *)
0x0085B07C bool SSQSystem::SendStatusInfoTo(class User *)
0x007C466C int __cdecl CPledge::GetDefaultPowerGrade(enum PledgeType)
0x00732F74 bool NpcRequestLookNeighbor(class NpcSocket *, const unsigned char *)
0x0049F048 bool BuilderCmd::jump(class CSocket *, class User*, wchar_t *)
0x006E4AF4 void CMonRaceHTML::MonRaceView1(void)
0x0083F624 bool CSkillEffect_p_pvp_physical_attack_dmg_bonus::Pump(class CCreature*, const class CSkillInfo*, int)
0x0073B824 bool NpcPledgeLevelUp(class NpcSocket*, const unsigned char *)
0x007756F8 void COlympiadFuncHandler::RemoveOlympiad(void)
0x00680508 void CInstantZoneDB::AddGroup(class CInstantZoneGroup *)
0x007F3DEC void CPVPMatchSystem::ShowPVPPointRewardTime(class CUserSocket *)
0x00780D50 void CParty::BroadcastSystemMsgToAllParty(unsigned int,const wchar_t *)
0x0085BDCC bool SSQSystem::StartQuickCycle(int)
0x005ADDE8 static bool ReplyHtmlBuilder_RP_REPLY_MAIL_EX(CDBSocket *pSocket, const unsigned char *packet)
0x005ADF60 static bool ReplyHtmlBuilder_RP_FORWARD_MAIL_EX(CDBSocket *pSocket, const unsigned char *packet)
0x005ADAD8 static bool ReplyHtmlBuilder_RP_SAVE_MAIL_EX(CDBSocket *pSocket, const unsigned char *packet)
0x005ADC70 static bool ReplyHtmlBuilder_RP_GET_TEMP_MAIL_EX(CDBSocket *pSocket, const unsigned char *packet)
0x005AD808 static bool ReplyHtmlBuilder_RP_MAIL_LIST_EX(CDBSocket *pSocket, const unsigned char *packet)
0x005AD960 static bool ReplyHtmlBuilder_RP_READ_MAIL_EX(CDBSocket *pSocket, const unsigned char *packet)
0x005A6EF4 static bool ReplySavePCCafePointPacket(CDBSocket *socket, const unsigned char *packet)
0x005AC380 static bool ReplyDelPledgeEmblem(CDBSocket *socket, const unsigned char *packet)
0x005A15E0 static bool ReplyLoadPledgeSiegeKillDeathCount(CDBSocket *socket, const unsigned char *packet)
0x005A50FC static bool ReplyLoadTimeAttackInfo(CDBSocket *pSocket, const unsigned char *packet)
0x00568414 void CCreature::OnActivate(void)
0x006125E8 void CEventMatchRuleSet::RuleParsing(wchar_t *)
0x00891EEC int __cdecl User::GetRealAddablePoint(int,int)
0x008B7850 void User::TeleportToLocationWithItem(class FVector &,int,int,__int64)
0x005A568C bool ReplyLoadUserPremiumItemPacket(class CDBSocket*, const unsigned char *)
0x005963F0 void CDB::LoadPeriodicItemInfo(class User *)
0x007E25EC bool CPledgeMemberList::Add(unsigned int,const wchar_t*, wchar_t*, int,int,int,int,int,enum PledgeType,int)
0x004BBBAC bool BuilderCmd_del_pledge_skill(class CSocket*, class User*, wchar_t *)
0x0071F09C void CNPC::SetDefaultParameters(void)
0x00597260 void CDB::RequestLoadDominionSiege(void)
0x00718270 void CNoblessSystem::Init(void)
0x0049C5F4 bool BuilderCmd_col_setcolor(class CSocket*, class User*, wchar_t *)
0x0084ECB8 bool CSkillEffect_i_unlock::Instant(class CCreature*, class CObject*, const class CSkillInfo *, class CSkillAction2*, double)
0x00408460 void CResidenceDecoVisible::SendResidenceDecoVisibleInfo(CUserSocket *pUserSocket)
0x0090EED8 void CNickColorManager::AddNickColorItem(int)
0x006D958C bool CMiniGameAgit::IsPlayer(unsigned int)
0x0040D10C void CUserSocket::SendSystemMessage(unsigned int)
0x0063EC30 bool CFortressDBEventHandler::ReplyLoadFortressSiege(class CDBSocket *, const unsigned char *)
0x00841E9C bool CSkillEffect_p_channel_clan::Pump(class CCreature*, const class CSkillInfo*, int)
0x005870AC void CDB::RequestResetContribution(int)
0x00659054 void ArchiveMailHtmlBuilder::DisassemblePacket()
0x006597B0 WCHAR *WritePledgeMailFormHtmlBuilder::GetPledgeName()
0x006FB024 bool CAttackAction::IsTargetInSameInZone(void)
0x0082461C void SkillEnchantOperator::BuilderEnchantSkillReset(class User*, class CUserSocket *)
0x0088DA18 void User::CheckTutorialEvent(enum TutorialClientEventEnum)
0x0051E120 bool CCrataeCube::UnregisterUser(unsigned int,int)
0x005A7264 bool ReplySaveUserPointPacket(class CDBSocket*, const unsigned char *)
0x0086BA90 bool CTerritory::IsCollideRough(const class FVector &,const class FVector &,bool)
0x0066B3C4 void CHtmlCommand::SetSocket(CSocket *socket)
0x0066D8E8 void CHtmlCommand::Set(CSocket *socket, const WCHAR *cmd)
0x00417EA4 bool CAirShip::SetMovingIntoCarrier(class CMoveRelativeAction *)
0x00969B4C void CWorld::__async_AsyncPutItem(struct CExecutionArgumentPad *)
0x004A71B4 bool BuilderCmd_DeleteSkills(class CSocket*, class User*, wchar_t *)
0x0082BEA0 void SkillEnchantRouteChange::SendAcquiredSkillList(class User *)
0x00597018 void CDB::RequestLoadDominionRegistry(int)
0x00946FCC bool HtmlCmdDeposit(class CUserSocket*, class User*, const wchar_t*, const wchar_t *)
0x006A4D7C bool CItemEquipCondition_nobless::CheckPrivate(class CCreature*, class CItem *)
0x0046B228 void CBossRecordRanking::AddBossRecord(int,int)
0x0052E7F8 bool CCreature::PickItem(class CItem *)
0x0072F6A4 bool NpcFortressEvent(class NpcSocket*, const unsigned char *)
0x007CAE94 void CPledge::_ServeForAllMember(class CPledgeMemberService &)
0x00557324 void CCreature::GatherNeighborParty(class std::xvectorclass CSafePointer2class CCreature,class std::xallocatorclass CSafePointer2class CCreature  &,class std::xvectordouble,class std::xallocatordouble &,int,class CCreature *)
0x0072F79C bool NPCFieldCyclePointLock(class NpcSocket *, const unsigned char *)
0x007F12CC void CPVPMatch::ChangeState(enum PVPMatchState::Enum)
0x007E604C void CPledgePenaltyViewer::RenderCanNotCreatePledgePenalty(CHtmlGenerator& generator)
0x007E5E14 void CPledgePenaltyViewer::RenderCanNotAcceptNewPledgeMemberPenalty(CHtmlGenerator& generator)
0x007E649C void CPledgePenaltyViewer::RenderCanNotAcceptNewAllianceMember(CHtmlGenerator& generator)
0x007E6264 void CPledgePenaltyViewer::RenderCanNotJoinAsAllianceMemberPenalty(CHtmlGenerator& generator)
0x007E68FC void CPledgePenaltyViewer::RenderWaitingToDismissPledge(CHtmlGenerator& generator)
0x005A75EC bool ReplyLoadPVPPointRestrainPacket(class CDBSocket *, const unsigned char *)
0x007E6D2C void CPledgePenaltyViewer::Show()
0x007E6B14 void CPledgePenaltyViewer::RenderCanNotDismissPledgePenalty(CHtmlGenerator& generator)
0x009520F8 class ItemOptionKey __cdecl VariationDB::GetItemOptionKeyOnCreate(class VariationKey)
0x004FD3B4 void CCleft::_MakeCleftListTotal(class CPacketHelperEx16384 &)
0x00802588 void CResidenceDB::Load(void)
0x0049CFE8 bool BuilderCmd_SetLookNeighbor(class CSocket*, class User*, wchar_t *)
0x005961A8 void CDB::RequestLoadUserPremiumItems(class User *)
0x004D81B8 bool BuilderCmd_vote(class CSocket*, class User*, wchar_t *)
0x008F232C void User::AttackOutOfRange(void)
0x008E5034 bool User::ReplyVariationItem(class CItem*, class CItem*, class CItem*, __int64,class ItemOptionKey,__int64)
0x0066C3A8 void ModifyMail::ExecuteInternal()
0x0066C008 void ModifyMailForm::ParseParameter()
0x0066C58C void ModifyMail::ParseParameter()
0x004A9534 bool BuilderCmd::set_dominion_start(class CSocket*, class User*, wchar_t *)
0x008AA0E4 void User::LevelDownSkillWhenLevelIsTooHigh(void)
0x0085A710 bool SSQSystem::ChangeSealSelectionCount(enum SSQPart::type,enum SSQSeal::type,int)
0x007F4378 bool CPVPMatchSystem::IsInGivePVPPointTime(void)
0x008FCF50 void User::DespawnPet(bool,bool,enum JobOnDespawnPet)
0x007B3CF4 void CPet::AnnouncePickItem(class CItem *)
0x007C7C8C enum PledgeType CPledge::ChangeMemberPledgeType(unsigned int,enum PledgeType)
0x00929284 bool MSNChatLogPacket(class CSocket *, const unsigned char *)
0x0048D2C4 bool BuilderCmd_teleport(class CSocket*, class User*, wchar_t *)
0x00621584 void CFieldCycle::DoPendingJob(int)
0x0053D214 bool CCreature::DeleteItemInInventory(int,__int64,class AtomicJob *)
0x009225C4 bool RequestHennaEquip(class CSocket*, const unsigned char *)
0x0062FE28 void CFortress::UpgradeTreasure(void)
0x008FD128 void User::DeleteYongmaAbnormalStatus(bool)
0x00521BD4 void CCrataeCube::EndMatch(int)
0x00751F00 bool NpcLeaveTimeAttack(class NpcSocket*, const unsigned char *)
0x00955F60 void CVehicleDB::StartDrive(void)
0x007C5804 void CPledge::PledgeMasterTransferCancelByNpc(class CNPC*, class User *)
0x0045B0F4 void CBattleCamp::Disappear(void)
0x005392C0 bool CCreature::GetTargetBackPos(class CCreature*, class FVector &)
0x00927728 bool SetAllianceCrestPacket(class CSocket*, const unsigned char *)
0x007672F8 void COlympiadField::AsyncUpdateSpelledInfo(int,int)
0x007899E4 bool CPartyMatchingRequest::CreateRoom(CPartyRoomInfo& partyRoomInfo)
0x00789F0C bool CPartyMatchingRequest::UpdateRoom(CPartyRoomInfo& partyRoomInfo)
0x006D8260 void CMiniGameAgitRegistPledgeEntry::BroadcastExcept(const class std::xvectorunsigned int,class std::xallocatorunsigned int &,const char*, char *)
0x0084CEF0 bool CSkillEffect_i_m_attack_over_hit_range::Instant(class CCreature *, class CObject *, const class CSkillInfo *, class CSkillAction2*, double)
0x0063577C void CFortressSiege::SetAttacker(bool)
0x00771B94 void COlympiadUser::CompleteToDespawnPet(bool)
0x008CC67C int __cdecl User::GetMyStatus(void)
0x0078E350 bool CPartyMatchingRequest::OnJoinParty(CUserSP pPartyMaster, CUserSP pUser)
0x00796304 bool CPartyMatchingWaitingRoom::IsInWaitingRoom(User *pUser)
0x00519AC4 bool CCoretimeTeleportEventMgr::IsEventPeriod(void)
0x0062234C bool CFishingController::InitFishingData(void)
0x00904F68 bool CUserBookmark::SaveSlot(class User*, wchar_t*, int,wchar_t *)
0x00446820 bool AtomicGiveTimeAttackReward::Do(void)
0x0075AD7C void CGeneralObject::Delete(void)
0x00837C18 bool CSkillEffect_i_remove_soul::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x0076EEF4 void COlympiadTeam::SendSummonInfo(class COlympiadTeam *)
0x008116A0 int __cdecl CContainerDB::GetVehicleID(int)
0x00835BC8 bool CSkillEffect_i_summon_soul_shot::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x009594BC double CVitalityPoint::GetNpcExpRatePanelty(double)
0x00894010 double User::DexBonusF(void) const
0x0046BB34 bool CBotChecker::IsCanCheck(void)
0x0075374C bool NpcShowEnchantSkillList(class NpcSocket*, const unsigned char *)
0x00959728 double CVitalityPoint::GetPartyPanelty(int)
0x00700234 void CAttackAction::ConvertSkillTargetToMultiTarget(class CCreature *)
0x006C3068 bool CManorFuncHandler::IsChamberlain(void)
0x00895788 void User::SendRemainTime(int,enum eSMsgType,int,int)
0x004EE8F4 void CCastle::RegistrationOnTimerExpired(long)
0x004BD768 bool BuilderCmd::remove_residence_skill(class CSocket*, class User*, wchar_t *)
0x004C9264 bool BuilderCmd_EarthQuake(class CSocket*, class User*, wchar_t *)
0x007AE858 const class PetDataSheet::Record &__cdecl CCommonRidingInfo::Record(int)
0x00842384 bool CSkillEffect_p_target_me::PumpStart(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpStartType) const
0x005C6028 bool ReplyLoadAgitBid(class CDBSocket*, const unsigned char *)
0x00900474 bool CBasicActionHandler_CLIENT_ACTION::Handle(class User*, int,bool,bool,int)
0x008644F0 DateTime::DateTime(const WCHAR *szDate, const WCHAR *szTime)
0x00585230 void CDB::RequestDeletePledgeCrest(unsigned int)
0x00830214 bool CSkillOperateCondition_target_my_party::CanUse(class CCreature*, const class CSkillInfo *, class CObject *)
0x00756C20 bool NpcSocket::NpcCleftCenterDestroyed(class NpcSocket*, const unsigned char *)
0x00584D58 void CDB::RequestGetAllianceCrest(class User*, unsigned int)
0x005A5274 bool ReplySavePremiumItemForChar(class CDBSocket*, const unsigned char *)
0x00415BF8 void CAgitHTML::AgitCommand(int,int,__int64,int,int)
0x00417174 int __cdecl CExecutionSerializerFast::AddExecutable(class MemoryObject*, void (__cdecl MemoryObject::* )(void *),void *, const wchar_t *)
0x00894A10 bool User::ValidateOrgAttackSpeed(void)
0x00651378 void CGIPSocket::SendV(const char*, char *)
0x0047E414 bool BuilderCmd_geo_test(class CSocket*, class User*, wchar_t *)
0x00723BB4 bool CObjectMapclass CNPC,8191,5,class RWLock::DeleteObject(int,char*, int)
0x004455DC bool AtomicDropItem::Do(void)
0x006905E4 World_Sync
0x0071C154 CBitStorage()
0x0048A8EC bool BuilderCmd_gmon(class CSocket*, class User*, wchar_t *)
0x0076CA0C bool COlympiadTeam::IsNotCursedUser(int &)
0x0047ED20 bool BuilderCmd_ps_cancel(class CSocket*, class User *, wchar_t *)
0x004561A8 bool AuthRequestServerVersion(class CAuthSocket*, const unsigned char *)
0x007743B8 bool COlympiadEntry::GetRemainEntry(class COlympiadTeam **, class COlympiadTeam **)
0x007552C8 bool NpcEndPVPMatch(class NpcSocket *, const unsigned char *)
0x00953558 void CVehicleDB::ClearStation(void)
0x00821CB8 const class CSkillInfo *__cdecl CSkillDB::GetSkillInfoByName(const wchar_t *)
0x00925954 bool NewCharacterPacket(class CSocket*, const unsigned char *)
0x0071ADDC bool CNPC::ValidateOrgHPMP(void)
0x005EDEF8 bool CDominionSiegeEntry::RemoveUser(unsigned int)
0x00571804 void CCreatureController::__async_TargetOutOfSight(struct CExecutionArgumentPad *)
0x0063A138 void CFortress::SendMapInfo(class User *)
0x006DBDA8 bool CMiniGameAgitBuilderCmd::JoinGame(class CSocket *, class User*, wchar_t *)
0x00895244 void User::CheckSummonBattleMode(void)
0x009107A4 bool RequestItemAuctionInfo(class CSocket*, const unsigned char *)
0x005AA078 bool ReplyLoadDailyQuestPacket(class CDBSocket*, const unsigned char *)
0x0062245C bool CFishingController::CheckFishingPumpingCondition(void)
0x005B9BF8 bool ReplyManageBattleCamp(class CDBSocket*, const unsigned char *)
0x0059B40C void CDB::RequestDeleteBlockListBatch(class User*, class std::xvectorint,class std::xallocatorint &,class std::xvectorclass std::basic_stringwchar_t,struct std::char_traitswchar_t,class std::allocatorwchar_t ,class std::xallocatorclass std::basic_stringwchar_t,struct std::char_traitswchar_t,class std::allocatorwchar_t  &) const
0x0052D6A0 bool CCreature::ValidateOrgAttackSpeed(void)
0x008A122C void User::ValidateLocationInVehicle(class FVector,int,int)
0x00895CE0 void User::SaveGet5YearGiftTime(void)
0x0070EAF8 bool CMoveToTargetAction::OnStart(void)
0x00461A24 bool CBlockUpset::IsBlockUpsetWaitingPlayer(int)
0x0065EF60 void DeleteBlockBatchHandler::BuildHtmlInternal()
0x00427868 void CAirShipManager::GetOnAirShip(class User*, class CAirShip *)
0x00481F68 bool BuilderCmd_is_in_water(class CSocket*, class User*, wchar_t *)
0x0058A674 void CDB::RequestSavePetitionMsgForceGetDBID(wchar_t *, int,wchar_t *)
0x00582C1C void CDB::RequestDestroyPetItem(class CItem *, __int64,class User*, class CPet *)
0x0091E9B4 bool ShowBBSBoard(class CSocket*, const unsigned char *)
0x00631A7C bool CFortress::CanRegisterSiege(class CPledge *)
0x00659334 void SendPledgeMailHandler::DisassemblePacket()
0x008F7A20 void User::_GetTransformSkillListByType(const class CSkillInfo*, class std::xvectorclass CSkillInfo const*, class std::xallocatorclass CSkillInfo const* &,class std::xvectorclass CSkillInfo const*, class std::xallocatorclass CSkillInfo const* &,class std::xvectorclass CSkillInfo const*, class std::xallocatorclass CSkillInfo const* &)
0x0043D348 void MemoControl::Dump(void)
0x006A14D0 void CQuestItem_ORT::ReportOrt(char *caller, int line, int nWorkType)
0x00913B10 bool UserPacketEx::RequestRegisterDominion(class CSocket*, const unsigned char *)
0x00607788 void DxStartOlympiadSeason::DoServerJob(void)
0x00579B80 void CCursedWeaponMgr::SendCursedWeaponList(class CUserSocket *)
0x007721EC bool COlympiadSystem::QuickMatch(int,int,int,enum GameRuleType,bool)
0x00597918 void CDB::SendCachePing(void)
0x0088B338 void User::InitGeoQuery(void)
0x00749808 bool NpcCastleGateOpenClose(class NpcSocket *, const unsigned char *)
0x00895454 bool User::CanUseShot(const class CSkillInfo *)
0x00503ED0 void CCommCli::RequestBBSAddFavorite(User *pUser, WCHAR* sName, WCHAR* sURL, int nArg1, int nArg2, int nArg3, int nArg4, int nArg5, WCHAR * sArg)
0x00503DC8 void CCommCli::RequestBBSGetFavorite(User *pUser)
0x00504B00 void CCommCli::RequestClanBBSView( User* pUser, int nWorldId, int nPledgeId)
0x005049D8 void CCommCli::RequestClanBBSList( User* pUser, int nWorldId, int nPage, int searchOption, WCHAR* szSearch )
0x00504278 void CCommCli::RequestGetMemoList( User* pUser, int nPage, WCHAR* szSearch)
0x005032AC void CCommCli::RequestBBSWrite(User *pUser, int nId, int nBoardType, int nBid, WCHAR * sTitle, WCHAR * sContent, WCHAR* sKeyword )
0x00504048 void CCommCli::RequestBBSDelFavorite(User *pUser, int nId)
0x00504160 void CCommCli::RequestBBSGetAnnounce(User *pUser, int nId)
0x00780928 void CParty::SendAllSpelledInfoChanged(void)
0x0094DA18 bool LoadStrFromReg(WCHAR* str, const WCHAR* keyStr, const WCHAR* regEntry)
0x00503518 void CCommCli::RequestBBSWriteComment(User *pUser, int nId, nBoardType, int nBid, WCHAR* sComment)
0x00503AF8 void CCommCli::RequestBBSModify(User *pUser, int nId, int nBoardType, int nBid, WCHAR* sTitle, WCHAR* sContent, WCHAR* sKeyword)
0x007D2178 void CPledge::SetCastleUnderSiege(class CCastle*, int)
0x007F1F84 void CPVPMatchSystem::SetEnableCheckAllCondition(bool)
0x006FDE34 bool CTalkAction::OnStart(void)
0x0086C224 bool CTerritory::IsInside(const class FVector &,bool)
0x008BFC7C void User::OutOfSight(class CObject *, bool)
0x0060CA68 void EtcManiCreateItemAuctionBid::DumpError(void)
0x0060BDF4 void EtcManiUpdatePledgeNameValue::DumpError(void)
0x0060BAFC void EtcMani::Destroy(void)
0x00886D4C void CUndergroundColosseum::UnregisterParty(unsigned int,int)
0x00577638 void CCursedWeapon::EnterWorld(class CItem*, class User *)
0x008B7634 void User::ChangeInventorySlot(class std::xmapint,int,struct std::lessint,class std::xallocatorstruct std::pairint const ,int  &)
0x00837478 bool CSkillEffect_cub_hp_drain::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x00520180 bool CCrataeCube::IsCrataeCubeUser(class User &)
0x00440AA8 void AtomicAquirePledgeSkill::Dump(void)
0x004AC62C bool BuilderCmd::attack_test1_sec(class CSocket*, class User *, wchar_t *)
0x005FC08C void CIndividualDuel::SendToTeamPlayers(enum DuelTeamType,const char *, ...)
0x0042BCE4 class CAirShip *__cdecl CAirShipManager::_CreateAirShip(class CAirShipConst*, unsigned int,unsigned int,int)
0x00691620 void CFieldCycleChangedMesage::OnReceive(int)
0x00424058 class CAirShipConst *__cdecl CAirShipManager::_CanBuyFreeAirShip(class User*, enum AirShipTypeEnum,int)
0x0047063C void CBotReportAgent::ResetAll(void)
0x00687278 void CInventory::RemoveSlotInfo(class CItem *)
0x0046BE48 bool CBotChecker::CheckImpl_2(class User *)
0x00810C1C bool CContainer::ChangeContainerOf(class CCreature*, class CContainer*, class CContainer *)
0x0043EA38 void AtomicDropItem2::Dump(void)
0x0043E780 void AtomicDropItem::Dump(void)
0x0043D0F0 void AtomicResetPetName::Dump(void)
0x0043CEB8 void AtomicChangePetName::Dump(void)
0x0043CC80 void AtomicDestroyPet::Dump(void)
0x0043CA58 void AtomicEvolvePetWithSameExp::Dump(void)
0x0043C810 void AtomicEvolvePet::Dump(void)
0x0043C3C8 void AtomicParamChange::Dump(void)
0x0043BF6C void AtomicJob::Dump(void)
0x006B5C04 void CItemDropEvent::Init(struct tm *, struct tm *)
0x008F345C bool User::PacketAcceptable(int)
0x00692310 void CIOCriticalSection::WriteLock(const wchar_t*, int)
0x00687120 void CInventory::AddSlotInfo(int,class CItem *)
0x00971E28 void CWorld::LoadStaticObject(class CStaticObject*, class CAirShip *)
0x00497C44 bool BuilderCmd_show_door_hp(class CSocket*, class User*, wchar_t *)
0x006CE824 void CMarketPriceList::RequestLoadMarketPriceList(void)
0x00484194 bool BuilderCmd_LoadUiSetting(class CSocket *, class User*, wchar_t *)
0x00695CB4 void CItem::SendItemDropped(class CUserSocket*, class CCreature *)
0x00500EDC bool CCleft::LeaveWorld(class User &)
0x0087C858 bool `anonymous-namespace::ValidatePosition(class User*, const int &,bool)
0x0083ECD4 bool CSkillEffect_p_physical_defence_by_hp2::Pump(class CCreature*, const class CSkillInfo*, int)
0x00591194 void CDB::RequestLoadPCCafePoint(class User *, int)
0x0086132C int __cdecl CSharedFactoryclass CStaticObject,class CSharedStaticObjectData,class CSharedStaticObjectConstant,&class CSharedDefine const SharedDefine_StaticObject::Remove(class CStaticObject *)
0x0059161C void CDB::RequestSavePVPPointRestrain(class User*, int,int)
0x004E57EC bool BuilderCmd::bot_block_sec(class CSocket*, class User*, wchar_t *)
0x0077E9D8 void CParty::GetAllMember(class std::xvectorclass User*, class std::xallocatorclass User* &)
0x007C5A40 void CPledge::SetPledgeMasterName(const wchar_t *)
0x005AF7DC bool ReplyLoadPledge(class CDBSocket*, const unsigned char *)
0x0092694C bool GetOffVehiclePacket(class CSocket*, const unsigned char *)
0x00430FC0 void CShipController::TimerExpired(int)
0x007DF628 void CPledgeMemberList::AddAcademyMember(unsigned int,int,unsigned int)
0x00445054 bool AtomicShowQuestPage::Do(void)
0x0089C66C void User::SetVitalityPoint(int,bool)
0x00481780 bool BuilderCmd_PCCafeCouponShowUI(class CSocket*, class User*, wchar_t *)
0x008B4574 void User::DeleteBlockList(int)
0x00484E84 bool BuilderCmd::show_target_pos(class CSocket*, class User*, wchar_t *)
0x00471D24 void CCreature::TurnOffSoulshot(bool)
0x005E3F30 bool ReplyGetAllianceCrest(class CDBSocket*, const unsigned char *)
0x005EF074 bool CDominion::IsUserInSiege(int)
0x005FE6A4 void PartyDuel_Lose::OperateInternal(class User*, class CPartyDuelPlayerInfo *)
0x006B6AE0 void CEventTimerYear1::TimerExpired(int)
0x005FE554 void PartyDuel_Draw::OperateInternal(class User*, class CPartyDuelPlayerInfo *)
0x005FE5FC void PartyDuel_Win::OperateInternal(class User*, class CPartyDuelPlayerInfo *)
0x005A4834 void PeriodicItemJobHandler::OnExpired(class User*, const unsigned char *)
0x0083AE70 bool CSkillEffect_i_my_summon_kill::Instant(class CCreature*, class CObject*, const class CSkillInfo *, class CSkillAction2*, double)
0x00766434 void COlympiadField::StatusWaitMatch(int)
0x00832A60 bool CSkillEffect_op_target_pc::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x005AAC18 bool ReplyLoadBotReportTopTenPacket(class CDBSocket*, const unsigned char *)
0x0052FD68 enum SlotType CCreature::IsEquiped(int,enum SlotType)
0x0048A5A0 bool BuilderCmd_observer_start(class CSocket*, class User*, wchar_t *)
0x0059360C void CDB::UpdateCharItemDuration(class User *)
0x007E959C void CPremiumServiceSocket::Send(const char *, ...)
0x007409F4 void NpcSocket::OnRead(void)
0x005F184C void CDominionManager::SendDominionRegistry(int,int)
0x00943D64 bool HtmlCmdTeleportRequest(class CUserSocket*, class User*, const wchar_t*, const wchar_t *)
0x0085A128 void SSQSystem::ValidateCollectPointPortion(void)
0x00544434 void CCreature::BroadcastCombatModeStart(void)
0x0073CF14 bool NpcLottoBuyTicket(class NpcSocket*, const unsigned char *)
0x007DBFBC void CPledge::LoadPledgeSkill(const unsigned char *)
0x0058B954 void CDB::RequestAddMiniGameAgitMemeber(unsigned int,class CPledge*, class User *)
0x00902868 void CUserBookmark::SetSlotCount(int)
0x0052A68C double CCreatureSkillMod::ApplyBonus(double,int)
0x0086246C CStatusWnd::~CStatusWnd(void)
0x0086492C std::xwstring DateTime::ToString() const
0x008D0640 bool User::Die(class CCreature *)
0x006596D8 CUser *CHtmlBuilder::GetUser(int userServerId)
0x0042A674 bool CAirShip::GetOff(class User*, bool)
0x00731E6C bool NpcSetMPCCMasterPartyRouting(class NpcSocket*, const unsigned char *)
0x0085FE1C bool SSQSystem::OnEventStart(void)
0x0082DAD8 double L2SkillFunc::ApplyMagicCriticalToDamage(double,class CCreature &,class CObject &)
0x008CFECC bool User::IsMakeAttackerGuilty(class CCreature*, bool)
0x009044A8 bool CUserBookmark::TeleportTo(class User *)
0x0080F628 bool CContainerDB::Push(int,int)
0x0088A9BC double User::RegenBonusByMotionEx(void)
0x0092278C bool RequestHennaUnequipInfo(class CSocket*, const unsigned char *)
0x00928E04 bool RequestRecipeBookItemMake(class CSocket*, const unsigned char *)
0x005FEEC4 void CIndividualDuel::ForAllPlayer(class CDuelPlayerOperation &)
0x0092E16C class std::basic_stringwchar_t,struct std::char_traitswchar_t,class std::allocatorwchar_t CUserSocket::GetMacAddressString(void)
0x006BFFF0 void CManor::ClearNextCropData(void)
0x0085967C class std::basic_stringwchar_t,struct std::char_traitswchar_t,class std::allocatorwchar_t CSocket::GetIPAddressString(void)
0x0061DDEC class std::basic_stringwchar_t,struct std::char_traitswchar_t,class std::allocatorwchar_t CFHTML::MakeHTMLFromStream(const unsigned char *&,unsigned char)
0x007D2540 void CPledge::SetDominionUnderSiege(class CDominion*, bool)
0x006688C8 void CHTMLCache::OnIOCallback(BOOL bSuccess, DWORD dwTransferred, LPOVERLAPPED lpOverlapped)
0x0083A1C8 bool CSkillEffect_i_skill_turning::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x00585730 void CDB::RequestInstallBattleCamp(unsigned int,unsigned int,unsigned int,class FVector,int)
0x005A30E0 bool ReplyRenameSubpledge(class CDBSocket*, const unsigned char *)
0x007A28DC void CPathNodeWorld::Load()
0x0089332C void User::_OnAbnormalStatusChanged(const class CSkillInfo &,class CCreature *, enum SkillPumpStartType,bool)
0x0091C490 bool UseItemPacket(class CSocket*, const unsigned char *)
0x006A470C bool CItemEquipCondition_sex::CheckPrivate(class CCreature*, class CItem *)
0x005E5000 bool ReplyLoadFriendList(class CDBSocket*, const unsigned char *)
0x0059F0B4 bool ReplyFishingEventRegister(class CDBSocket*, const unsigned char *)
0x007F7750 void CPVPMatchSystem::GetMyStatus(class User &,int &)
0x007C7A8C bool CPledge::CheckValidMasterCandidate(wchar_t *)
0x006D8EF0 void CMiniGameAgit::AddMember(unsigned int,unsigned int)
0x008FD79C void User::RidePet(class CPet *)
0x005AFAB0 bool ReplyDeletePledgeByTimer(class CDBSocket*, const unsigned char *)
0x004E5C8C bool BuilderCmd::bot_block_remove(class CSocket*, class User *, wchar_t *)
0x006D8F98 void CMiniGameAgit::BroadcastToAllPledgeMaster(const char*, ...)
0x005CED88 bool ReplyEstablishFriendship(class CDBSocket*, const unsigned char *)
0x008F3BC8 bool User::IsCallPCEnable(class User*, class User*, enum User::CallPCResult &)
0x004FF3A4 bool CCleft::_RemoveCleftPlayer(int)
0x00495D30 bool BuilderCmd_set_siege_regist_state(class CSocket *, class User*, wchar_t *)
0x006FC288 bool CAttackAction::CheckAttackValidity(class CCreature*, class CObject *)
0x004460D0 bool AtomicEventRide::CanDo(void)
0x00852738 bool CSkillEffect_i_sweeper::Instant(class CCreature *, class CObject *, const class CSkillInfo*, class CSkillAction2*, double)
0x004BF778 bool BuilderCmd::set_castle_owner(class CSocket*, class User *, wchar_t *)
0x00719BCC enum SlotType CNPC::UnequipItem(class CItem *)
0x008E85C4 enum SlotType User::UnequipItem(class CItem *)
0x00431458 void CShipController::__async_Ascent(struct CExecutionArgumentPad *)
0x005E54BC bool DBPacketHandler::ReplyRegisterSiegeAgitPledge(class CDBSocket*, const unsigned char *)
0x0044BF5C bool AtomicTeleportParty::Do(void)
0x0089A758 unsigned long User::ReducePunishTime(void)
0x0061F64C void CFieldCycle::_OnStepChanged(int,int,bool)
0x0083E87C bool CSkillEffect_p_critical_rate_by_hp1::Pump(class CCreature*, const class CSkillInfo*, int)
0x004409D0 const unsigned char *__cdecl AtomicAquirePledgeSkill::Disassemble(const unsigned char *)
0x00440840 const unsigned char *__cdecl AtomicCastBuffWithMpConsumption::Disassemble(const unsigned char *)
0x00440E24 const unsigned char *__cdecl AtomicCreateSubPledge::Disassemble(const unsigned char *)
0x00431F68 void CShipMoveAction::OnEnd(bool)
0x00441254 const unsigned char *__cdecl AtomicDeleteAcquireSkills::Disassemble(const unsigned char *)
0x0044101C const unsigned char *__cdecl AtomicUpdatePCCafePoint::Disassemble(const unsigned char *)
0x004416D4 const unsigned char *__cdecl AtomicManipulatePVPPointWithItem::Disassemble(const unsigned char *)
0x0044148C const unsigned char *__cdecl AtomicUpdatePVPPoint::Disassemble(const unsigned char *)
0x00441B64 const unsigned char *__cdecl AtomicBuyAirShip::Disassemble(const unsigned char *)
0x0044192C const unsigned char *__cdecl AtomicSummonAirShip::Disassemble(const unsigned char *)
0x007E9868 void CPremiumService::RequestCheckVersion(void)
0x0088045C void CPCTrap::EnterWorld(bool,int,int,unsigned int)
0x008404E4 bool CSkillEffect_p_cp_regen::CheckPumpCondition(class CCreature *)
0x0062A69C bool CFishingEventMgr::SendPrizeList(class User *)
0x007AB450 __cdecl CSummon::CSummon(const class CSummon &)
0x004F1550 void CCastle::GetDefenderPledge(class std::xvectorclass CPledge*, class std::xallocatorclass CPledge* &,class std::xvectorint,class std::xallocatorint &,class std::xvectorint,class std::xallocatorint &)
0x005C68AC bool ReplySetIntervalAnnounce(class CDBSocket*, const unsigned char *)
0x008A53F0 void User::ObserverStart(int,int,int,int,int,int)
0x00808A38 unsigned int CSecureINIFile::GetInt(const wchar_t*, const wchar_t*, int)
0x004F5B9C bool CChair::Occupy(int sID)
0x0085BC34 bool SSQSystem::DismissMember(class User *)
0x0073BD24 bool NpcApproveBattle(class NpcSocket*, const unsigned char *)
0x006C2684 void CManor::CalcNextManor(void)
0x00591DEC void CDB::AddBossPoint(int,int,int)
0x005222BC void CCrataeCube::TimerExpired(int)
0x00518230 void CControlTower::SetStatus(enum ControlTowerStatusEnum)
0x0083C4C0 bool CSkillEffect_p_block_move::PumpStart(class CCreature &,class CCreature*, const class CSkillInfo *, enum SkillPumpStartType) const
0x00677BB0 bool CInstantZoneEntranceCondition_check_level::CanEnter(class CObject*, const class CInstantZone*, bool)
0x0076A03C bool COlympiadUser::SetObserver(int,const class FVector &)
0x007F4F28 int __cdecl CPVPMatch2::CheckRegisterUser(unsigned int)
0x0044179C void AtomicManipulatePVPPointWithItem::Dump(void)
0x007C39D4 bool CPledge::SwitchPledgeWarMemberCountCondition(void)
0x004851A4 bool BuilderCmd_SetPremiumUser(class CSocket*, class User*, wchar_t *)
0x00488EEC bool BuilderCmd::setpetparam(class CSocket*, class User*, wchar_t *)
0x007E50D4 void GenericService::ServeInternal(class User *)
0x004941D8 bool BuilderCmd_actorcount(class CSocket*, class User*, wchar_t *)
0x0047BF4C bool BuilderCmd_ask_residence(class CSocket *, class User*, wchar_t *)
0x007AC1B0 bool CSummon::IsAlive(void)
0x00479DD4 bool BuilderCmd_show(class CSocket*, class User*, wchar_t *)
0x0047F9B4 bool BuilderCmd_manor_time_ignore(class CSocket*, class User *, wchar_t *)
0x00483768 bool BuilderCmd_SetAuctionStatus(class CSocket*, class User*, wchar_t *)
0x0071BA5C void CNPC::_OnAbnormalStatusDeleted(const class CSkillInfo &,class CCreature *, enum SkillPumpEndType,int)
0x0068E90C void CIOServer::OnWaitCallback(void)
0x006A4ED4 bool CItemEquipCondition_academy::CheckPrivate(class CCreature*, class CItem *)
0x00797308 bool CMPCCRoom::UpdateInfo(class CMPCCRoomInfo &)
0x0075786C __cdecl CObject::CObject(void)
0x005BD8C0 bool BBSDelete(class CDBSocket*, const unsigned char *)
0x004F4C18 void CCastle::PrepareSiege(void)
0x00757914 __cdecl CObject::CObject(const class CObject &)
0x006D67C4 void CUnreturnedPointKeeper::Clear(void)
0x00450D3C bool CAuctionManager::DeleteAuction(class CAuction *)
0x00545D5C void CCreature::ValidateLocationInVehicle(unsigned int)
0x005E6E38 void CDBSocketOp::DelPledgeAnnounce(const unsigned char *)
0x009602C8 void CWareHouseWithdraw::RequestEx()
0x0095BAF0 void CWareHouseWithdraw::GetClassId(int nItemDBID)
0x005B04D4 bool ReplyGetDbRelatedCounts(class CDBSocket*, const unsigned char *)
0x0082D300 struct L2SkillFunc::MagicTargetInfo __cdecl L2SkillFunc::GetMagicTargetInfo(class CCreature &,class CObject &,const class CSkillInfo *)
0x004DEA10 bool BuilderCmd_Premium_item(class CSocket*, class User*, wchar_t *)
0x0057274C void CubicActivationInfo::Init(long,bool)
0x006D58B4 bool CMiniGameAgitBuilderCmd::SetTime(class CSocket*, class User*, wchar_t *)
0x007CC404 void CPledge::CloseMemberWindowPacket(wchar_t *)
0x0060361C void CDuelManager::UpdateDuelPlayerStatus(class User *)
0x0042E6FC void CAirShip::Landing(int)
0x008AD2E8 bool User::OnMagicSkillUsePacket(int,bool,bool)
0x008FFEF4 void CUserBasicAction::SendList(class User *)
0x005EF1E4 void CDominion::AddOwnThing(class COwnThing *)
0x006BF4A8 void CManor::SetPledge(class CPledge *)
0x007F5724 void CPVPMatchSystem::AddGivePVPPointTime(class CPVPMatchSystem::CPVPPointTimeBlock *)
0x0085E77C void SSQSystem::CastSpellSealEffect(void)
0x007FAD98 bool CObjectMapclass CReplyChecker,1,5,class RWLock::DeleteObject(int,char*, int)
0x007AD2C4 bool CPet::ValidateOrgPAttack(void)
0x00953434 bool CVehicleDB::ReserveStation(int)
0x0043D5B0 void NRMemoControl::Dump(void)
0x00584078 void CDB::RequestGetLoginAnnounce(int)
0x007FAC54 CReplyChecker::CReplyChecker(int eReplyChecker, User *pRequester, User *pReplier)
0x00451704 bool CAuction::Bid(class User*, __int64)
0x004B40EC bool BuilderCmd_add_pledge_namevalue(class CSocket*, class User*, wchar_t *)
0x00583830 void CDB::RequestLoadSkill(class User *) const
0x0087DCA8 void CTransformCombatData::SetPDefend(class std::xvectordouble,class std::xallocatordouble &)
0x004AE594 bool BuilderCmd::no_limit_fly(class CSocket *, class User*, wchar_t *)
0x005944CC void CDB::RequestLoadAllAuctionBid(int)
0x0082F8FC bool CSkillOperateCondition_race::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x0046E58C void CBotChecker::OnTimerExpired(void)
0x00752A54 void CNpcRemover::TimerExpired(int)
0x0089E4A8 bool User::OnJumpPacket(void)
0x00638954 bool CFortressBuilderCmdHandler::BuilderCmd_SetOwner(class CSocket*, class User*, wchar_t *)
0x005917CC void CDB::RequestFishingEventLoadTime(void)
0x00731BC0 bool NpcInstantTeleportMPCC(class NpcSocket *, const unsigned char *)
0x0040591C bool NewInspectorAgent::ResponseCommonImpl(const unsigned char **, bool)
0x00405D48 bool NewInspectorAgent::TimeCheckImpl(void)
0x0074D154 bool NpcTeleportPacket(class NpcSocket*, const unsigned char *)
0x0059D3B4 void CDB::RequestSavePledgeContribution(int,bool,bool,class std::xmapint,double,struct std::lessint,class std::xallocatorstruct std::pairint const ,double  *)
0x0047B290 bool BuilderCmd_diet(class CSocket*, class User*, wchar_t *)
0x00744900 bool NpcSocket::NpcStartScenePlayer(class NpcSocket*, const unsigned char *)
0x0072F1B0 bool NpcStaticObjectAttackPacket(class NpcSocket*, const unsigned char *)
0x0072E0A8 bool NpcSetVaultEmpty(class NpcSocket*, const unsigned char *)
0x007711D8 void COlympiadEntry::ClearAllEntry(void)
0x0066B46C bool CHtmlCommand::CheckCommServer()
0x0085ACF0 void SSQSystem::CastSpellSealEffect(class User *)
0x00405E60 bool NewInspectorAgent::ResponseSecond(const unsigned char **)
0x00405EF8 bool NewInspectorAgent::ResponseFirstImpl(const unsigned char **)
0x007E3494 enum PledgeType CPledgeMemberList::ChangeMemberPledgeType(unsigned int,enum PledgeType)
0x0068E100 bool CInventory::CreateOrAddItem(int,int,__int64)
0x005BEA5C bool PingTest(class CDBSocket*, const unsigned char *)
0x00692508 void CIOCriticalSection::ReadUnlock(void)
0x005DD93C bool PickItem(class CDBSocket*, const unsigned char *)
0x007B2E28 void CPet::SendPetItemList(bool)
0x007CE95C enum PledgeType CPledge::GetSubMasterPledgeType(unsigned int)
0x00884DE8 void CUCRecordBoard::SendCurrentRecordForSystemMessage(class User *)
0x007ABF80 void CSummon::CacheMasterInfo(class User *)
0x00627F78 bool CFishingEventMgr::ReplyLoadStartTime(int)
0x0059FE34 bool ReplyCreateItemAuction(class CDBSocket *, const unsigned char *)
0x0060E560 bool EtcManiRollbackUserItemBaseAttribute::DoAtServer(void)
0x0060DDE4 bool EtcManiUpdateUserItemBaseAttribute::DoAtServer(void)
0x0060DC4C bool EtcManiUpdatePledgeNameValue::DoAtServer(void)
0x007BFDE8 static bool LeaveMsgOk(CPetitionSocket *socket, const unsigned char *packet)
0x0060EADC bool EtcManiCreateItemAuctionBid::DoAtServer(void)
0x0091A734 bool EnchantSkillInfoDetail(class CSocket*, const unsigned char *)
0x0060EF5C bool EtcManiWithdrawItemAuctionBid::DoAtServer(void)
0x00403FB8 bool GameGuardAgent::QuerySecondImpl(void)
0x009012CC bool CBasicActionHandler_TELEPORT_BOOKMARK::Handle(class User*, int,bool,bool,int)
0x007F119C int __cdecl CPVPMatch::GetMovingTeamCount(int,int,int)
0x00913014 bool RequestViewPledgeWarList(class CSocket *, const unsigned char *)
0x00944E24 bool HtmlCmdPledgeLevelUp(class CUserSocket *, class User*, const wchar_t*, const wchar_t *)
0x0066665C static bool ReplyHtmlBuilder_RP_ARCHIVE_MAIL_EX(CDBSocket *pSocket, const unsigned char *packet)
0x00436BA4 void CArea::SetSkillProb(int)
0x007C0094 static bool RequestPchatStart(CPetitionSocket *socket, const unsigned char *packet)
0x005BB99C bool ReplyModPledgeNamePacket(class CDBSocket*, const unsigned char *)
0x0080EA3C void CContainerIndex::Substract(class CContainerIndex &)
0x007C01B0 static bool RequestPchatEnd(CPetitionSocket *socket, const unsigned char *packet)
0x0062BA34 void CFortress::Init(void)
0x007D7CD4 void CPledge::CancelWarWhoTargetedMe(void)
0x0040F46C class CAgit *__cdecl CAgitHTML::GetPledgeAgit(int,bool)
0x008443DC bool CSkillEffect_i_fishing_pumping::Instant(class CCreature *, class CObject *, const class CSkillInfo*, class CSkillAction2*, double)
0x007D2F10 void CPledge::InvalidatePledgeSkillList(void)
0x006B4604 bool CL2Time::UpdateNextManor(void)
0x00846990 bool CSkillEffect_i_energy_attack::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x007F1104 int __cdecl CPVPMatch::GetCombatElapsedSec(void) const
0x00658414 void ReadMailHtmlBuilder::DisassemblePacket()
0x00630DA0 void CFortressFlagpole::SendFortressFlagpoleInfo(class CUserSocket *)
0x00802E6C void CResidence::RemoveResidenceSkill(class CPledge &)
0x0052A504 long User::GetItemManipulation(void)
0x007CB184 bool CPledge::IsMemberInTeamBattleEntry(class User *)
0x00479904 bool BuilderCmd_reset_npc_db(class CSocket*, class User*, wchar_t *)
0x008FB648 bool User::HaveAgathion(void)
0x004A8918 bool BuilderCmd::standby_dominion(class CSocket*, class User *, wchar_t *)
0x00816A5C void CShortCut::DeleteShortCut(int)
0x00593704 void CDB::UpdateItemDuration(unsigned int,unsigned int,int)
0x0094B8A0 bool HtmlCmdClassChange(class CUserSocket*, class User*, const wchar_t*, const wchar_t *)
0x0081F838 int __cdecl CSkillInfo::CheckOperateCond(class CCreature*, class CObject*, enum CSkillInfo::OperateConditionTarget) const
0x004A2B78 bool BuilderCmd::_vehicle_reload(void)
0x0044856C bool CSharedCreatureData::ResetFlagJournal(int,int)
0x007D9BAC void CPledge::_SendPledgeSkillListWhoCanAcquire(bool,bool)
0x00596DD0 void CDB::RequestDecayBotReport(class User *)
0x00858B38 void CSocket::SetKey(const char (&)[16])
0x00769528 bool COlympiadUser::WaitingOlympiadObserving(void)
0x0059DDAC bool CObjectMapclass CUserSocket,8191,29,class RWLock::Insert(int,class CUserSocket*, char*, int)
0x005F32FC void CDominionManager::SendDominionScriptEvent(int,int,int)
0x00969520 void CWorld::__async_AsyncPickItem(struct CExecutionArgumentPad *)
0x005B3820 void CObjectStorageclass CFriends::SetObject(class CFriends *)
0x00403568 bool Agent::QueryFirst(const class std::xvectorclass CPacketHelperEx16384*, class std::xallocatorclass CPacketHelperEx16384* &,class std::_Vector_iteratorclass CPacketHelperEx16384*, class std::xallocatorclass CPacketHelperEx16384* )
0x00402B28 bool Agent::TimeCheck(void)
0x0043F6DC bool AtomicAddTimeAttackRecord::Do(void)
0x004180FC bool AirShipManagerHelper::CanSummon(class User *)
0x00451C90 void CAuctionManager::Init(int,const unsigned char *)
0x005B2788 bool ReplyMonRace(class CDBSocket*, const unsigned char *)
0x00402A30 bool Agent::ResponseFirst(const unsigned char **)
0x004E9714 void CCastle::Set(int,long,int,int,wchar_t*, int,__int64,int)
0x005F07C4 void CDominionSiegeEntry::SendDominionMessage(int,int,wchar_t*, bool)
0x00449E04 bool AtomicStartObserver::Do(void)
0x0044007C bool AtomicAddTimeAttackFee::Do(void)
0x0043FB14 bool AtomicAddTimer::Do(void)
0x0054A7C4 bool CCreature::CanBeBuffed(enum DebuffType,enum AbnormalStatusSlotType)
0x005D8200 bool UpdateCharPacket(class CDBSocket*, const unsigned char *)
0x006E4178 bool CMonRaceDB::CheckMonRaceKeeper(int,int)
0x008905B4 void User::CameraMode(bool)
0x00654858 void CHeroSystem::AddHeroMatchResult(int,int,const unsigned char *)
0x0088E748 void User::PlayMusic(const wchar_t *)
0x0081AD4C void CObserverRemains::SetUser(class User *)
0x0060991C void DxReloadOlympiadPoint::DoServerJob(void)
0x0071B184 void CNPC::MoveToLocation(int,int,int)
0x0086D2EC void CTerritory::ShowLineByAdena(class CCreature &,const class FVector &,const class FVector &)
0x0091C8B0 bool CUserSocket::TradeStartPacket(class CSocket*, const unsigned char *)
0x008DC0EC void User::TakeOffItems(void)
0x0047B164 bool BuilderCmd_skillmod(class CSocket*, class User*, wchar_t *)
0x006543C0 void CHeroSystem::SetHeroRank(int,int (&)[34],int (&)[34])
0x006C19D8 bool CManor::SetNextSeedInfo(int,__int64,__int64)
0x00557E9C void CCreature::GatherNeighborPledge(class std::xvectorclass CSafePointer2class CCreature,class std::xallocatorclass CSafePointer2class CCreature  &,class std::xvectordouble,class std::xallocatordouble &,int,class CCreature*, bool)
0x0047F6A0 bool BuilderCmd_loadhtml(class CSocket*, class User*, wchar_t *)
0x00577900 void CCursedWeapon::KillPC(class User*, class User *)
0x00831330 bool CSkillOperateCondition_op_energy_max::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x007F6334 class CUndergroundColosseum *__cdecl CPVPMatchSystem::GetMatchUCByManagerNpcId(unsigned int)
0x00616044 void CEventMatch::SendSpelledInfo(class CParty*, class CSocket*, int)
0x0071AE84 bool CNPC::ValidateOrgHPRegen(void)
0x004EC678 bool CCastle::ApproveDefence(unsigned int)
0x005940C4 void CDB::RequestSaveFortressRewardInfo(int,int,int,int)
0x005877C4 void CDB::SaveInfectedSkills(int,int,int,char *) const
0x00419D48 void CAirShip::OnSummon(class CAirport*, class CAirportPlatform *)
0x00860110 bool CStaticObject::SetTargetable(bool,bool)
0x00882F74 bool CWorldTrapDB::DeleteWorldTrap(class CWorldTrap *)
0x008BB7B4 bool User::VoteSociality(int)
0x006F72F8 void BroadcastPartyLeave::Work(class User *)
0x007C3FD4 void CPledge::SetAgitByDbId(unsigned int)
0x0042EE64 void CAirShip::ProcessLanding(int)
0x0069BBEC bool CItemConstInfo::CanUse(class CCreature *, class CItem *)
0x0047EF28 bool BuilderCmd_ps_stop(class CSocket*, class User*, wchar_t *)
0x005DEB04 bool ReplyChangeTimeLimit(class CDBSocket*, const unsigned char *)
0x009385D4 bool CObjectMapclass CUserSocket,8191,28,class RWLock::DeleteObject(int,char*, int)
0x0075886C bool CContributeDataForUserDie::PickableIn15Sec(class CCreature *)
0x008637E0 void CStatusWnd::AttachToMainWnd(HINSTANCE hInstance, HWND hMainActiveWnd, int nCmdShow)
0x00968F74 void CWorld::__async_AsyncPickAndDeleteItem(struct CExecutionArgumentPad *)
0x00425264 void CAirShipManager::OnLoadPledge(class CPledge *)
0x0094E774 const WCHAR* ParseHTMLParam2(const WCHAR* packet, char* format, ...)
0x007E593C void WarReport::ServeInternal(class User *)
0x00673FB0 std::xwstring AbbreviateString(WCHAR *str, int len, WCHAR *abbreStr)
0x00836DF0 bool CSkillEffect_i_uninstall_advance_base::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x005C2418 bool ReplyPetNameChange(class CDBSocket*, const unsigned char *)
0x006E2BDC int __cdecl CMonRaceDB::GetRaceFeeRate(class FVector)
0x0085915C void CSocket::__async_AsyncSendConstBuffer(void *)
0x0058F62C void CDB::InitTimeAttackRecord(int)
0x004784EC void User::AutoEquipArrowOrBolt(class CItem *)
0x006247CC void CFishingDB::Add(class CFishingRodInfo *)
0x005DF5A8 bool ReportPacketLog(class CDBSocket*, const unsigned char *)
0x0089C918 void User::AddVitalityPoint(int,enum HowToGetPointType,bool)
0x008FA06C void User::OnDespawnPet(void)
0x009249F0 bool Bind(int id, Callback func)
0x00596B68 void CDB::RequestResetBotReport(class User *)
0x0088C440 bool User::CanGetPCCafePoint(void)
0x00917E10 bool UserPacketEx::TryToPutEnchantTargetItem(class CSocket*, const unsigned char *)
0x00658914 void WriteFriendMailFormHtmlBuilder::DisassemblePacket()
0x0068ED10 const unsigned char *__cdecl Disassemble(const unsigned char *, const char*, ...)
0x0058D8FC void CDB::RequestClanBBSView(class User*, int,int)
0x005F2CC4 void CDominionManager::StartSiege(void)
0x00734F44 bool NpcShowCursedWeaponStatus(class NpcSocket*, const unsigned char *)
0x007C2140 static bool CancelPetitionFail3(CPetitionSocket *socket, const unsigned char *packet)
0x0048AF24 bool BuilderCmd_home(class CSocket*, class User*, wchar_t *)
0x005F053C void CDominionSiegeEntry::CancelAllRenamed(void)
0x00604D18 void CIndividualDuelManagement::StartDuel(class User *, class User *)
0x006DB158 int __cdecl CMiniGameAgit::JoinGame(class User *)
0x00953158 int __cdecl CVehicle::GetNewDirection(const class FVector &,int)
0x005551E4 void CCreature::PushCreatureAfterCheckRangeAndCanSee(class CCreature *, class CCreature*, int,int,int &,class std::xvectorclass CSafePointer2class CCreature,class std::xallocatorclass CSafePointer2class CCreature  &,class std::xvectordouble,class std::xallocatordouble &,double,bool,class FVector)
0x0075AAD0 class CInstantZone *__cdecl CObject::GetInstantZone(void)
0x00938AFC bool CObjectMapclass CParty,1,5,class RWLock::Insert(int,class CParty*, char*, int)
0x0088A560 void User::ReportOrt(char *caller, int line, int nWorkType)
0x0090FD9C bool RequestDuelAcceptStart(class CSocket*, const unsigned char *)
0x0081A110 void CSiegeAgit::PassSiege(void)
0x00589C14 void CDB::RequestAgitBidRe(class User*, int,int)
0x008420EC bool CSkillEffect_p_avoid_skill::Pump(class CCreature*, const class CSkillInfo*, int)
0x004939D0 bool BuilderCmd_cease_fire(class CSocket*, class User*, wchar_t *)
0x00469108 bool CBossRecord::AddAccumulatedPoint(int *)
0x00419A28 bool CAirShipConstFree::CanPaySummonConst(class User *)
0x006A9A88 bool CKillPVPPointChecker::CheckGivableAndSendChange(class User *)
0x004D5A10 bool BuilderCmd_kick(class CSocket*, class User*, wchar_t *)
0x00420284 void CAirShip::UnloadAllParts(void)
0x005DE258 bool ReplyAddBlockList(class CDBSocket*, const unsigned char *)
0x005F2698 void CDominion::SetSiegeRole(bool)
0x007BFD10 static bool NotifyFinish2(CPetitionSocket *socket, const unsigned char *packet)
0x004E9488 void CCastle::ClearSiegeDate(void)
0x0087E690 void CTransformDB::UpdateSkillIfLevelHigher(class std::xvectorclass CSkillInfo const*, class std::xallocatorclass CSkillInfo const* &,const class CSkillInfo *)
0x006B4BE0 int __cdecl CL2Time::GetTime(void)
0x0083CA94 bool CSkillEffect_p_max_hp::PumpStart(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpStartType) const
0x0079C1B0 void CPartyRoomInfo::SetMaxMemberLimit(int maxMemberLimit)
0x0063CFC4 void CFortressSiege::StartBarrackCapture(bool)
0x0079C328 void CPartyRoomInfo::SetNewId()
0x0079BF60 void CPartyRoom::GetMemberList(xvectorCRoomMemberSP& memberList)
0x00665180 bool PledgeAnnounceHtmlBuilder::Announce(unsigned int userServerId, unsigned int pledgeDbId)
0x008D6C78 int __cdecl User::GetEquipedFishingRodId(void)
0x0079BE24 void CPartyRoom::GetPartyWaitingMember(xvectorCRoomMemberSP& memberList)
0x0067B5B0 void CInstantZone::_ClearInstantZoneItemMap(void)
0x0068F570 void CTLPipeBaseunsigned int,1000,8::CThreadPipe::Read(class CTLPipeBaseunsigned int,1000,8::CReadCallback *)
0x005058E4 void CCommSocket::Send(const char* format, ...)
0x00952958 class ItemOption VariationDB::GetItemOptionOnLoad(class ItemOptionKey)
0x0057D010 void CCursedWeaponMgr::LoadFromDB(int,int,int,int,double,int,int,int,int)
0x0080F790 bool CContainerDB::Pop(int,int)
0x00651BBC void CHennaDB::Load(void)
0x00670A6C void SearchMail::ParseParameter()
0x00652898 void CHeroSystem::SendHeroList(class CUserSocket *)
0x005F7E8C void CDoor::Open(bool,bool)
0x0047A328 bool BuilderCmd_RemoveSkillDelay(class CSocket*, class User*, wchar_t *)
0x005A3B68 bool ReplyCancelVariationItem(class CDBSocket*, const unsigned char *)
0x005FCF28 void PartyDuel_LeaveDuelZone::OperateInternal(class User*, class CPartyDuelPlayerInfo *)
0x007E4F04 void ViewPledgeMemberInfo::ServeInternal(class User *)
0x008D7050 int __cdecl User::GetRecipeCount(int)
0x005960E0 void CDB::RequestLoad5YearInfo(class User *)
0x0047E7A8 bool BuilderCmd_petivotetest(class CSocket*, class User*, wchar_t *)
0x00914E78 bool RequestItemLink(class CSocket*, const unsigned char *)
0x0083D9E4 bool CSkillEffect_p_weight_limit::Pump(class CCreature*, const class CSkillInfo*, int)
0x00444D04 bool AtomicResetPetName::Do(void)
0x0072281C void CNPC::TimerExpired(int)
0x008321D0 bool CSkillOperateCondition_op_can_escape::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x0090951C void User::AcquireSubjobSkills(void)
0x007E4E0C void SubPledgeUpdated::ServeInternal(class User *)
0x008BE4C8 void User::TimerExpired(int)
0x00406BF4 void CTLPipeBasestruct CTL_WorldMapNode2,50000,8::Read(class CTLPipeBasestruct CTL_WorldMapNode2,50000,8::CReadCallback *)
0x0045F518 bool CBlockUpsetManager::ChangeBlockColor(int,int,int)
0x004253D0 bool CAirShipManager::_SavePledgeAirShipInfo(unsigned int,int)
0x007000A8 void CAttackAction::OnSecondHitTimeForDual(void)
0x006AA9DC void CThreadLocalWorldMap2100000,500000,8::Initialize(const wchar_t *)
0x00468D08 void CBoss::ReportOrt(char *caller, int line, int nWorkType)
0x0086D08C void CTerritory::AddTerritoryPoint(int,int)
0x004A6098 bool BuilderCmd_FakeItem_npc(class CSocket*, class User*, wchar_t *)
0x0059A448 void CDB::SaveCharacterSlotInfo(class User *) const
0x006FB3EC void CTalkAction::Set(class CSmartID,class CSmartID)
0x0059088C void CDB::RequestReloadNobless(int)
0x008371A8 bool CSkillOperateCondition_can_summon_cubic::CanUse(class CCreature *, const class CSkillInfo*, class CObject *)
0x00946018 bool HtmlCmdWithdrawCastle(class CUserSocket*, class User*, const wchar_t*, const wchar_t *)
0x007AEA58 void CCommonRidingInfo::EventRide(class CPet*, int)
0x0097D96C bool CXmasSantaEventMgr::IsEventPeriod(void)
0x00811164 bool CContainer::PushVehicle(class CVehicle *)
0x005EF894 void CDominionSiegeEntry::SetSiegeRole(bool)
0x005F2508 void CDominion::CancelAllRenamed(void)
0x00822978 const class std::xvectorstruct SkillAcquireInfo*, class std::xallocatorstruct SkillAcquireInfo* &__cdecl CSkillAcquireDB::GetAcquirableSkills(enum ClassType) const
0x007AE044 bool CPet::EquipItem(class CItem*, enum SlotType)
0x00871B90 void CTrade::Delete(void)
0x00911C08 bool UserPacketEx::ChangeNicknameColor(class CSocket *, const unsigned char *)
0x0077F7A0 void CParty::CloseAllWindowPacket(void)
0x00659550 void CastleListHtmlBuilder::DisassemblePacket()
0x008ABEC8 void User::Market(wchar_t *)
0x009443CC bool HtmlCmdEnchantSkill(class CUserSocket*, class User*, const wchar_t*, const wchar_t *)
0x006DEE60 bool CMonRacePacket::IsAdenaAdddable(class User*, int,__int64)
0x0057EAAC bool CDB::AuthPlayGame(int,int,int)
0x006EA530 int __cdecl CMonRaceDB::LoadMonRaceData(void)
0x006DE75C int __cdecl CMonRaceDB::GetConfirmTime(void)
0x006DE880 int __cdecl CMonRaceDB::GetValidTime(void)
0x006BF5A0 int __cdecl CManor::GetManorSeedIndex(int)
0x006C0584 int __cdecl CManor::GetMaxCropCountById(int)
0x006DE918 int __cdecl CMonRaceDB::GetLastTime(void)
0x006C0744 int __cdecl CManor::GetMaxSeedCount(int)
0x006BF0AC int __cdecl CManor::GetSeedPrice(int)
0x004963C8 bool BuilderCmd_addcomment(class CSocket*, class User*, wchar_t *)
0x00780048 void CParty::AnnounceSweepItem(class User*, unsigned int,int)
0x006D5374 int __cdecl CMiniGameAgitSelectedPledgeEntry::GetIndex(unsigned int)
0x006C0638 int __cdecl CManor::GetMaxCropCount(int)
0x006FD074 void CPrivateStoreAction::Set(class CSmartID,int)
0x006668BC wchar_t *__cdecl CHTMLCache::ReadHTMLFile(const wchar_t *)
0x007C16EC static bool SubmitPetitionFail4(CPetitionSocket *socket, const unsigned char *packet)
0x0092AC4C bool PledgeInfo(class CSocket*, const unsigned char *)
0x00543FF8 void CCreature::BroadcastWaitType(int)
0x0092099C bool GetItemFromPetPacket(class CSocket*, const unsigned char *)
0x007DA528 bool CPledge::InvalidateSubPledgeSkill(enum PledgeType,unsigned int)
0x008F73B4 bool User::SaveSkillUsedTime(void)
0x006E71F0 void CMonRaceHTML::MonRaceBuy11(int)
0x0063D44C bool CFortressBuilderCmdHandler::BuilderCmd_SiegeStandby(class CSocket*, class User*, wchar_t *)
0x008EE0E4 bool User::HasAcademyRelation(void)
0x007AECAC void CNormalRidingInfo::Ride(class CPet*, int)
0x00922344 bool RequestHennaUnequipList(class CSocket*, const unsigned char *)
0x00632C58 bool CFortressSiege::IsMyFlag(class CItem *)
0x00802FA4 bool CResidenceDB::CheckTalkableDistanceToMessenger(class User*, int)
0x005964E8 void CDB::RegisterPeriodicItem(unsigned int,int,int,int)
0x007198B8 void CNPC::SetName(const wchar_t *)
0x0044B65C bool AtomicSetResidenceDeco::Do(void)
0x00615434 int __cdecl CEventMatchBuilderCommandParser::Parse_firecracker(class CSocket *, class User*, wchar_t *)
0x00614550 int __cdecl CEventMatch::IsLocked(unsigned int)
0x004AB058 bool BuilderCmd::resurrect(class CSocket*, class User*, wchar_t *)
0x00697550 class CSharedItemData *__cdecl CSharedFactoryclass CItem,class CSharedItemData,class CSharedItemConstant,&class CSharedDefine const SharedDefine_Item::Add(class CItem *)
0x00610618 int __cdecl CEventMatchOpBuilderCommandParser::Parse(class CSocket*, class User*, wchar_t *)
0x00610560 int __cdecl CEventMatchBuilderCommandParser::Parse_gm(class CSocket*, class User*, wchar_t *)
0x00610418 int __cdecl CEventMatchBuilderCommandParser::Parse(class CSocket*, class User*, wchar_t *)
0x00610004 int __cdecl CEventMatch::ResetTeamLeader(int)
0x006133E8 int __cdecl CEventMatch::MatchEnd(void)
0x006132D0 int __cdecl CEventMatch::MatchPause(void)
0x00611DA0 int __cdecl CEventMatchMgr::DeleteEventMatch(unsigned int)
0x006116D4 int __cdecl CEventMatchRuleSet::IsAllow(int)
0x006CA6B4 void CManorDB::MakeDefaultCropInfo(void)
0x008A4C34 void User::TradeCancel(void)
0x0057200C void CCreatureController::__async_Attack(struct CExecutionArgumentPad *)
0x0047E0A0 bool BuilderCmd_instant_move2(class CSocket *, class User*, wchar_t *)
0x00479270 bool BuilderCmd_mrendsell(class CSocket*, class User *, wchar_t *)
0x005EA100 void CDominionManager::ChangeState(enum DominionSiegeStateType,bool)
0x00430390 bool AltitudeHelper::CanChangeAltitude(int,enum AltitudeActionType)
0x00652CE0 void CHeroSystem::SetHeroAlliance(int,int,const wchar_t*, int)
0x00815374 SharedType(const WCHAR *pszName)
0x004533E4 bool CAuctionAgit::InCancelPenalty(void)
0x0043BBC0 void CAreaDB::ProcessInstantAreas(class CCreature*, const class FVector &)
0x00425AD4 void CAirShipForFree::_GetOff(class User *)
0x0088A074 bool SocialClassNS::IsMercenaryMasterOrNobless(class User *)
0x0091F53C bool RequestAcquireSkill(class CSocket*, const unsigned char *)
0x00454F40 int __cdecl CAuctionAgit::GetAuctionPrice(int)
0x00412B38 int __cdecl CAgitHTML::AuctionList(int)
0x0094AD00 bool HtmlCmdQuestAccept(class CUserSocket*, class User*, const wchar_t*, const wchar_t *)
0x0056C28C void CCreatureController::__async_CancelReservedAction(struct CExecutionArgumentPad *)
0x004256FC void CAirShipForFree::AutoSail_Landing(void)
0x0044050C const unsigned char *__cdecl AtomicSetHero::Disassemble(const unsigned char *)
0x0044068C const unsigned char *__cdecl AtomicCastBuff::Disassemble(const unsigned char *)
0x006B63B8 void CBakEvent::TimerExpired(int)
0x0044038C const unsigned char *__cdecl AtomicSetNobless::Disassemble(const unsigned char *)
0x00416B24 bool CAgitHTML::AgitBidCancelReply(int,int,__int64)
0x0043FFC4 const unsigned char *__cdecl AtomicAddTimeAttackFee::Disassemble(const unsigned char *)
0x0043FA4C const unsigned char *__cdecl AtomicAddTimer::Disassemble(const unsigned char *)
0x0043FCB4 const unsigned char *__cdecl AtomicTeleportTo::Disassemble(const unsigned char *)
0x0043F444 const unsigned char *__cdecl AtomicDepositSSQItemEx::Disassemble(const unsigned char *)
0x0043F88C const unsigned char *__cdecl AtomicTeleportParty::Disassemble(const unsigned char *)
0x007FAD00 CReplyChecker::~CReplyChecker()
0x008EE5DC void User::ResetDismissPenalty()
0x005FB87C void CDoppelganger::OnCreated(void)
0x005AA990 bool ReplyLoadBotReportPacket(class CDBSocket*, const unsigned char *)
0x00481AD8 bool BuilderCmd_ShowNoRestart(class CSocket *, class User*, wchar_t *)
0x008DEBD4 void User::SendRecipeStoreManageList(void)
0x0072E544 bool NpcCastleGateOpenClose2(class NpcSocket*, const unsigned char *)
0x008670AC int __cdecl CTeamBattleAgit::AddEntryPledgeMember(unsigned int,unsigned int,long)
0x00875ACC int __cdecl CTrade::AddItems(const unsigned char*, unsigned int)
0x004FCF00 void CCleft::ShowCleftState(class User &)
0x0059F49C bool ReplyLoadBossRecordRound(class CDBSocket*, const unsigned char *)
0x0068FA44 void CTLPipeBaseunsigned int,100000,8::Read(class CTLPipeBaseunsigned int,100000,8::CReadCallback *)
0x00585188 void CDB::RequestLogCharInfo(int)
0x0083DA6C bool CSkillEffect_p_trade::Pump(class CCreature*, const class CSkillInfo*, int)
0x0049A75C bool BuilderCmd_show_castle_tax(class CSocket*, class User*, wchar_t *)
0x007569B0 bool NpcSocket::NpcCleftManagerEnter(class NpcSocket *, const unsigned char *)
0x005C36A0 bool ReplyPackageSendToTarget(class CDBSocket*, const unsigned char *)
0x007D17A8 void CPledge::Online(class User *)
0x00951AB0 void VariationDB::RegisterIntenSet(int)
0x00814C28 bool SharedPlatformInfo::SetOccupied(int,bool)
0x005B641C bool ShortCutInfoPacket(class CDBSocket*, const unsigned char *)
0x0082AFA4 void SkillEnchantSafe::SendAcquiredSkillList(class User *)
0x0046B96C class CBossRecordRanking &__cdecl CBossRecordRanking::inst(void)
0x0068EFD8 void CTLPipeBaseunsigned int,100000,8::CThreadPipe::Read(class CTLPipeBaseunsigned int,100000,8::CReadCallback *)
0x007DF760 int __cdecl CPledgeMemberList::GetTotalLevel(void)
0x0048695C void BuilderCmdLog(int,class User*, const wchar_t*, const class std::basic_stringwchar_t,struct std::char_traitswchar_t,class std::allocatorwchar_t &)
0x007C6EC4 int __cdecl CPledge::GetPledgePowerGrade(wchar_t *)
0x007C8680 int __cdecl CPledge::GetFieldValue(unsigned int)
0x007AD0D8 int __cdecl CPet::GetMaxMeal(void) const
0x006973A8 void CTLPipeBaseunsigned int,900000,8::Write(int,const unsigned int &)
0x007DDFD0 int __cdecl CPledgeMemberList::Size(void)
0x0059480C void CDB::RequestSetAuctionStatus(int,int)
0x00581E80 void CDB::CreateUpdatePremiumItems(class User*, __int64,class CItem*, struct InventoryParams) const
0x0076E3B4 void COlympiadTeam::PayPenalty(class COlympiadTeam*, struct OlympiadGameInfo &,enum GameValidCondition)
0x00585038 void CDB::RequestLoadDismissReservedPledge(void)
0x007E2D9C int __cdecl CPledgeMemberList::Count(enum PledgeType)
0x007E79E0 int __cdecl CPledgeRanking::GetRanking(unsigned int)
0x00630634 void CFortress::ResetOwnerContractInfo(void)
0x00587C04 void CDB::RequestDismissAlliance(class User *, class CAlliance*, class CPledge *)
0x0081099C bool CContainer::PushCreature(class CCreature *)
0x0067A1D8 bool CInstantZone::IsAssociatedUser(class User *)
0x008ACF84 bool User::OnStartRotating(int,int)
0x00781DE4 bool CParty::RouteItem(class CItem*, class User *)
0x0091D5D8 bool TargetUnselectedPacket(class CSocket*, const unsigned char *)
0x0072EA50 bool NpcCastleMpRegen(class NpcSocket*, const unsigned char *)
0x008EB694 void User::UnequipAllDurationItemOnChar(void)
0x00935C44 bool GMCommand(class CSocket*, const unsigned char *)
0x005173B8 void CControlTower::Disappear(void)
0x0047FF54 bool BuilderCmd_set_zzaga_hero(class CSocket*, class User*, wchar_t *)
0x00736930 bool NpcShowChangePledgeNameUI(class NpcSocket*, const unsigned char *)
0x008EFC64 int __cdecl User::GetAffectedBattleCampType(void)
0x0080E9A4 bool CContainerIndex::Have(class CContainer *)
0x00592F0C void CDB::RequestPCCafeCouponUsed(unsigned int,const int,const int,const int,const int)
0x0057B970 void CCursedWeaponMgr::BuilderCmd_View(class CUserSocket *)
0x006A56F4 bool CItemEquipCondition_category::CheckPrivate(class CCreature*, class CItem *)
0x005852D8 void CDB::RequestDeletePledgeEmblem(unsigned int)
0x006546C0 void CHeroSystem::AddAchievementsList(int,int,const unsigned char *)
0x004A2444 bool BuilderCmd_BroadcastEmitterSpawn(class CSocket*, class User*, wchar_t *)
0x008947A0 bool User::ValidateOrgPAttack(void)
0x007D997C bool CPledge::_InvalidateSubPledgeSkill(enum PledgeType,class User*, unsigned int)
0x0049BD08 bool BuilderCmd_observer(class CSocket*, class User*, wchar_t *)
0x0088C620 void User::SendETCBuffStatusInfo(void)
0x008A0E38 void User::SetParty(class CParty*, class User *)
0x00951EA8 void VariationDB::RegisterCommissionInfo(class CommissionKey,class CommissionInfo)
0x004B7DE4 bool BuilderCmd_set_academy_master(class CSocket*, class User*, wchar_t *)
0x00909D84 void User::SendUserInfo(class CUserSocket *)
0x007ADF7C void CPet::ValidateAttackSpeed(void)
0x0046A4C4 int __cdecl CBossRecordList::GetCertainBossPoint(int)
0x00589D64 void CDB::RequestAgitBidCancelRequest(class User*, int,int,int,int)
0x0083AC20 bool CSkillEffect_i_set_skill::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2 *, double)
0x0071DD64 bool CNPC::OnNpcAbsoluteReturn(int,int,int,int)
0x00545534 void CCreature::ChangeTarget(class CObject*, enum ChangeTargetReason)
0x008A963C bool User::OnNpcChangeSubJobPacket(int,int)
0x005A0890 bool ReplyLoadDominionSiege(class CDBSocket *, const unsigned char *)
0x0087FE0C bool CWorldTrap::ValidateCheckTrap(class CCreature &)
0x006D2508 TEXT("SmartQueue::SmartQueue - Alloc initial RoundQueue")
0x0093BA14 bool JoinAlliancePacket(class CSocket*, const unsigned char *)
0x0046FBB0 void CBotReportAgent::Report(class User*, class User *, wchar_t*, wchar_t*, wchar_t*, wchar_t *)
0x0090F9CC bool RequestPCCafeCouponUse(class CSocket*, const unsigned char *)
0x0047CF64 bool BuilderCmd_ResetAllUserVoteData(class CSocket*, class User*, wchar_t *)
0x00657D0C bool CHolyThing::PossessedBy(class CCreature *)
0x00822A54 const class std::xvectorstruct SkillAcquireInfo*, class std::xallocatorstruct SkillAcquireInfo* &__cdecl CSkillAcquireDB::GetAcquirableSkills(enum EtcSkillAcquireType,enum ClassType) const
0x00583B18 void CDB::RequestEstablishFriendship(class User*, class User *)
0x00719770 void CNPC::NullSkillAction(int,bool,bool)
0x0059E488 bool CDB::AuthPlayOk(int)
0x00927AE8 bool RequestJoinCastleSiegePacket(class CSocket*, const unsigned char *)
0x0081CDD0 void `anonymous-namespace::SetAsCombatMode(class CCreature*, class CObject *)
0x0059C26C bool CDB::ReconnectAuth(void)
0x00658334 int ListMailHtmlBuilder::GetTotalPage()
0x006E8FE4 void CMonRaceHTML::MonRaceSell1(int,int,int,int,const unsigned char *)
0x0043F604 AtomicAddTimeAttackRecord::Disassemble(const unsigned char *packet)
0x00956CA4 void CVehicle::OutOfSight(class CObject*, bool)
0x006605A4 void DeleteFriendBatchHandler::DisassemblePacket()
0x00665A5C void DeleteFriendBatchHandler::SendHtml()
0x0066CBA0 void DeleteFriend::ParseParameter()
0x00672364 void DeleteFriend::ExecuteInternal()
0x004AB9CC bool BuilderCmd::scene_play_stop(class CSocket*, class User*, wchar_t *)
0x0084C884 bool CSkillEffect_i_m_attack_mp::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x00494FA4 bool BuilderCmd_setparam(class CSocket*, class User*, wchar_t *)
0x0070C9A0 bool CJumpAction::OnStart(void)
0x0067DFB4 void CInstantZone::BindUserOnTimerExpired(void)
0x007E0C70 enum PledgeType CPledgeMemberList::GetPledgeType(unsigned int)
0x0046596C void CBlockUpset::_CheckLogoutPlayers(class std::xmapunsigned int,class CPVPMatchMemberInfo*, struct std::lessunsigned int,class std::xallocatorstruct std::pairunsigned int const ,class CPVPMatchMemberInfo*  &)
0x00733534 bool NpcShowQuestInfo(class NpcSocket*, const unsigned char *)
0x00597BB0 bool CJobFinishSignal::WaitFinish(enum JobFinishType,unsigned int)
0x008806F4 void CPCTrap::SendSystemMessageWithSelf(unsigned int)
0x008DDD9C void User::SendRecipeBookList(int)
0x0083CDAC bool CSkillEffect_p_max_mp::Pump(class CCreature*, const class CSkillInfo*, int)
0x00671E34 CHtmlCommandSP CHtmlCommandFactory::GetHtmlCommand(CSocket* socket, WCHAR* cmd)
0x00589648 void CDB::RequestDeleteBlockList(class User *, wchar_t *) const
0x00587E84 void CDB::RequestOustAllianceMemberPledge(class User *, class CAlliance*, class CPledge*, class CPledge *)
0x008D71FC void User::TurnOnAutoSoulshot(int)
0x00621C48 void CFieldCycleSystem::OnStepChanged(int,int)
0x0081E334 void CSkillInfo::PostActivateSkillEffects(class CCreature*, class CObject*, enum CSkillInfo::EffectActivateTiming) const
0x0069A694 void CItem::Set(enum ObjectFieldType,class std::xvectorint,class std::xallocatorint *)
0x004BB0CC void `anonymous-namespace::DelPledgeSkill(class CSocket*, wchar_t*, int)
0x0066BF60 void ModifyMailForm::ExecuteInternal()
0x008E0E08 void User::ShowPremiumItemList(void)
0x0050580C void CCommSocket::OnClose(void)
0x00464A1C void CBlockUpset::_RemoveBlockUpsetCombatPlayerInfo(class CBlockUpsetMemberInfo *)
0x007ACC5C bool CPet::CreatePet(int,int,int,int,int)
0x0083B178 bool CSkillEffect_p_soul_eating::Pump(class CCreature*, const class CSkillInfo*, int)
0x00710A0C bool CSkillAction2::CheckValidActionState(class CCreature &)
0x00959F90 void CWareHouseDeposit::IsInRange()
0x0069F5CC bool CItem::PostLoad(void)
0x00976A4C bool CWorld::GetValidPositionAroundPos(const class CCreature &,const int,const double,const class FVector &,class FVector &)
0x005A9CD8 bool SendUISetting(class CDBSocket*, const unsigned char *)
0x00543284 void CCreature::BroadcastCubicSkillUse(class CObject &,int,int,int,int)
0x006A99E0 void CKillPVPPointChecker::SaveGiveCount(class User *)
0x0091ECDC bool SysCMD2Packet(class CSocket*, const unsigned char *)
0x00707348 void CCreatureController::Move
0x009525C0 class ItemOption VariationDB::CreateItemOption(class Option*, class Option *)
0x004BFAE4 bool BuilderCmd_ssqinfo(class CSocket*, class User*, wchar_t *)
0x00552C6C void CCreature::_ForAllNeighborInLookNeighbor(class CCreature*, const class FVector &)
0x0041D040 void CThreadLocalWorldMap21000,3000,8::Remove(int,class CObject *)
0x0058BEC4 void CDB::SaveRecipeBookChapter(int,int,int)
0x00694ADC void CSetItem::SetItemSlot2(enum ObjectFieldType,unsigned int)
0x005C7AC8 bool ReplyLoadRecipeItem(class CDBSocket*, const unsigned char *)
0x0083F2F0 bool CSkillEffect_cub_physical_defence::Pump(class CCreature *, const class CSkillInfo*, int)
0x0073A99C bool NpcMoveToPawn(class NpcSocket*, const unsigned char *)
0x007BC5EC CPetitionCli::NotifyCheckIn(int nPetitionId)
0x0097D3A0 __cdecl CWorldPlaneCollision::CWorldPlaneCollision(void)
0x00593E5C void CDB::RequestSaveFortressState(int,int,int,int)
0x005B1CF4 bool ReplySavePledgePower(class CDBSocket*, const unsigned char *)
0x00837A38 bool CSkillEffect_i_steal_abnormal::Instant(class CCreature*, class CObject*, const class CSkillInfo *, class CSkillAction2*, double)
0x007DAFE8 void CPledge::OnChangedPledgeSkillLevel(void)
0x00736B48 bool NpcSetStaticMeshStatus(class NpcSocket *, const unsigned char *)
0x006DDB74 void CMiniGameAgit::RestartGame(void)
0x005728EC int __cdecl CCubic::TimeSkillDelayShow(class User &,struct CubicActivationInfo &)
0x007F1788 enum PVP_MATCH_TYPE __cdecl CPVPMatchSystem::GetMatchTypeByUserLevel(int)
0x008AF250 void User::Harangue(const wchar_t *)
0x004113D4 void CAgitHTML::AgitSale1Reply(int,int,__int64)
0x0057901C void CCursedWeaponMgr::KillPC(class User*, class User *)
0x008A2670 bool User::OnTargetUnselectedPacket(const short)
0x007560A8 bool NpcGetRankUserPVPMatch(class NpcSocket *, const unsigned char *)
0x00576AA8 int __cdecl CCursedWeapon::CalcLastAlarmSec(void)
0x0067294C void DeleteAllBlock::ExecuteInternal()
0x006724BC void DeleteAllFriend::ExecuteInternal()
0x004D9658 bool BuilderCmd_snoop(class CSocket *, class User*, wchar_t *)
0x009110AC bool MoveToLocationInAirShipPacket(class CSocket*, const unsigned char *)
0x0067C010 bool CInstantZone::EnterZone(class CItem *)
0x00447F1C bool AtomicManipulatePVPPointWithItem::Do(void)
0x0091E7E4 bool StartPledgeWarPacket(class CSocket*, const unsigned char *)
0x007EFA2C CPremiumService::SendBuyItemReq()
0x0057D534 bool CCursedWeaponBuilderCmd::SettingView(class CSocket*, class User *, wchar_t *)
0x008FC784 bool User::IsMySummonOrPet(class CCreature *)
0x0086945C void CTeamBattleAgit::StartFinal(void)
0x00645020 bool TimeStruct::ParseTime(const wchar_t*, struct TimeStruct &)
0x0045082C bool CAuctionManager::RegisterAuction(class CAuction *)
0x00580850 void CDB::RequestPledgeMasterTransferCancelByNpc(class CNPC*, class User*, class CPledge *)
0x0060A220 void DxCancelWar::DoServerJob(void)
0x006FAF1C void CSitAction::Set(class CSmartID,int,class CSmartID,int)
0x008AB8FC void User::Shout(wchar_t *)
0x004AFCF8 bool BuilderCmd::show_n_terri(class CSocket *, class User*, wchar_t *)
0x0092AA10 bool MagicSkillListPacket(class CSocket*, const unsigned char *)
0x007BBAC4 CPetitionCli::ReplyPetitionChatStart(int nPetitionId, short nErrorCode)
0x007D9D44 bool CPledge::AcquirePledgeSkillAndSave(unsigned int,int,bool,bool)
0x00504788 void RequestUpdateMemoForm( User* pUser, int nMemoId)
0x0096613C void CThreadLocalWorldMap2900000,112500,8::Push(int,const class FVector &,class CObject *)
0x008A159C bool User::StopStore(bool,bool)
0x00652680 void CHeroSystem::RequestReloadHeroRankToCacheD(void)
0x0073FD80 bool NpcGetSubJobList(class NpcSocket*, const unsigned char *)
0x004ECDBC void CCastle::FreeSiegeGolem(void)
0x00731408 bool NpcShout(class NpcSocket*, const unsigned char *)
0x0060B8F4 bool CEconomy::IsInShortTime(unsigned long,unsigned long)
0x008FF24C void User::OnDespawnPCTrap(const long)
0x004BB654 bool BuilderCmd_acquire_pledge_skill(class CSocket*, class User*, wchar_t *)
0x006F7C84 void SetPartyMPCC::Work(unsigned int partySid)
0x008DADA8 bool User::CanOpenPrivateStore(enum PrivateStoreType)
0x006E1A28 bool CMonRaceDB::BroadCastRace(int)
0x006BE4DC void DoorEventMap::RegisterDoorEvent(const wchar_t *)
0x007B7168 bool CSummon::Die(class CCreature *)
0x005B0FDC bool ReplyAdminTool(class CDBSocket *, const unsigned char *)
0x00865E14 void CTeamBattleAgit::SendElapsedTimeMessage(long,long)
0x0088AC8C void User::ValidateAttackSpeed(void)
0x007E437C void CPledgeMemberService::Serve(class User *)
0x0062217C void CFishingController::CalcCheating(void)
0x007F2AC8 bool CPVPMatch::_GetMemberInfo2(class std::xmapunsigned int,class CPVPMatchMemberInfo*, struct std::lessunsigned int,class std::xallocatorstruct std::pairunsigned int const ,class CPVPMatchMemberInfo*  &,int,int,class CPVPMatchMemberInfo *&,class CPVPMatchMemberInfo *&)
0x0068E4B4 void CIOObject::TimerDispatch(void)
0x00534CEC void CCreature::_AddAbnormalStatus(const class CSkillInfo &,class CCreature*, bool,bool)
0x0084107C bool CSkillEffect_p_block_resurrection::PumpEnd(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpEndType) const
0x007F4540 class CPVPMatch *__cdecl CPVPMatchSystem::GetMatchByUser(class User &)
0x004162DC bool CAgitHTML::SaleCancelReply(int,int)
0x0094803C bool HtmlCmdMail(class CUserSocket*, class User*, const wchar_t*, const wchar_t *)
0x008A47DC bool User::SendUserMPInfo(void)
0x0063A490 void CFortress::HandleReplyLoadFortressSiegeRegistry(class std::xsetunsigned int,struct std::lessunsigned int,class std::xallocatorunsigned int &)
0x005A709C bool ReplyLoadUserPointPacket(class CDBSocket*, const unsigned char *)
0x007E97EC void CPremiumService::ConnectToPremiumAgent(void)
0x0063744C void CFortress::BroadcastSystemMessageWithName(int,bool)
0x00695A88 void CItem::SendItemSpawn(class CUserSocket *)
0x00833614 bool CSkillEffect_i_escape::Instant(class CCreature*, class CObject*, const class CSkillInfo *, class CSkillAction2*, double)
0x007F87E0 struct RecipeProductItemStruct *__cdecl CRecipeInfo::GetProduct(bool)
0x00770E00 int __cdecl AddEntryHelper::CheckValidation(enum GameRuleType,class std::xvectorclass User*, class std::xallocatorclass User* &,class COlympiadEntry *)
0x00800EAC void CResidence::BroadcastSystemMessageW(const wchar_t*, int)
0x00637BD4 void CFortressSiege::InitSiege(bool)
0x00920758 bool GMListPacket(class CSocket*, const unsigned char *)
0x004167CC bool CAgitHTML::AgitBidReply(int,__int64,int,int)
0x00963F90 void CWorld::__async_AsyncGetOnAirShip(struct CExecutionArgumentPad *)
0x00922954 bool RequestHennaUnequip(class CSocket*, const unsigned char *)
0x008A1FB0 bool User::OnStartPledgeWarPacket(const wchar_t *)
0x005E6370 bool ReplyLoadAbnormalStatus(class CDBSocket*, const unsigned char *)
0x00581DA8 void CDB::ReqWriteTax(int,int,int,int,int,bool)
0x004A2C60 bool BuilderCmd::vehicle_start(class CSocket*, class User*, wchar_t *)
0x00677A54 bool CInstantZoneManager::BeInstantZoneCreate(class User *)
0x007C6D2C void CPledge::SendPledgPowerListPacket(class User *)
0x008043E0 void CResidenceDB::SetNowTalkingMessenger(class User *, class CNPC *)
0x005665A4 void CCreature::ReportInfectedSkills(class CUserSocket *)
0x005830D4 void CDB::RequestMakeVariationItem(class CItem*, class CItem *, class CItem*, __int64,class User*, class ItemOptionKey)
0x005547E4 bool CCreature::_AcquireSkill(int,int,bool,bool)
0x006F7B6C __cdecl BroadcastPartyLeave::BroadcastPartyLeave(unsigned int)
0x007BB7A4 bool CGMListMgr::Delete(const wchar_t *id)
0x006951D4 void CTLPipeBaseunsigned int,900000,8::CThreadPipe::Write(const unsigned int &)
0x008BA18C void User::PrivateStoreListReq(int,int)
0x005093B0 void CIOSocketExclass CIOBufferEx16384 ::Read(unsigned long)
0x00736D44 bool NpcDispel(class NpcSocket*, const unsigned char *)
0x005A7744 bool ReplyLoadBossRecord(class CDBSocket*, const unsigned char *)
0x004848EC bool BuilderCmd_FakeItemState(class CSocket *, class User*, wchar_t *)
0x007186D0 struct SharedNoblessInfo *__cdecl CNoblessSystem::GetNoblessInfo(int)
0x007F9514 bool CRecipeInfo::CheckCondition(class User *, class User *)
0x006FC098 void CCreatureController::OnDamaged(class CSmartID,int)
0x007C5FD0 void CPledge::UpdateSiegeKillDeathPoint(class CPledge*, class CPledge *)
0x0052E950 bool CCreature::HandleItemManipulation(int,class ItemManip [],class AtomicJob*, int,class CPacketHelperEx16384*, bool)
0x0046328C void CBlockUpsetManager::Init(void)
0x0048EEA8 bool BuilderCmd_delannounce(class CSocket*, class User*, wchar_t *)
0x0058D5D0 void CDB::RequestSaveManorNextSeed(int,int,int,int,int,int,int,int,int,int)
0x0058D2A8 void CDB::RequestBuySeed(int,int,class User *, __int64,int,int,char *)
0x00475254 CProduct::SetBuyable(...)
0x005ED808 void CDominion::FreePos(class FVector)
0x00897EB8 bool User::ValidateOrgSpeed(void)
0x0075AE74 void CContributeData::Clear(void)
0x007C8528 void CPledge::AcademyOfflineMsg(class User *)
0x00905D70 void User::SetOrgSpeed(int &,int &,int &,int &,int &,int &,int &,int &)
0x0071E76C void CNPC::LeaveWorld(void)
0x007BF60C static bool LeaveMessage(CPetitionSocket *socket, const unsigned char *packet)
0x0058B43C void CDB::RequestUnregisterSiegeAgitPledge(class User*, class CSiegeAgit*, class CPledge *)
0x006529B0 void CHeroSystem::SetHeroProfile(int,int,const wchar_t *)
0x00653E10 void CHeroInfo::ClearMatchResult(void)
0x0092CA6C void CUserSocket::TimerExpired(int)
0x0063D790 void CFortressSiege::Start(void)
0x00964F5C void CTLPipeBasestruct CTL_WorldMapNode2,112500,8::Write(int,const struct CTL_WorldMapNode2 &)
0x0057FBA8 void CDB::RequestDeleteMercenary(int) const
0x006DE478 void CMonRaceDB::SetTaxRate(void)
0x008FBF38 void User::OnReplyEvolvePet(const unsigned char *)
0x008A8718 bool User::CanUseItem(class CItem *)
0x004F4E58 void CCastle::TimerExpired(int)
0x007321D0 bool NpcShowSystemMessage(class NpcSocket*, const unsigned char *)
0x0055E1E8 bool CCreature::BeResurrectAsked(class CCreature &,int)
0x007F4AA4 bool CPVPMatchSystem::IsCrataeCubeUser(class User &)
0x0097142C bool CWorld::EnterWorld(class CCreature*, class FVector,bool)
0x004BAF44 void `anonymous-namespace::AcquireSubPledgeSkill(class CSocket*, wchar_t*, enum PledgeType,int,int)
0x005D3D50 bool ReplyLoadMercenary(class CDBSocket*, const unsigned char *)
0x0044F1C0 bool CAuction::WithdrawBiddingPrice(class User *)
0x006EE0AC bool CMultiPartyCommandChannel::IsMaster(int)
0x0088C3A8 bool User::CanUsePCCafePoint(void)
0x0084220C bool CSkillEffect_p_expand_deco_slot::Pump(class CCreature*, const class CSkillInfo*, int)
0x00844ECC bool CSkillEffect_i_add_max_entrance_inzone::Instant(class CCreature *, class CObject *, const class CSkillInfo *, class CSkillAction2*, double)
0x00962BB8 void CWorld::DecreaseUserMapDensity(const class FVector &)
0x007AE9CC void CCommonRidingInfo::RideWyvern(class CPet *)
0x008168D0 void CShortCut::Init(void)
0x00826178 bool SkillEnchantOperator::CheckNpcShowEnchantSkillList(int,int,int,class User *&,class CNPC *&)
0x006506B8 void CGameInfoPipeline::AddV(wchar_t*, char *)
0x007829CC bool CParty::AddMember(class User *)
0x00613510 void CEventMatch::ItemRuleParsing(wchar_t *)
0x0085C8C4 const unsigned char *__cdecl SSQSystem::SetAll(const unsigned char *)
0x007DB8F8 const unsigned char *__cdecl CPledge::SetProperty(const unsigned char *)
0x007C68D8 const unsigned char *__cdecl CPledge::AddAcademyMemberByDisassemble(int,const unsigned char *)
0x005BFE18 bool ReplyOustAllianceMemberPledge(class CDBSocket*, const unsigned char *)
0x0042927C void CAirShip::OutOfSight(class CObject*, bool)
0x005859C8 void CDB::RequestSaveBattleCampHp(class CBattleCamp *)
0x0081FEC8 bool CSkillInfo::CubicActivate(class CCreature*, class CObject*, double)
0x008910F0 const unsigned char *__cdecl User::SetSSQInfo(const unsigned char *)
0x0067375C void ModifySendMail::ExecuteInternal()
0x0043C548 AtomicBuyLottoTicket::Disassemble (const unsigned char *packet)
0x006624B4 void ModifySendTempMailHtmlBuilder::Build1001Packet()
0x0065FDAC void ModifySendTempMailHtmlBuilder::SendHtml()
0x006BE684 void NpcPosEventMap::TriggerNpcPosEvent(const wchar_t*, int)
0x0065E1D4 void ModifySendTempMailHtmlBuilder::Build1002Packet()
0x00691C00 lock stack mismatch crash
0x006832BC bool CInstantZoneManager::EnterInstantZone(class User*, enum InZoneEnterType,int,int &,int)
0x006D8058 void CMiniGameAgitRegistPledgeEntry::Broadcast(const char*, char *)
0x008216C0 const class CSkillInfo *__cdecl CSkillDB::GetSkillInfo(class CSkillKey,class CCreature *)
0x0094C608 bool HtmlCmdUpdateSubPledgeMaster(class CUserSocket*, class User*, const wchar_t*, const wchar_t *)
0x0049CC38 bool BuilderCmd_ps_start(class CSocket*, class User*, wchar_t *)
0x0082D828 double L2SkillFunc::CalculateProbability(double,class CCreature*, class CCreature*, const class CSkillInfo *)
0x0044B980 void AtomicJobList::Dump(void)
0x0059F754 bool ReplyLoadPledgeSkill(class CDBSocket*, const unsigned char *)
0x005D7B50 bool UpdateQuestPacket(class CDBSocket*, const unsigned char *)
0x007AC8F0 bool CPet::ChangePetName(const wchar_t *)
0x0097A6FC bool CWorldPlaneCollision::IsInPlaneCollisionZone(const class FVector &)
0x008A1EB8 bool User::IsMPCCPartyMaster(void)
0x0083C9AC bool CSkillEffect_p_fear::PumpEnd(class CCreature &,class CCreature*, const class CSkillInfo *, enum SkillPumpEndType) const
0x007FC7B0 void CResidence::ChangeTaxRate(void)
0x00536B50 void CCreature::ValidateMUseSpeed(void)
0x0084166C bool CSkillEffect_p_violet_boy::PumpEnd(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpEndType) const
0x007BD43C bool CPetitionCli::ReplyJoinChat(int nPetitionId, WCHAR* pwsTargetName, int nErrorCode)
0x007207A4 void CNPC::Say(wchar_t *)
0x004A4018 bool BuilderCmd::skill_master(class CSocket *, class User*, wchar_t *)
0x006B5264 void CEventL2day::Init(struct tm*, struct tm *)
0x007960C0 bool CPartyMatchingWaitingRoomListFilter::IsBetweenLevelLimit(class User *)
0x004A56C8 bool BuilderCmd_CachePingState(class CSocket*, class User*, wchar_t *)
0x00467194 bool CBlockUpset::VoteToStart(int,bool)
0x0057A4DC void CCursedWeapon::BuilderCmd_View(class CUserSocket *)
0x00597788 void CDB::RequestSaveAirShip(unsigned int,int)
0x00785AE8 void CPartyMatchingRequest::ResponseOnListRoom(CPartyRoomListFilter& filter, xvectorCPartyRoomSP& partyRoomList)
0x0076980C void COlympiadTeam::UpdateStatus(class COlympiadField*, int)
0x0058EE84 void CDB::RequestReloadSkill(class User *)
0x005EE0A0 void CDominionSiegeEntry::UpdateWindowPacket(void)
0x007F1D2C void CPVPMatchSystem::SetEnableCheckPartyMemberDist(bool)
0x00895014 bool User::ValidateBaseMP(void)
0x00480D34 bool BuilderCmd_showpccafe(class CSocket*, class User*, wchar_t *)
0x007FC28C void CResidence::Set(int,int,int,int,int,int,int)
0x00716DD0 bool `anonymous-namespace::CheckOnlyUseEquipedWeaponActiveSkill(class CCreature*, int)
0x008807DC void CPCTrap::InSight(class CObject *, bool)
0x007F1DF4 void CPVPMatchSystem::SetEnableCheckPartyMemberDebuff(bool)
0x00466DE0 void CBlockUpset::TimerExpired(int)
0x005878AC void CDB::LoadInfectedSkills(class User *) const
0x00910F44 bool CannotMoveAnymoreInAirShipPacket(class CSocket*, const unsigned char *)
0x00590168 void CDB::RequestModifyMail(class User*, int,wchar_t *, wchar_t*, wchar_t *)
0x004AC320 bool BuilderCmd::attack_test2(class CSocket *, class User*, wchar_t *)
0x0059B7D0 void CDB::RequestSaveAllControlTowerStatus(class CResidence *)
0x00816BD4 void CShortCut::SendUseSharedGroupItem(class CItem *)
0x005D07C0 bool ReplySaveMercenary(class CDBSocket*, const unsigned char *)
0x007FF654 void CResidence::SetAllNPCPledge(int)
0x0083485C bool CSkillEffect_i_hp_per_max::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x0082B9F8 void SkillEnchantUntrain::SendAcquiredSkillList(class User *)
0x006386FC bool CFortressBuilderCmdHandler::BuilderCmd_SiegeUnregister(class CSocket*, class User*, wchar_t *)
0x00955534 bool CVehicleController::ReadyToDepartureAction(void)
0x00844134 bool CSkillOperateCondition_op_fishing_pumping::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x009666CC void CWorld::__async_AsyncDeleteInZoneItem(struct CExecutionArgumentPad *)
0x0090074C bool CBasicActionHandler_PRIVATE_BUY::Handle(class User*, int,bool,bool,int)
0x008A49C4 bool User::TradeStart(bool)
0x00842574 bool CSkillEffect_p_limit::PumpStart(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpStartType) const
0x00755CD8 bool NpcRegisterUserPVPMatch(class NpcSocket*, const unsigned char *)
0x0091AB94 bool RequestEnchantSkillRouteChange(class CSocket*, const unsigned char *)
0x00737454 bool NpcSetDailyQuestFlag(class NpcSocket*, const unsigned char *)
0x0064FB48 __cdecl CGameInfoPipeline::~CGameInfoPipeline(void)
0x006A9D30 void CKillPVPPointChecker::SetGiveCount(int,int,class User *)
0x0079613C int __cdecl CPartyMatchingWaitingRoomListFilter::GetCountPerPage(void)
0x00900FBC bool CBasicActionHandler_PET_DEPOSIT::Handle(class User*, int,bool,bool,int)
0x006DE548 int __cdecl CMonRaceDB::GetTotalReturnMoney(int,int)
0x0068A8E8 bool CInventory::HaveFakeItemBySId(int)
0x00869874 void CTeamBattleAgit::TimerExpired(int)
0x00493BEC bool BuilderCmd_cease_fire2(class CSocket*, class User*, wchar_t *)
0x0074A3E4 bool NpcBroadcastToParty(class NpcSocket*, const unsigned char *)
0x00895AE0 void User::GetAndSendSkillRemainTime(class CCreature &,int,int)
0x00435918 void CAlliance::SetAllianceCrestToMember(unsigned int)
0x0069208C __cdecl CIOCriticalSection::~CIOCriticalSection(void)
0x0090FEC4 bool RequestMagicSkillUseGround(class CSocket*, const unsigned char *)
0x008850B4 int __cdecl CUCRecordBoard::MakeCurrentRecordPacket(char*, int,int,int,int)
0x00595A78 void CDB::LoadUserBookmark(class User *)
0x0081DB08 double CSkillInfo::GetConsumeFactor(class CCreature *)
0x0085BFD4 bool SSQSystem::DeleteDepositedItem(class User*, enum SSQPart::type,enum SSQItem::type,__int64)
0x008399E0 bool CSkillEffect_i_target_cancel::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x0091477C bool ReplyWithdrawMPCCRoom(class CSocket*, const unsigned char *)
0x0088C300 bool User::IsPCCafeEventOn(void)
0x009019A4 bool CUserBasicAction::Add(int)
0x007E92B4 bool DummyPremiumPacket(class CPremiumServiceSocket*, const unsigned char *)
0x00836600 bool CSkillEffect_i_mp_by_level_self::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x007378AC bool NpcRegisterDominionSiege(class NpcSocket*, const unsigned char *)
0x004826FC bool BuilderCmd_ShowTerritory(class CSocket *, class User*, wchar_t *)
0x007DAE60 bool CPledge::AcquireSubPledgeSkillAndNotify(enum PledgeType,unsigned int,int,bool)
0x004794D0 bool BuilderCmd::_create_pet(class User*, const int,const int)
0x00912078 bool UserPacketEx::StopRequestPVPMatchRank(class CSocket*, const unsigned char *)
0x0085D0CC bool SSQSystem::SetNextEventPeriod(void)
0x00819C78 void CSiegeAgit::EndSiege(void)
0x006BF2B0 void CManor::WriteUnlock(const wchar_t*, int)
0x004E8FB8 bool BuySellListCache::Register(int,class std::xvectorstruct BuySell,class std::xallocatorstruct BuySell *)
0x0084B9BC bool CSkillEffect_i_death_link::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x007AEE98 void CEventRidingInfo::Init(void)
0x0042B214 bool CAirShipHandler::UserCmdHandler(class User*, enum UserAirShipActionType)
0x006DAA70 void CMiniGameAgit::CloseGame(void)
0x0052E170 void CCreature::InitializeBuilderCmdMod(void)
0x007ABE48 bool CSummon::IsMakeAttackerChao(class CCreature *)
0x0084217C bool CSkillEffect_p_counter_skill::Pump(class CCreature*, const class CSkillInfo*, int)
0x00502338 bool CCommCli::CheckCommSvr(bool)
0x0053F83C bool CCreature::HasAbnormalCategory(enum DebuffType)
0x006A53B4 bool CItemUseCondition_is_in_residence_siege_field::CheckPrivate(class CCreature*, class CItem *)
0x007C3A90 void CPledge::SetAgit(class CAgit *)
0x005036D0 void CCommCli::RequestBBSWriteForm(User *pUser, int nId, int nBoardType)
0x005312A4 void CCreature::SetInstantZoneTypeID(int)
0x00801930 bool CResidence::IsSiegeRegistered(class CPledge *)
0x00502F78 void CCommCli::RequestBBSReadComment(User *pUser, int nBoardId, int nBid, int nSearchOption, int nReadOption, int nListPage, int nBoardType, WCHAR* sSearch, int nCommentPage, int nThreadPage)
0x006D8C38 int __cdecl CMiniGameAgit::GetJoinErrorCode(class User *)
0x00736650 bool NPCSetVisible(class NpcSocket*, const unsigned char *)
0x007F903C bool CRecipeInfo::CheckNPCFee(class User *)
0x00502A78 void CCommCli::RequestBBSList(unsigned int nUserDbId, int nId, int nPage, int nBoardType)
0x0058AA4C void CDB::RequestLoadTeamBattleAgit(unsigned int)
0x00724288 void CNPC::Set(enum ObjectFieldType,class std::xvectorstruct ItemDropMultiStruct*, class std::xallocatorstruct ItemDropMultiStruct* *)
0x0085EBE4 bool SSQSystem::OnSealEffectEnd(void)
0x0091047C bool RequestCharacterBackToLobby(class CSocket*, const unsigned char *)
0x00502BE0 void CCommCli::RequestBBSRead(User *pUser, int nBoardId, int nBid, int nSearchOption, int nReadOption, int nListPage, int nBoardType, WCHAR * sSearch, int nCommentPage, int nThreadPage)
0x0045DBE4 void CBlockUpsetManager::TimerExpired(int)
0x007B036C void CPet::InitObject(void)
0x005E41D8 bool ReplyLoadAlliance(class CDBSocket*, const unsigned char *)
0x0058ACBC void CDB::RequestNewTeamBattleAgitMember(class CTeamBattleAgit*, class User*, class CNPC *)
0x00915F08 bool IsValidVariationIntensiveItem(class User*, class CItem *)
0x00845D6C bool CSkillEffect_i_p_attack::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x0062E29C void CFortressSiege::SetDoorDestroyed(const wchar_t *)
0x006FBFD0 bool CAttackWaitAction::OnTick(void)
0x008F17F0 bool User::CanInstallAdvancedBattleCamp(void)
0x004AD4DC bool BuilderCmd::packet_log(class CSocket*, class User*, wchar_t *)
0x007AC0F8 class CCreature *__cdecl CSummon::GetDelegate(void)
0x0082D710 class CCreature *__cdecl L2SkillFunc::GetCheckedCreature(class CCreature*, class CObject*, enum SkillTargetTypeEnum)
0x007ECE28 bool IBGetPointAckPacket(class CPremiumServiceSocket *, const unsigned char *)
0x0061ED44 void CFieldCycle::SendInfo(class CSocket *)
0x005AF0C0 SetFlagAll(char* sFlag)
0x00838C30 bool CSkillEffect_i_change_hair_style::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2 *, double)
0x0066C7D0 void DeleteMail::ParseParameter()
0x00659990 void DeleteMailHtmlBuilder::SendHtml()
0x0066C728 void DeleteMail::ExecuteInternal()
0x006C17C0 void CManor::SaveNextSeedInfo(int)
0x009102F4 bool IsValidCommissionItem(class User*, class CItem *)
0x005903EC void CDB::RequestDeleteMail(class User*, int,class CMailListParameter &)
0x006C5208 void CManorFuncHandler::ShowProcureCropDetail(void)
0x00627C40 void CFishingEventMgr::SetSharedInfoPrizeTime(bool)
0x00433398 enum SHIP_ACTION_RESULT CShipMoveAction::OnTick(void)
0x00432ACC enum SHIP_ACTION_RESULT CShipMoveAction::SetMoving(void)
0x006A426C bool CItemUseCondition::CheckCommon(class CCreature*, class CItem *)
0x00832B18 bool CSkillOperateCondition_op_collecting::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x0046798C void CBlockUpset::_SortByPoint(void)
0x0057ED54 bool CDB::AuthPing(int)
0x006F8654 class CMultiSellInfo *__cdecl CMultiSellList::find(int)
0x0048F97C bool BuilderCmd_giveitem(class CSocket*, class User*, wchar_t *)
0x00849D2C int __cdecl L2SkillFunc::CheckMagicResisted(class CCreature &,class CObject &,const struct L2SkillFunc::MagicAttackerInfo &,const struct L2SkillFunc::MagicTargetInfo &,double,double,double &)
0x0083D244 bool CSkillEffect_p_reuse_delay::Pump(class CCreature*, const class CSkillInfo*, int)
0x0083D4A4 bool CSkillEffect_p_hp_regen_by_move_mode::Pump(class CCreature*, const class CSkillInfo*, int)
0x008D8168 bool User::CanEquip(class CItem *)
0x006C2434 void CManor::TransferSeedData(void)
0x006931DC bool CItem::EnchantItem(class CItem *, class User*, enum SkillFxChangeType,double)
0x0076DF08 void COlympiadTeam::Draw(class COlympiadTeam*, struct OlympiadGameInfo &)
0x005A6580 static bool TeleportPartyPacket(CDBSocket *socket, const unsigned char *packet)
0x0058DF8C void CDB::RequestManBookMarkOne(class User*, int)
0x0068E64C bool CIOObject::SetTimeStamp(long *)
0x0068DEC8 bool CInventory::SetInventoryChanged(class CItem*, enum InventoryUpdateType)
0x0059418C void CDB::RequestSaveFortressSiegeRegistry(int,int,int,char*, bool)
0x008BC778 bool User::OnVoteSocialityPacket(int)
0x005B8C3C bool ReplyBreakFriendship(class CDBSocket*, const unsigned char *)
0x00907694 char User::GetEventMatchTeamId(void)
0x0059506C void CDB::RequestSaveInventorySlotIndex(int,class User *)
0x004E5F40 check_count
0x00830BD0 bool CSkillOperateCondition_op_siege_hammer::CanUse(class CCreature*, const class CSkillInfo *, class CObject *)
0x00706CC4 void CJumpAction::Set(class CSmartID,enum ActionType)
0x007FF4EC void CResidence::MakeNPCDisable(bool)
0x004A63A4 bool BuilderCmd_FakeItem_user(class CSocket *, class User*, wchar_t *)
0x006524A4 void CHeroSystem::SetHistoryOpen(int,bool)
0x005BB28C bool ReplyQueryCastleSiegeForInfo(class CDBSocket*, const unsigned char *)
0x007D55C8 void CPledgeTimer::TimerExpired(int)
0x0060FE24 void CEventMatch::SendEmptyTeamInfo(int,class CSocket *)
0x008D8D74 bool User::CheckAndResetPendingUseETCItem(enum PendingUseItemType)
0x00599288 void CJobFinishSignal::Init(void)
0x00905978 bool CUserBookmarkHandler::UserPacketHandler(class CSocket*, const unsigned char *)
0x00885D54 void CUndergroundColosseum::CheckResurrection(int)
0x0052E1D8 void CCreature::InitializeItemMod(void)
0x005D67BC bool CreateInitItemsPacket(class CDBSocket*, const unsigned char *)
0x007F0E40 void CPVPMatchMemberInfo::SetOrder::operator ()(class CPVPMatchMemberInfo *)
0x00659FDC void ListMailHtmlBuilder::BuildTreeLink()
0x0065A30C void ListMailHtmlBuilder::BuildWriteButton()
0x006580DC void ListMailHtmlBuilder::DisassemblePacket()
0x006581FC void ListMailHtmlBuilder::BuildMailListHeader()
0x0065A0F4 void ListMailHtmlBuilder::BuildMailBoxLink()
0x006AD2A8 void CThreadLocalWorldMap2900000,112500,8::CTL_Map2::Insert(short,short,char,int,class CObject *)
0x0066451C void ListMailHtmlBuilder::BuildMailListLink()
0x00664AE8 void ListMailHtmlBuilder::BuildHtmlInternal()
0x0052C7F4 bool CCreature::ValidateBaseHP(void)
0x0048C6C4 bool BuilderCmd_setclass(class CSocket*, class User*, wchar_t *)
0x006120F8 void CEventMatchMgr::ShowList(class CSocket *)
0x0047FEC4 bool BuilderCmd_set_hero(class CSocket*, class User*, wchar_t *)
0x00595798 void CDB::SetDailyQuest(unsigned int,int,long)
0x00830810 bool CSkillOperateCondition_can_use_swoop_cannon::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x00902164 void CUserBookmarkSetting::SetTeleportSkill(const class CSkillInfo *)
0x009535D4 void CVehicleDB::Load(void)
0x004C57BC bool BuilderCmd_agitdeco(class CSocket*, class User*, wchar_t *)
0x0070FBA4 bool `anonymous-namespace::CheckXMasTree(class CCreature*, int)
0x00765DF4 void COlympiadField::SetDoor(bool)
0x007D05B4 void CPledge::PledgeMasterTransferByNpc(class CNPC*, class User*, const wchar_t *)
0x004AF600 bool BuilderCmd::show_r_terri(class CSocket *, class User*, wchar_t *)
0x0067EDB0 bool CInstantZone::LeaveZone(class User*, bool)
0x00899B24 void User::OnTeleport(void)
0x00484FC0 bool BuilderCmd::come_to_me(class CSocket*, class User*, wchar_t *)
0x006DDC9C void CMiniGameAgit::HandleState(void)
0x0041828C bool BuilderCmdHelper::CanUseBuilderCmd(class User*, int)
0x00476FFC void User::SetExpBonusPercent(double)
0x006A42E8 bool CItemUseCondition::CanUse(class CCreature*, class CItem *)
0x008A1DC0 bool User::IsMPCCMaster(void)
0x00676CD0 int __cdecl ResetBindingDayHelper::FindNextResetBindingDay(int,int,int,int)
0x00769334 bool COlympiadUser::RegisterOlympiadEntry(void)
0x0060B85C bool CEconomy::SetShortTimeStamp(unsigned long*, unsigned long)
0x0062FC30 bool CFortressBuilderCmdHandler::BuilderCmd_SetRewardCycleCount(class CSocket*, class User*, wchar_t *)
0x00699EA8 void CItem::ActivateUnequipSkillList(class CCreature *, class CObject *)
0x00888BDC bool CUndergroundColosseum::CheckBannedUser(class User *)
0x00770B58 bool AddEntryHelper::CanAddOlympiadUser(class User &,class COlympiadEntry &,int &,int &)
0x0068070C void CInstantZone::Delete(enum InstantZoneDeleteInfo)
0x0073176C bool NpcRegisterTeleporterType(class NpcSocket*, const unsigned char *)
0x0077B828 void CParseHTML::AddStringLocalMap( WCHAR * strName, WCHAR* format, ...)
0x0077B4CC void CParseHTML::AddStringMap( WCHAR* strName , WCHAR* format, ...)
0x0077BEDC void CParseHTML::GetBodyFromFile(LPCWSTR pszHTMLFileName)
0x008AED54 void BroadcastToAllUserEx(const char*, ...)
0x004BEC24 bool BuilderCmd_delquest(class CSocket*, class User*, wchar_t *)
0x005F83F0 void CDoor::TimerExpired(int)
0x0045F7FC void CBlockUpsetManager::RewardHandler::operator ()(class CPVPMatchMemberInfo *)
0x007F13AC void CPVPMatch2::PostEndMatch(void)
0x00587D5C void CDB::RequestWithdrawAlliance(class User*, class CAlliance*, class CPledge *)
0x006AC930 void CThreadLocalWorldMap2100000,500000,8::CTL_Map2::Remove(int)
0x007D19F8 void CPledge::ValidateTotalLevel(void)
0x005AF42C bool CacheVersionPacket(class CDBSocket*, const unsigned char *)
0x007FE808 void CResidence::ShowSellSeedList(const unsigned char *)
0x008300FC bool CSkillOperateCondition_remain_cp_per::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x004CA26C bool BuilderCmd::scene_play_range(class CSocket*, class User *, wchar_t *)
0x0076587C void COlympiadObserverEntry::Broadcast(const char*, char *)
0x0077D6C8 void CParty::CancelTradeAllMember(void)
0x00847AEC bool CSkillEffect_i_summon_npc::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x00462920 void CBlockUpset::InitSetting(void)
0x007539CC bool NPCShowEnchantSkillListDrawer(class NpcSocket*, const unsigned char *)
0x009000B4 bool CBasicActionHandlerWrapper::Handle(class User*, int,bool,bool)
0x008BC950 bool User::OnTradeRequestPacket(int)
0x007692C0 bool COlympiadUser::CanRegister(void)
0x0058A9A4 bool CDB::RequestLoadPlayTime(int)
0x008C4428 bool User::OnDuelAskStart(const wchar_t*, enum DuelType)
0x00715C34 bool CSkillAction2::OnTick(void)
0x006BB808 int CMailListParameter::AssemblePacket(char* buffer, int bufLen)
0x006B7FC8 void CLog::Sendable(bool)
0x00620F20 void CFieldCycleSystem::SetStep(int,int,int,class CCreature*, class CSocket *)
0x00764FA4 void COlympiadField::AsyncAddEntry(enum GameRuleType,bool)
0x008A5F44 struct SharedNoblessInfo *__cdecl User::GetNoblessInfo(void)
0x004A2078 bool BuilderCmd_StealInfectedSkills(class CSocket*, class User*, wchar_t *)
0x007D8C6C void CPledge::GetAllMemberId(class std::xvectorunsigned int,class std::xallocatorunsigned int &)
0x00591EB4 void CDB::RequestLoadBossRecord(int)
0x0066922C bool CHTMLCacheManager::RemoveCachingHTMLFile(const wchar_t*, int)
0x006C2FA0 void CManor::SayNeedCropMoney(class User *)
0x00462C18 bool CBlockUpset::_RemoveBlockUpsetNpcFromGround(int)
0x007EC1B4 void CPremiumService::Load(void)
0x005FFBB0 void CPartyDuel::ForAllPlayer(class CDuelPlayerOperation &)
0x005B01F4 bool ReplyInstallAgitDeco(class CDBSocket*, const unsigned char *)
0x0088F64C void User::SendHennaUnequipInfo(int)
0x005CF2E0 bool DBPacketHandler::ReplyPrepareCastleWar(class CDBSocket*, const unsigned char *)
0x0065D924 void SendMailHtmlBuilder::BuildHtmlInternal()
0x006DB9D4 bool CMiniGameAgitDBHandler::ReplyAddMiniGameAgitPledge(class CDBSocket*, const unsigned char *)
0x006585AC void SendMailHtmlBuilder::DisassemblePacket()
0x0065D74C void SendMailHtmlBuilder::Build1002Packet()
0x008EE1DC class CPledge *__cdecl User::GetPledge(void)
0x007C5E88 void CPledge::AddDbMember(class User *)
0x00660DC4 void SendMailHtmlBuilder::SendHtml()
0x008D6A70 bool User::ReleaseEconomy(void)
0x005CFA6C bool DBPacketHandler::ReplyDepositPet(class CDBSocket*, const unsigned char *)
0x007027E0 bool CMoveRelativeAction::SetMovingInAirShipImpl(void)
0x007772E4 bool COwnThing::GiveToUser(class User*, bool)
0x0060CEC4 const unsigned char *__cdecl EtcManiGiveItemByCastleSiegeCount::Disassemble(const unsigned char *)
0x006BB8F0 const unsigned char* CMailListParameter::DisassemblePacket(const unsigned char* packet)
0x00605104 bool DummyPacket(class CDBSocket*, const unsigned char *)
0x004FCB74 bool CCleft::_ChangeCleftPlayerTeam(class CCleftMemberInfo *)
0x007C0394 static bool SendGmPchat(CPetitionSocket *socket, const unsigned char *packet)
0x00441D9C const unsigned char *__cdecl AtomicGetOnAirShip::Disassemble(const unsigned char *)
0x0044A704 const unsigned char *__cdecl AtomicShowQuestFHTML::Disassemble(const unsigned char *)
0x0044A87C const unsigned char *__cdecl AtomicShowFHTML::Disassemble(const unsigned char *)
0x0060BC7C const unsigned char *__cdecl EtcManiUpdatePledgeNameValue::Disassemble(const unsigned char *)
0x0060BF74 const unsigned char *__cdecl EtcManiUpdateUserEventTime::Disassemble(const unsigned char *)
0x0060C2E4 const unsigned char *__cdecl EtcManiUpdateUserItemBaseAttribute::Disassemble(const unsigned char *)
0x0060C624 const unsigned char *__cdecl EtcManiRollbackUserItemBaseAttribute::Disassemble(const unsigned char *)
0x0060C8E0 const unsigned char *__cdecl EtcManiCreateItemAuctionBid::Disassemble(const unsigned char *)
0x0072E418 bool InzoneDoorBreakable(class NpcSocket*, const unsigned char *)
0x00620C80 void CFieldCycleSystem::SetPoint(int,int,class CSocket *)
0x005E90B4 void CDBSocket::CreateSubjob(const unsigned char *packet)
0x00816700 class SharedRimPointInfo *__cdecl SharedRimPointInfo::GetInfo(void)
0x009662F4 void CThreadLocalWorldMap2900000,112500,8::Remove(int,class CObject *)
0x006A5DA4 bool CItemEquipCondition_race::CheckPrivate(class CCreature*, class CItem *)
0x005938E4 void CDB::RequestLoadDuelRecord(class User *)
0x00572B4C bool CCubicHandler::CheckOpCond(class CObject*, const double &,const double &,struct CubicOpCond &)
0x0064FF3C UnicodeToMultibyte
0x0088A12C bool SocialClassNS::IsMasterMemberOrNobless(class User *)
0x00554060 void `anonymous-namespace::SaveUnEquipedItemAndSetNull(class CCreature*, class std::xmapint,class CItem*, struct std::lessint,class std::xallocatorstruct std::pairint const ,class CItem*  &,enum SlotType)
0x005E8844 void CDBSocketOp::ChangeCharName(const unsigned char *packet)
0x00549130 void CCreature::AccumulateContribute(class CCreature *, double)
0x0072E200 bool NpcRegisterAgit(class NpcSocket*, const unsigned char *)
0x008A2AA8 bool User::CancelTransform(int,bool,enum SkillPumpEndType)
0x00636000 bool CFortressBuilderCmdHandler::BuilderCmd_ShowSiegeRegistery(class CSocket *, class User*, wchar_t *)
0x0043FE44 const unsigned char *__cdecl AtomicSetTicketBuyCount::Disassemble(const unsigned char *)
0x004926CC bool BuilderCmd_play_voice(class CSocket*, class User*, wchar_t *)
0x007F68C4 bool CPVPMatchSystem::RegisterResurrectionTower(unsigned int,unsigned int,unsigned int)
0x007818F0 bool CParty::IsAnyOneIsInAirShip(void)
0x00936F7C bool SnoopQuit(class CSocket*, const unsigned char *)
0x008E179C void User::OnGetPerioicItem(class CItem *)
0x00925F50 bool UnequipItemPacket(class CSocket*, const unsigned char *)
0x005EC448 void CDominionManager::SetDominionToCastleSiege(int)
0x00624894 void CFishingDB::Add(class CFishingPlaceInfo *)
0x0083B720 bool CSkillEffect_p_defence_critical_rate::Pump(class CCreature*, const class CSkillInfo*, int)
0x00890414 void User::SetUseDice(void)
0x0072C5F0 void CObjectStorageclass CNPC::SetObject(class CNPC *)
0x00813F84 void CSharedRWLock::SetSpinCount(DWORD dwSpinCount)
0x0047CE8C bool BuilderCmd_lotto_show_round_info(class CSocket*, class User*, wchar_t *)
0x008143DC void CSharedRWLock::WriteLock()
0x00925CE0 bool EnterWorldPacket(class CSocket *, const unsigned char *)
0x005949CC void CDB::RequestChangeMergedName(int,int,wchar_t*, class CUserSocket *)
0x0042F114 bool CAirShipHandler::BuilderCmdHandler(class CSocket*, class User*, wchar_t *)
0x00536164 void CCreature::Jump(void)
0x004BADBC void `anonymous-namespace::AcquirePledgeSkill(class CSocket*, wchar_t*, int,int)
0x00639144 void CFortress::ResetSiegeInfo(void)
0x0093612C bool PrivateStoreBuyListSend(class CSocket*, const unsigned char *)
0x0070C674 class FVector CMoveToTargetAction::GetDestination(void)
0x0070845C class FVector CMoveToTargetAction::GetTargetPos(void)
0x0047A7D4 bool BuilderCmd_endpet(class CSocket*, class User*, wchar_t *)
0x0076EA44 bool COlympiadTeam::IsValidInventory(void)
0x008B8900 void User::CheckYearCatchEvent(void)
0x0067DAB4 class FVector CInstantZoneConst::GetStartPos(int)
0x006D1350 bool MemoHTML(CSocket* socket, const WCHAR *sCmd)
0x005ED5E0 class FVector CDominion::ReservePos(void)
0x00538AB0 class FVector CCreature::GetMeleeAttackPosition(class CCreature *)
0x00708260 class FVector CMoveToTargetRelativeAction::GetDestination(void)
0x00707F04 class FVector CMoveToTargetRelativeAction::GetMeleeAttackPosition(class CCreature*, class CObject *)
0x00705F90 class FVector CMoveToTargetRelativeAction::GetTargetPos(void)
0x006FE534 class FVector CMoveRelativeAction::GetDestination(void)
0x007B9B98 void CPetitionCli::Free()
0x007BE64C void CPetitionCli::AcceptUserPchat(int nPetitionId, BYTE byError)
0x00817ABC void CSiegeAgit::ResumeSiege(void)
0x00650A6C bool DummyGIPPacket(class CGIPSocket*, const unsigned char *)
0x00481E8C bool BuilderCmd_DaylightSaving(class CSocket*, class User*, wchar_t *)
0x005514BC void CCreature::_GetSkillListByType(const class CSkillInfo*, class std::xvectorclass CSkillInfo const*, class std::xallocatorclass CSkillInfo const* &,class std::xvectorclass CSkillInfo const*, class std::xallocatorclass CSkillInfo const* &,class std::xvectorclass CSkillInfo const*, class std::xallocatorclass CSkillInfo const* &)
0x004CC24C bool BuilderCmd_set_all_skill(class CSocket *, class User*, wchar_t *)
0x0076CEAC void COlympiadTeam::FinishGame(bool)
0x0066B844 void WriteFriendMailForm::ParseParameter()
0x00832498 bool CSkillOperateCondition_op_can_disarm::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x0042B3CC bool CAirShipForFree::CanBeDestroyed(void)
0x006C7038 void CManorFuncHandler::ShowCropInfo(void)
0x006B4DF0 __cdecl CEventTimer::CEventTimer(void)
0x00546064 void CCreature::ValidateLocation(void)
0x0065BD54 void WriteFriendMailFormHtmlBuilder::SendHtml()
0x008F2C40 void User::StopSpelling(void)
0x0084BF24 bool CSkillEffect_i_fly_away::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x00414E80 void CAgitHTML::AgitBid1Reply(int,int,__int64)
0x0058726C void CDB::SaveDieDropExp(int,__int64) const
0x0078B09C bool CPartyMatchingRequest::JoinRoom(class CSPointerclass User,int,class CPartyRoomListFilter &)
0x007F1224 bool CPVPMatch::IsEnemyTo(class User &,class User &)
0x008409AC bool CSkillEffect_p_recovery_vp::PumpEnd(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpEndType) const
0x0045BDE8 void CBattleCamp::SendBattleCampInfo(class CUserSocket *)
0x00738780 bool NpcSound(class NpcSocket*, const unsigned char *)
0x008F2804 void User::SendDeletedSkillListToDB(wchar_t *)
0x004EEBA4 void CExpelTimer::ReserveExpelWithLock(class User*, class FVector)
0x00815AD0 void ReportShareInfo(void)
0x00534ED4 void CCreature::AttackTestByCount(class CCreature &,int,class User &)
0x008514C4 bool CSkillOperateCondition_op_exist_npc::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x007B07C8 bool CUserRidingInfo::RideStrider(class CPet*, double,double)
0x005BFB60 bool ReplyJoinAlliance(class CDBSocket*, const unsigned char *)
0x004B0918 bool BuilderCmd::see_bot_count(class CSocket*, class User*, wchar_t *)
0x0062BE0C int __cdecl CFortress::GetFacilityLevel(int)
0x0064FC60 void CGameInfoPipeline::Init(void)
0x00643C8C struct CGameEventMgr::EventInfo &__cdecl CGameEventMgr::_GetNewEventInfo(void)
0x00443E60 bool AtomicCreatePet::Do(void)
0x006AF4B4 LRESULT CALLBACK WndProc(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)
0x00600A1C void CIndividualDuel::OnCancel(class User*, int)
0x00508DDC void CIOSocketExclass CIOBufferEx16384 ::GracefulClose(void)
0x008E63B8 bool User::_AddEquipDurationItem(class CItem *)
0x00835E40 bool CSkillEffect_i_summon_spirit_shot::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x008B962C void User::SendLogOffMsgToFriendList(void)
0x0062EE2C void CFortress::ResetOwnerInfo(void)
0x00697798 void CItem::OnCreateFakeItem(void)
0x00805B90 bool CResidenceData::IsOffendingPledge(int)
0x0068E99C const char *__cdecl StrNChr(const char*, char,unsigned __int64)
0x0088ABD4 double User::CPRegenBonusByMotionEx(void)
0x00588E04 void CDB::RequestGetDbRelatedCounts(void)
0x00667E98 bool CHTMLCache::RemoveCachingHTMLFile(const wchar_t *)
0x0041D4AC void CAirShip::Delete(enum AirShipDespawnReason)
0x0067FA6C void CInstantZoneManager::DeleteInstantZone(class CInstantZone &,enum InstantZoneDeleteInfo)
0x00419C50 void CAirShip::OnTakeOff(class CAirport*, class CAirportPlatform *)
0x008DA3F0 void User::RequestPackageSend(const unsigned char *)
0x00593CCC void CDB::RequestOwnFortress(int,int,int)
0x00651A34 bool CHenna::CanUse(int,class CItem *)
0x00942EDC bool HtmlCmdRefreshFishing(class CUserSocket*, class User*, const wchar_t*, const wchar_t *)
0x0066D668 void ViewCastleInfo::ParseParameter()
0x00920800 bool ChangePetNamePacket(class CSocket*, const unsigned char *)
0x004D31EC bool BuilderCmd_reset_skill(class CSocket*, class User*, wchar_t *)
0x00657294 bool CHolyThing::AddHolyThing(const wchar_t *, class CHolyThing *)
0x0052A8B0 void CCreature::Unfreeze(void)
0x006B4814 void CL2Time::SetIntervalMsg(int,int,wchar_t *)
0x007F3CF4 void CPVPMatchSystem::SendCurrentRecordForUI(class User *)
0x00977A68 bool CWorld::PutItem(class CItem*, class FVector,unsigned int,class CCreature *)
0x0094A6E8 bool RecipeCommand(class User*, const wchar_t*, bool)
0x006FBBE4 void CMoveRelativeAction::Set(class CSmartID,class CSmartID,class FVector)
0x0072FD64 bool ReplyNpcPing(class NpcSocket*, const unsigned char *)
0x00920124 bool TutorialLinkHTML(class CSocket *, const unsigned char *)
0x004F33D0 void CCastle::ValidateChangeOwner(void)
0x0047E210 bool BuilderCmd_item_debug(class CSocket*, class User*, wchar_t *)
0x005A4FF4 TimeAttackBoard::GetInfo(int nRoomNo, int nRecordType) const
0x0043F51C int AtomicAddTimeAttackRecord::Assemble(char *outBuf, int nBufSize)
0x008B15F4 void User::SetPrivateStoreList(const unsigned char *)
0x0088B574 void User::TimerExpiredAgathion(void)
0x008FB144 bool User::CanDismountOnAir(bool,bool &)
0x0052D428 bool CCreature::ValidateOrgPDefend(void)
0x00809DEC void CSerializedTriggerSkillMessage::OnHandle(class CCreature *)
0x0083BE80 bool CSkillEffect_p_remove_equip_penalty::PumpEnd(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpEndType) const
0x007BE3A4 BYTE CPetitionCli::RequestPchatEnd(int nPetitionId, const wchar_t *pwzGMCharName, const wchar_t *pwzClientCharName)
0x007ABD00 bool CSummon::IsMakeAttackerGuilty(class CCreature*, bool)
0x0087DEF8 void CTransformDB::PostLoad(void)
0x0089B5A8 void User::EquipHenna(int)
0x005EFBCC void CDominionSiegeEntry::SendDominionEventToUser(bool)
0x007E4FFC void UpdatePledgePower::ServeInternal(class User *)
0x00693DA4 void CItem::SetAttribute(class BaseAttribute)
0x00965A58 bool CWorld::GetValidJumpPos(const class FVector &,const class FVector &,struct ChargeData &,const double,int,bool)
0x00900284 bool CBasicActionHandler_ATTACK::Handle(class User*, int,bool,bool,int)
0x0058A7D4 void CDB::RequestSaveLastTaxChange(long,long,long)
0x00531510 bool CCreature::SetTargetable(bool,bool)
0x0092BF44 bool RequestPackageSend(class CSocket*, const unsigned char *)
0x00770414 void COlympiadUser::UnequipForbiddenWeapon(void)
0x00589058 void CDB::Send(const char*, ...) const
0x00845648 double L2SkillFunc::CalculateDamage(class CCreature*, class CObject*, const class CSkillInfo *, const double,const int,const int,const bool)
0x008C09B4 bool User::Restart(enum RestartPoint)
0x008FCC30 bool User::HavePet(void)
0x00890494 bool User::GetLoginMsg(const unsigned char *)
0x00858450 int __cdecl CSlotIndexManager::FindFirstEmptySlot(void)
0x00714B98 void CSkillAction2::GatherSkillTarget(class CCreature*, class CObject *)
0x008F2664 void User::SendAcquiredSkillToDB(int,int,bool)
0x006A517C bool CItemEquipCondition_subjob::CheckPrivate(class CCreature*, class CItem *)
0x004AC938 bool BuilderCmd::attack_test2_sec(class CSocket*, class User *, wchar_t *)
0x0086D174 class CTerritory *__cdecl CTerritory::DisassembleTerritoryInfo(const unsigned char **)
0x00637A4C void CFortressFlagpole::CaptureInFortressSiegeStart(class User *)
0x007646DC void COlympiadField::SetWinner(void)
0x0067B448 void CInstantZone::_ClearInstantZoneCreatureMap(void)
0x00883F98 void CUndergroundColosseum::ResurrectUser(class User *, class FVector)
0x007CF4B4 void CPledge::CreateAcademyByNpc(class CNPC *, class User*, const wchar_t *)
0x006C02C4 void CManor::SetSeedSold(int,__int64)
0x0067C528 bool CInstantZone::SetAreaOnOff(class CArea *, bool)
0x00848D58 bool CSkillEffect_i_change_skill_level::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x00758394 __cdecl CAbstractCarrier::CAbstractCarrier(void)
0x0071FC3C void CThreadLocalWorldMap2100000,50000,8::BroadcastToNeighborDistBetweenZ(class CObject*, int,class FVector,int,int,int,const char*, ...)
0x0089DFBC bool User::OnMoveToLocationPacket(int,int,int,int,int,int,int)
0x006136E0 void CEventMatch::ShowInfo(class CSocket *)
0x0061FF30 void CFieldCycleSystem::SendInfo(int,class CSocket *)
0x00923548 void CheckResurrectable(class CCreature*, bool,int)
0x0065CFBC void PledgeAnnounceHtmlBuilder::Build1001Packet()
0x00928060 bool RequestConfirmCastleSiegeWaitingListPacket(class CSocket*, const unsigned char *)
0x0082EA54 bool `anonymous-namespace::CanFlyingTransform(class User *)
0x00592014 void CDB::RequestLoadBossRecordRound(void)
0x00947BC0 bool HtmlCmdPacketWithdraw(class CUserSocket*, class User*, const wchar_t*, const wchar_t *)
0x006270E8 bool CFishingController::DoPumping(double)
0x00465370 void CBlockUpset::_OnCombat(void)
0x00697618 int __cdecl CSharedFactoryclass CItem,class CSharedItemData,class CSharedItemConstant,&class CSharedDefine const SharedDefine_Item::Remove(class CItem *)
0x00695FF8 bool CItem::EnchantAttributeItemArmor(class CItem*, class User*, enum AttributeTypeEnum,int)
0x007A8C0C void CPCCafeEventMgr::Init()
0x007596B8 int __cdecl CSharedFactoryclass CGeneralObject,class CSharedGeneralObjectData,class CSharedGeneralObjectConstant,&class CSharedDefine const SharedDefine_GeneralObject::RemoveByIndex(int)
0x0091A87C bool RequestEnchantSkill(class CSocket*, const unsigned char *)
0x0046EDDC bool CBotBlockManager::IsBotUser(unsigned int)
0x005FDA64 void CIndividualDuel::OnStart(void)
0x00620420 void CFieldCycle::NpcUnLock(void)
0x0046DDF0 void CBotChecker::ReleaseOwner(class User *)
0x0057F0E8 void CDB::RequestLoadAllItemExpiration(void)
0x004D39EC bool BuilderCmd_stopsay(class CSocket*, class User*, wchar_t *)
0x006B470C void CL2Time::ShowIntervalMsg(int)
0x008337AC bool CSkillEffect_i_hp::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x007FC918 void CResidence::SetTaxRates(int)
0x00636460 bool CFortressBuilderCmdHandler::BuilderCmd_ContractCastle(class CSocket*, class User*, wchar_t *)
0x00584280 void CDB::ShowIntervalAnnounce(class CUserSocket*, int)
0x005B2088 bool ReplyNewTeamBattleAgitMember(class CDBSocket*, const unsigned char *)
0x004B34E8 bool BuilderCmd::set_quick_siege(class CSocket*, class User*, wchar_t *)
0x006C32F0 class CManorData *__cdecl CManorDB::RequireManorData(int)
0x0070340C bool CTreeLoc::_NearTree(class FVector,int)
0x0088D740 bool User::IsValidPrivateStoreItem(__int64,__int64,class CItem *)
0x007CB610 void CPledge::InvalidatePledgeSkillList(class User *)
0x0060B984 bool CEconomy::SetCreatureData(class CCreature *)
0x005E7B2C void CDBSocketOp::ModSubPledgeSkill(const unsigned char *)
0x0052BF68 bool CCreature::IsEquipedItem(int)
0x00979F0C void CWorld::DoorOpenClose(class CDoor*, bool,bool)
0x00864230 DateTime TimeValueToDateTime(const TimeValue &timevalue)
0x004A2F54 bool BuilderCmd_ShowMark(class CSocket*, class User*, wchar_t *)
0x006FF9A4 void CAttackAction::CheckItemSkill(int,bool)
0x007BB92C void CGMListMgr::SendGMList(CSocket *pSocket)
0x007B2B80 void CSummon::SendSpelledInfoChanged(void)
0x005721D4 void CCreatureController::Talk()
0x00840474 bool CSkillEffect_p_hit_number::Pump(class CCreature *, const class CSkillInfo*, int)
0x0054C4FC bool CCreature::UseItem(class CItem *, int)
0x0081EE98 bool CSkillInfo::PumpStart(class CCreature &,class CCreature *, enum SkillPumpStartType) const
0x00728168 bool CUniqNPCDB::AddUniqNPC(class CNPC *)
0x00425C3C void CAirShipForFree::TakeOff(int,class User *)
0x005C6EBC bool ReplyMngComment(class CDBSocket*, const unsigned char *)
0x00650D34 void CGIPSocket::Send(const char*, ...)
0x0082F9E4 bool CSkillOperateCondition_possess_holything::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x005F3C7C void CDominion::EndSiege(void)
0x00732524 bool NpcSocialAction2(class NpcSocket*, const unsigned char *)
0x0092C7B4 bool ReplyJoinPartyRoom(class CSocket*, const unsigned char *)
0x00923E68 bool OpenMinimap(class CSocket*, const unsigned char *)
0x006FD61C bool CStandAction::OnStart(void)
0x00774A48 bool COlympiadFuncHandler::AddOlympiad(enum GameRuleType)
0x0091D6C0 bool WarehouseDepositPacket(class CSocket*, const unsigned char *)
0x0062C044 void CFortressSiege::Pause(void)
0x00872348 class CItem *__cdecl CTrade::GetItem(class User*, int)
0x00977EFC void CWorld::__async_AsyncAirShipTeleport(struct CExecutionArgumentPad *)
0x0052CF98 bool CCreature::ValidateHPRegen(void)
0x0049EAF4 bool BuilderCmd_pccafe(class CSocket*, class User*, wchar_t *)
0x0053DA84 void CCreature::GetDefendValue(class CCreature*, int,int &)
0x006BCAF4 void TimeAttackBoard::DistributeFee()
0x00588734 void CDB::GiveItemToPet(class User*, class CItem*, __int64)
0x008035CC void CResidence::ReportShopTax(__int64)
0x0045C7F0 class CSPointerclass CBattleCamp CBattleCampDb::GetBattleCamp(unsigned int)
0x00830D98 bool CSkillOperateCondition_op_resurrection::CanUse(class CCreature*, const class CSkillInfo *, class CObject *)
0x00469CB0 void CBossRecordRanking::Initialize(void)
0x0047C718 bool BuilderCmd_closeauth(class CSocket*, class User *, wchar_t *)
0x004F5B2C void CChair::ClearBy(CSmartID sID)
0x006D4B00 void CMerchant::SendBuyList(class CUserSocket *)
0x0080A32C void CSerializedLostTargetMessage::Clear(void)
0x00901F34 bool CUserBookmark::IsValidLocation(class FVector &)
0x00627590 bool CFishingEventMgr::ReplyFinishEvent(int)
0x005BCB10 bool BBSReplyForm(class CDBSocket*, const unsigned char *)
0x00456250 bool AuthRequestPing(class CAuthSocket*, const unsigned char *)
0x008FE684 bool User::CheckWyvernOnTimer(void)
0x0086ED48 void CThreadLocalTimer::Dispatch(void)
0x0062B93C void CFortress::InitFortress(void)
0x0082E6E8 bool CSkillEffectByAdditionalArmorType::CheckPumpCondition(class CCreature *)
0x006F77AC void BroadcastSystemMsg_S::Work(User* pUser)
0x006F7148 void BroadcastChannelClosed::Work(User* pUser)
0x006F75DC void BroadcastCommand::Work(User* pUser)
0x006301AC void CFortress::OnStartInBattleField(class User*, class FVector &,bool &)
0x004901C0 bool BuilderCmd::summon(class CSocket*, class User*, wchar_t *)
0x006A4924 bool CItemEquipCondition_agit::CheckPrivate(class CCreature*, class CItem *)
0x004CAF10 bool BuilderCmd::show_d_terri(class CSocket *, class User*, wchar_t *)
0x005FDD34 void CIndividualDuel::OnEnd(void)
0x0085A580 bool SSQSystem::StartSealEffect(void)
0x005EFDF4 void CDominionSiegeEntry::SendDominionScriptEventToUser(int,int,int)
0x00626FF0 void CFishingController::TimerExpired(int)
0x007D36B4 bool CPledge::HasPledgeType(enum PledgeType)
0x007C1B84 static bool CancelPetitionOk3(CPetitionSocket *socket, const unsigned char *packet)
0x00572AAC void CCubic::TimeSkillDelayReset(class User &,struct CubicActivationInfo &)
0x006E0648 bool CMonRaceDB::CheckRunnerCond(void)
0x0089F7E8 bool User::BotReport(class User *)
0x0047A094 bool BuilderCmd_checkit(class CSocket*, class User*, wchar_t *)
0x005C77C8 bool ReplySaveRecipeBookInfo(class CDBSocket*, const unsigned char *)
0x008332FC bool CSkillEffect_i_heal::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x0097E3F8 void CYearCatchEventMgr::TimerExpired(int)
0x006E777C void CMonRaceHTML::MonRaceBuy12(int,int)
0x00727C90 void CUniqNPCDB::DeleteAll(void)
0x00417A88 void CAirShip::LeaveWorld(void)
0x007CBB3C void CPledge::Say(class User*, wchar_t*, enum SayPacketType)
0x00675134 void CHtmlGeneratorHelper::AddValue(std::xwstring &name, std::xwstring &value)
0x00448684 bool CSharedCreatureData::RemoveMemo(int)
0x00424E08 bool CAirShipManager::DestroyAllRegularShip(void)
0x0065C92C void ForwardMailFormHtmlBuilder::SendHtml()
0x0065C4E4 void ForwardMailFormHtmlBuilder::Build1001Packet()
0x0065E9D4 void ForwardMailFormHtmlBuilder::BuildHtmlInternal()
0x0065DF9C void ForwardMailFormHtmlBuilder::Build1002Packet()
0x00754B68 bool NpcCreatePVPMatch(class NpcSocket*, const unsigned char *)
0x0066C300 void ForwardMailForm::ExecuteInternal()
0x0076CBB4 void COlympiadTeam::SendInvalidMessage(int,class User *)
0x0072BEBC void CNpcBattleAgit::StartSiege()
0x006BFA44 void CManor::ChcekDayChanged(void)
0x006BC6B4 __L2INT64 TimeAttackBoard::GetTotalPoint(SSQPart::type nPartType)
0x006A4018 void CQuestItemDB::Load(void)
0x006B5974 void CHeartEvent::TimerExpired(int)
0x00589838 void CDB::RequestWithdrawItemEx(int,int,class User*, int,int,int,int,char *) const
0x005B66D4 bool UseItemPacket(class CDBSocket*, const unsigned char *)
0x0058C284 void CDB::RequestCreateMonRaceMon(int,int,int,int)
0x0050B08C BOOL CCommunity::ReadArticle(int nBoardId, int nBoardType, WCHAR* sBoardName, const unsigned char *packet )
0x0092B38C bool OustAllianceMemberPacket(class CSocket *, const unsigned char *)
0x005F4C6C void CDominionManager::BroadcastDominionMessage(int)
0x005E3B48 bool ReplyDismissAlliance(class CDBSocket*, const unsigned char *)
0x0048057C bool BuilderCmd::loadfishingeventsetting(class CSocket*, class User*, wchar_t *)
0x00831718 bool CSkillOperateCondition_op_wyvern::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x0086197C void CSmartIdManagerclass CStaticObject,10000,8::DeleteObject(unsigned int)
0x0092D4F0 bool FriendRemove(class CSocket*, const unsigned char *)
0x0045C604 void CBattleCamp::TimerExpired(int)
0x00664D00 void ModifySendTempMailHtmlBuilder::BuildHtmlInternal()
0x00864B90 void CTeamBattleAgit::StartTimer(void)
0x00900C64 bool PetSummonActionHelper::Help(class User *, class CSummon*, enum PetCommandType,bool,bool,int)
0x0092D318 bool FriendRemove(class CSocket*, const wchar_t *)
0x006A1B90 class CObject *__cdecl CAsset::Copy(void)
0x005C5BA4 bool ReplyCreateAgitAuction(class CDBSocket *, const unsigned char *)
0x00686D2C class CItem *__cdecl CInventory::GetByServerID(int)
0x00624A24 void CFishingDB::Add(class CFishingLureInfo *)
0x00472FE8 class CItem *__cdecl CInventory::GetArrowByCrystal(enum CrystalType)
0x00481828 bool BuilderCmd_Duel(class CSocket*, class User*, wchar_t *)
0x0065FB84 void ModifySendTempMailHtmlBuilder::SendMsg()
0x006884B8 class CItem *__cdecl CInventory::GetFirstItemBy(class ItemFunctor &)
0x00688E80 class CItem *__cdecl CInventory::GetFirstItemByClassID(int,bool)
0x005B9368 bool ReplySetPledgeCrest(class CDBSocket*, const unsigned char *)
0x0075A8D8 class CObject *__cdecl CObject::GetObjectW(unsigned int)
0x0046193C void CBlockUpset::ResetVoteToStart(void)
0x00880F10 void CTrap::OnDefuse(class CCreature *)
0x00577CFC class CItem *__cdecl CCursedWeapon::GetItem(void)
0x00712258 bool CSkillAction2::SpendItem(class CCreature*, bool)
0x00433E34 class CSharedAllianceData *__cdecl CSharedFactoryclass CAlliance,class CSharedAllianceData,class CSharedAllianceConstant,&class CSharedDefine const SharedDefine_Alliance::AddById(int)
0x00889D2C bool SocialClassNS::IsMercenaryMasterOrHero(class User *)
0x0047C3BC bool BuilderCmd_sesame(class CSocket*, class User*, wchar_t *)
0x005FB5E4 class CObject *__cdecl CDoppelganger::Copy(void)
0x0059344C void CDB::RequestSaveSharedReuseDelayOfItem(int,int,int)
0x0058BE0C void CDB::UseRecipeItem(int,int,int)
0x0061FD28 void CFieldCycleSystem::Start(int,const unsigned char *)
0x0081E21C bool CSkillInfo::CheckActivateSkillEffects(class CCreature*, class CObject*, enum CSkillInfo::EffectActivateTiming) const
0x00653764 void CHeroSystem::SetHeroPledge(class User *)
0x00706D34 void CJumpAction::SetValidPendingAction(void)
0x0063930C void CFortress::HandleDeleteFlag(class User *, bool)
0x0069C538 void CItemExpirationManager::AddItem(int,int,int,bool)
0x00505704 bool CommPledgeMasterTransferPacket(class CCommSocket*, const unsigned char *)
0x007418E0 bool NpcGrowSkillSuggestion(class NpcSocket *, const unsigned char *)
0x004A7FF0 bool BuilderCmd::cancel_lord(class CSocket*, class User*, wchar_t *)
0x0083EE84 bool CSkillEffect_p_avoid_rate_by_hp2::Pump(class CCreature*, const class CSkillInfo *, int)
0x0057E63C bool CDB::ReconnAuthD(void)
0x007E99F8 CPremiumService::CreateTransactionId()
0x00911E08 bool UserPacketEx::WithdrawPremiumItem(class CSocket *, const unsigned char *)
0x007167DC void CSkillAction2::CalcMeteoPointList(void)
0x007F7898 void CPVPMatchSystem::GetRelationTo(class User &,class User &,int &)
0x008C3CF0 bool TalkChannelCache::SubChannel::Cache(unsigned int,unsigned int,int)
0x0086D838 void CTerritory::ShowTerritoryByAdena(class CCreature &)
0x00843324 bool CSkillEffect_c_mp::Consume(class CObject*, double)
0x00475F40 void CShopServer::ReadLock(const wchar_t*, int)
0x0053BEFC double CCreature::EquipedArmorsMDefend(void) const
0x004DB548 bool BuilderCmd_show_alliance_info(class CSocket*, class User*, wchar_t *)
0x0066D518 void ViewCastleList::ExecuteInternal()
0x008EB05C void User::DecreaseEquippedItemDurationOnTimerExpired(void)
0x004E2BA0 bool BuilderCmd2Handler(class CSocket*, const unsigned char *)
0x00865378 void CTeamBattleAgit::PauseSiege(void)
0x0080FF00 bool CSharedFactoryclass CItem,class CSharedItemData,class CSharedItemConstant,&class CSharedDefine const SharedDefine_Item::Push(int,int &,int)
0x008DFFE0 bool User::EnchantItem(class CItem*, class CItem *)
0x007D30DC void CPledge::SetAllianceByDbId(unsigned int)
0x00889FE4 bool SocialClassNS::IsKnightOrNobless(class User *)
0x0063B38C void CFortressSiege::StartFlagCapture(bool)
0x00737E24 bool NpcSocket::NpcSetEvolutionId(class NpcSocket*, const unsigned char *)
0x004816D8 bool BuilderCmd_ShowPCCafeCouponEventSetting(class CSocket*, class User*, wchar_t *)
0x005E704C void CDBSocketOp::SetNobless(const unsigned char *)
0x00588C04 void CDB::PetUseItem(class CPet*, class CItem *)
0x008867B4 void CUCRecordBoard::AddNewRecordData(int,class User *)
0x0071BEB4 void CNPC::Despawn(bool,bool)
0x008B1FE0 void User::SendPrivateStoreBuyManageList(class CUserSocket *)
0x0085B4E8 bool SSQSystem::SendPreResultTo(class User *)
0x00691188 void CIOCPMessage::OnIOCallback(int,unsigned long,struct _OVERLAPPED *)
0x007AF25C void CSummon::SendSummonStatusToMaster(void)
0x0071191C bool CSkillAction2::IsTargetAttackable(class CCreature*, class CObject*, int)
0x007A6C14 int __cdecl CPCCafeCouponEventMgr::GetCouponItemId(const int) const
0x00694FC4 void CSetItem::SetEffectParamDouble(enum ObjectFieldType,double,double)
0x004CE88C bool CObjectMapclass CUserSocket,8191,28,class RWLock::ExistKey(int)
0x0083EDAC bool CSkillEffect_p_avoid_rate_by_hp1::Pump(class CCreature*, const class CSkillInfo *, int)
0x00756260 bool NpcAddKillPointUserPVPMatch(class NpcSocket*, const unsigned char *)
0x006B4068 __cdecl CL2Time::CL2Time(void)
0x00810E4C bool CContainer::PopItem(class CItem *)
0x00670898 void ReadMail::ParseParameter()
0x00831100 bool CSkillOperateCondition_check_sex::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x005D640C bool DeleteCharacterSuccessPacket(class CDBSocket*, const unsigned char *)
0x007B63D4 void CPetManager::DeletePet(unsigned int,unsigned int)
0x00861A94 void CThreadLocalWorldMap210000,20000,8::Write2(short,short,char,int,class CObject *)
0x0092D5B8 bool DestroyQuest(class CSocket*, const unsigned char *)
0x005B4B14 bool DepositWarehouseItemsPacket(class CDBSocket*, const unsigned char *)
0x006C507C void CManorDB::LoadFromDB(void)
0x007D4C80 void CPledge::Oust(unsigned int,const wchar_t *)
0x0087CFF8 void CTransformCommonData::SetSpeed(class std::xvectordouble,class std::xallocatordouble &)
0x008D61C8 void User::ShowQuestHTML(const wchar_t*, const wchar_t*, int)
0x0088D648 __int64 User::ExpDown(__int64)
0x0088BF30 __int64 User::ExpInc(__int64,bool)
0x00825DB8 __int64 SkillEnchantRouteChange::CalculateExp(const struct SkillEnchantInfo*, int)
0x00825B90 __int64 SkillEnchantSafe::CalculateExp(const struct SkillEnchantInfo *, int)
0x006DB774 void CMiniGameAgit::BroadcastToUnselectedPledgeMaster(const char*, ...)
0x00825390 __int64 SkillEnchantOperator::CalculateBaseExp(const struct SkillEnchantInfo *, int)
0x008B92E4 void User::SendItemIncreaseSystemMessage(int,__int64,int,int)
0x00506EFC static bool CommBBSWriteCommentPacket(CCommSocket *socket, const unsigned char *packet)
0x004972E8 bool BuilderCmd_show_castle_info(class CSocket*, class User*, wchar_t *)
0x0091E4AC bool CUserSocket::ValidateLocationPacket(class CSocket*, const unsigned char *)
0x0059C6D8 void CDB::RequestLoadAllAgit(void)
0x00505D9C static bool CommBBSModBoardPacket(CCommSocket *socket, const unsigned char *packet)
0x00505BB4 static bool CommBBSGetBoardListPacket(CCommSocket *socket, const unsigned char *packet)
0x00505A1C static bool CommBBSMakeBoardPacket(CCommSocket *socket, const unsigned char *packet)
0x005064A0 static bool CommBBSGetArticleListPacket(CCommSocket *socket, const unsigned char *packet)
0x00506974 static bool CommBBSGetCommentPacket(CCommSocket *socket, const unsigned char *packet)
0x0050677C static bool CommBBSReadArticleThreadPacket(CCommSocket *socket, const unsigned char *packet)
0x0079C088 void CPartyRoom::GetMemberListWithPM_WindowOpen(class std::xvectorclass CSPointerclass CRoomMember,class std::xallocatorclass CSPointerclass CRoomMember  &)
0x00505F44 static bool CommBBSDelBoardPacket(CCommSocket *socket, const unsigned char *packet)
0x008C6A54 void User::PrivateStoreBuy(const unsigned char*, class User *)
0x00502240 void CCommCli::Send(const char *format, ...) const
0x006C21B4 void CManor::LogManorInfo(void)
0x005B8104 bool AcquiredSkillList(class CDBSocket*, const unsigned char *)
0x0089255C void User::DeleteAllBossRecord(void)
0x00441C1C void AtomicBuyAirShip::Dump(void)
0x0091CB48 bool ActionPacket(class CSocket*, const unsigned char *)
0x004818D0 bool BuilderCmd_Fortress(class CSocket*, class User*, wchar_t *)
0x0063A8A4 void CFortressSiegeRegistry::BroadcastSystemMessageW(int,int)
0x006E8C0C void CMonRaceHTML::MonRaceBuy15(int,int,int,int)
0x007DAAF0 void CPledge::SendPledgeSkillListWhoCanAcquire(bool,bool)
0x005EE3A0 bool CDominionSiegeEntry::IsInSiegeUser(unsigned int)
0x0055DC94 void CCreature::ValidateSkillList(void)
0x0041BD94 void CAirShip::Descent(void)
0x00591874 void CDB::RequestFishingEventFinish(void)
0x00781338 void CParty::TeleportToLocation(int,int,int,int,unsigned int)
0x005984F4 int Push(TYPE *pObj)
0x0074A974 bool NpcSetSkillAll(class NpcSocket *, const unsigned char *)
0x0062C658 bool CFortressBuilderCmdHandler::BuilderCMd_SetOwnMinutes(class CSocket*, class User *, wchar_t *)
0x004895B8 bool BuilderCmd_event(class CSocket *, class User*, wchar_t *)
0x0073A64C bool NpcChangeMoveType(class NpcSocket*, const unsigned char *)
0x007A5BF8 void CPCParamDB::SetRegenMoveModeBonus(MoveModeEnum eMoveMode, double dValue)
0x00492480 bool BuilderCmd_play_music(class CSocket*, class User*, wchar_t *)
0x007642D0 void COlympiadField::Init(void)
0x0072B468 void CNPC::Set(enum ObjectFieldType,class std::xvectorint,class std::xallocatorint *)
0x006FEF0C void CCreatureController::TimerExpired(int)
0x005F5810 void CDominionManager::SiegeTimerExpired(int)
0x006119C8 void CEventMatchSkillRuleSet::ShowInfo(class CSocket *)
0x00908E28 void User::SendSpelledInfoChanged(void)
0x00580E38 void CDB::RequestLoadWareHouseItems(unsigned int,class User*, int,class CWareHouseWithdraw*, int,int) const
0x0044D6E8 void CAuctionManager::Load(void)
0x0043EF90 int __cdecl AtomicAddSSQMember::Assemble(char*, int)
0x0084B4CC bool CSkillEffect_i_m_soul_attack::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x004FA820 bool CCleft::SetCleftWinner(enum BlueRedTeam::Enum)
0x00593394 void CDB::RequestLoadSharedReuseDelaysOfItems(int)
0x007C94B8 bool CPledge::HasLoadedAllData(void)
0x005248AC class CSharedCreatureData *__cdecl CSharedFactoryclass CCreature,class CSharedCreatureData,class CSharedCreatureConstant,&class CSharedDefine const SharedDefine_Creature::Add(class CCreature *)
0x0052D908 bool CCreature::ValidateMDefend(void)
0x0088973C bool SocialClassNS::IsMember(class User *)
0x0088D058 void User::Suicide(enum DamageTypeEnum)
0x00573590 bool CCubicHandler::IsExpired(class CCubic*, struct CubicActivationInfo &)
0x0041DD10 __cdecl CSafePointer2class CStaticObject::CSafePointer2(const class CSafePointer2class CStaticObject &)
0x008117C8 class CContainer *__cdecl CContainerDB::AllocAirShipContainer(int)
0x004CCFD8 bool BuilderCmd_show_castle_door_hp(class CSocket*, class User*, wchar_t *)
0x0080EF78 class CContainerIndex CContainerDB::GatherNeighborWorldContainerIndex(class CContainer *)
0x0080F210 class CContainer *__cdecl CContainerDB::GetWorldContainer(int,int,int)
0x00512E9C CConfig::~CConfig()
0x009557B4 void CVehicle::SendVehicleInfo(class CUserSocket *)
0x0048D724 bool BuilderCmd_leavepetimsg(class CSocket*, class User*, wchar_t *)
0x00595C48 void CDB::SaveUserBookmarkSlot(class User*, int,class FVector &,int,wchar_t*, wchar_t *)
0x007351B4 bool ShowVariationMakeWindow(class NpcSocket*, const unsigned char *)
0x006FB97C bool COpenCloseAction2::OnStart(void)
0x007769F0 bool COwnThing::AddOwnThing(const wchar_t*, class COwnThing *)
0x005F6B78 void CDoor::GetTerritory(class CTerritory &) const
0x0040D9BC bool CAgitHTML::AgitBidCancelRequest(int,int,int)
0x009477A4 bool HtmlCmdPacketDeposit(class CUserSocket *, class User*, const wchar_t*, const wchar_t *)
0x007FC354 void CResidence::InstallHpStove(int,int)
0x0047A964 bool BuilderCmd_castleincome(class CSocket*, class User*, wchar_t *)
0x0046E0C8 bool CObjectMapstruct BotBlockData,10,5,class CIOCriticalSection::Insert(int,struct BotBlockData*, char*, int)
0x0058741C void CDB::Ping(class User*, unsigned long)
0x008F1040 bool User::CanInstallBattleCamp(void)
0x005AF6B4 bool ReplyLoadDismissReservedPledge(class CDBSocket*, const unsigned char *)
0x00923158 bool ConfirmDlg_OpenDoor(class CUserSocket*, class User*, bool,int)
0x005055FC bool CommDelClanBoardPacket(class CCommSocket*, const unsigned char *)
0x00769024 bool COlympiadUserStateMachine::CanChangeState(enum COlympiadUserStateMachine::UserState)
0x0053B34C void CCreature::DeleteAllItemsInInventory(void)
0x00976944 void CWorld::VehicleMove(class CVehicle*, class FVector)
0x00976F88 bool CWorld::AirShipMove(class CAirShip*, class FVector)
0x00438C3C void CArea::TimerExpired(int)
0x00810F44 bool CContainer::PushStaticObject(class CStaticObject *)
0x0060B1BC void DxSaveHeroType::DoServerJob(void)
0x006C2554 void CManor::TransferCropData(void)
0x008FDDA0 bool User::RideWyvern(class CPet *)
0x00880CCC void CWorldTrapDB::OnInZoneDelete(const int)
0x004181E4 void CAirShipManager::DebugAirShipInfo(class User*, class CAirShip *)
0x007C5AC8 bool CPledge::RequestCastleSiegeDefenceCount(unsigned int) const
0x0083B4B8 bool CSkillEffect_p_transform::PumpStart(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpStartType) const
0x0045382C void CAuctionAgit::EnterDoAuction(void)
0x00839448 __cdecl CSkillEffect_i_dispel_by_slot_probability::CSkillEffect_i_dispel_by_slot_probability(wchar_t *, int)
0x004B289C bool BuilderCmd_set_tb(class CSocket*, class User*, wchar_t *)
0x0083C750 __cdecl CSkillEffect_p_block_getdamage::CSkillEffect_p_block_getdamage(wchar_t *)
0x00839278 __cdecl CSkillEffect_i_abnormal_time_change::CSkillEffect_i_abnormal_time_change(wchar_t*, double,enum SkillFxChangeType)
0x00834904 bool CSkillEffect_i_mp_per_max::Instant(class CObject*, const class CSkillInfo *)
0x007D34CC void CPledge::SetSubPledge(enum PledgeType,wchar_t*, unsigned int,bool)
0x00891F90 void User::SavePoint(int,int)
0x0062FA38 bool CFortressBuilderCmdHandler::BuilderCmd_SetTreasureLevel(class CSocket*, class User*, wchar_t *)
0x0052F5A0 unsigned __int64 CCreature::GetPassingPosList(class FVector *)
0x0071E138 void CNPC::OnTeleport(void)
0x0076342C void CObjectDB::SetRegisterObject(class CSetItem *)
0x00428724 void CAirShipConst::OnLoad(void)
0x00821BF0 bool CSkillInfo::PushEffect(class CSkillEffect*, const enum CSkillInfo::EffectActivateTiming)
0x0052C000 bool CCreature::GetItem(class CItem *)
0x007A5C68 void CPCParamDB::SetRegenMoveModeHPBonus(enum MoveModeEnum,double,double,double,double,double,double)
0x007C27F4 bool RequestInform(class CPetitionSocket*, const unsigned char *)
0x004AD718 bool BuilderCmd::show_item_info(class CSocket*, class User*, wchar_t *)
0x00769098 bool COlympiadUserStateMachine::ChangeState(enum COlympiadUserStateMachine::UserState)
0x00581A18 void CDB::ReqLoginCharacter(int,struct in_addr,bool)
0x008E5BBC void User::ReplyEnchantItemFail(class CItem *, __int64,class CItem*, __int64,class CItem *)
0x0082E8EC bool CSkillOperateCondition_op_check_cast_range::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x007DF91C void CPledgeMemberList::ResetAllNickName(void)
0x007D9410 bool CPledge::_AcquireSubPledgeSkillData(enum PledgeType,unsigned int,int,bool)
0x00415CD0 __cdecl CAgitHTML::~CAgitHTML(void)
0x00769BF0 void COlympiadSystem::SaveOlympiadPenaltyLog(int,int,int,int,int,int)
0x007E8DFC void CPrecompiledHeaderDB::Load(const wchar_t*, struct _iobuf *)
0x004D6408 bool BuilderCmd_door_levelup(class CSocket*, class User*, wchar_t *)
0x0091131C bool RequestSaveUI(class CSocket*, const unsigned char *)
0x004CF938 bool CSCharacterInfoPacket(class CSocket*, wchar_t *)
0x00762F40 void CObjectDB::RegisterObject(class CObject *)
0x00521290 void CCrataeCube::RegisterUserToRecordBoard(class User *)
0x0091F72C bool CUserSocket::ItemCrystallizePacket(class CSocket*, const unsigned char *)
0x0056C560 void CCreatureController::SetActor(class CCreature *)
0x00772084 int __cdecl AddEntryHelper::GetMemberList(class User*, enum GameRuleType,class std::xvectorclass User*, class std::xallocatorclass User* &,class COlympiadEntry *)
0x008558F0 bool CSkillEffect_p_trigger_skill_by_dmg::PumpStart(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpStartType) const
0x00836768 bool CSkillEffect_i_delete_hate_of_me::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2 *, double)
0x004FCACC void CCleft::Init(void)
0x007F6124 void CPVPMatch::InsertBannedUser(int)
0x004C40B8 bool BuilderCmd::summon_option(class CSocket*, class User*, wchar_t *)
0x005E7BC4 void CDBSocketOp::DelPledgeSkill(const unsigned char *)
0x0080E538 void CSetting::AddRestartPointGroup(class CSetting::RestartPointGroup *)
0x006848B8 void CInstantZoneDB::PostLoad(void)
0x0071C09C class CSafePointer2class CCreature &__cdecl CSafePointer2class CCreature::operator =(const class CCreature *)
0x007CD82C void CPledge::ViewPledgeMemberInfo(wchar_t *)
0x00600248 void CPartyDuelManagement::EndDuel(class CDuel *)
0x00469010 bool CBossRecord::SubtractAccumulatedPoint(int *)
0x0091A2CC bool ResponseNewInspectorPacket(class CSocket*, const unsigned char *)
0x008586C0 bool CSlotIndexManager::Remove(class CItem *)
0x0051E86C void CCrataeCube::RefreshUser(class User *)
0x007E70A8 void CPledgeRanking::RequestLoadRanking(void)
0x00410F5C void CAgitHTML::AgitInfo(int)
0x00555FAC void CCreature::GatherNeighborCreature(class FVector,int,int,class std::xvectorclass CSafePointer2class CCreature,class std::xallocatorclass CSafePointer2class CCreature  &,class std::xvectordouble,class std::xallocatordouble &,int,int,int,enum SkillAffectObjectTypeEnum,class CCreature*, class CCreature*, bool,bool)
0x00659EE4 void CHtmlBuilder::BuildTreeLinkHtml(WCHAR *link)
0x00829A34 void CSkillEnchantDB::GetOtherRouteSkills(class std::xvectorstruct SkillEnchantInfo*, class std::xallocatorstruct SkillEnchantInfo* &,int,int)
0x0045F208 void CBlockUpset::ReleaseBlockUpsetInfo::Do(class CBlockUpsetMemberInfo &)
0x0047DA68 bool BuilderCmd_show_radar(class CSocket*, class User*, wchar_t *)
0x004FDCD8 bool CCleft::_SelectRandomCat(enum BlueRedTeam::Enum)
0x00717CBC bool CAttackActionHelper::CheckAttackable(double,double,double,double,double,double,int,int,enum AttackType)
0x00955E38 void CVehicleDB::AddVehicle(const wchar_t*, class CVehicle *)
0x0088DEE0 void User::RepliedPCCafeCouponResult(const char,const int,const int,const int,const int)
0x007D5138 void CPledge::Withdraw(class User *)
0x00765A14 bool COlympiadObserverEntry::AddEntry(int)
0x00839120 bool CSkillEffect_i_sp::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x0079EA58 CPartyRoomSP CPartyRoomRegistry::FindByIdInternal(int id)
0x00923758 bool ConfirmDlg_CallPC(class CUserSocket*, class User*, bool,int)
0x00881930 void CWorldTrap::OnStepOut(class CCreature &)
0x007CEC54 void CPledge::RenameSubpledge(enum PledgeType,wchar_t *)
0x005507C8 void CCreature::ResetSkillReuseDelay(int,class std::xvectorint,class std::xallocatorint &)
0x00517190 int __cdecl CControlTower::GetDominionSiegeID(void)
0x004FA948 int __cdecl CCleft::GetRelation(class User &,class User &)
0x004F11C8 int __cdecl CCastle::GetSelectableSiegeTimes(long,int*, int,int)
0x004E8E18 int __cdecl CBuy::ReportShopTax(__int64)
0x00471188 int __cdecl CBotReportAgent::CheckRestrainAndUpdate(int,unsigned long,int,int)
0x0046F7D0 int __cdecl CBotReportAgent::GetRemainDelay(int)
0x0041B418 int __cdecl CSharedFactoryclass CAirShip,class CSharedAirShipData,class CSharedAirShipConstant,&class CSharedDefine const SharedDefine_AirShip::Remove(class CAirShip *)
0x0041949C int __cdecl CSharedFactoryclass CAirShip,class CSharedAirShipData,class CSharedAirShipConstant,&class CSharedDefine const SharedDefine_AirShip::RemoveByIndex(int)
0x007AE71C void CCommonRidingInfo::Init(void)
0x0080D980 int __cdecl CSetting::GetRestartPointSys(enum RaceType,class FVector,int)
0x0059F95C bool ReplyGetHeroMatchResultPacket(class CDBSocket*, const unsigned char *)
0x00944614 bool HtmlCmdTalkSelect(class CUserSocket*, class User*, const wchar_t*, const wchar_t *)
0x0094BB68 bool HtmlCmdTransferMaster(class CUserSocket*, class User*, const wchar_t*, const wchar_t *)
0x005CBC60 bool ReplyManorBuySeed(class CDBSocket*, const unsigned char *)
0x007687D0 int COlympiadParam::GetStep(int nElapsedSec)
0x0064AEE8 class CTerritory *__cdecl CGeoZone::GetNoDropItemTerritory(const class FVector &)
0x00807480 void CSecureINIFileReader::_AddFile(const wchar_t*, class CSecureINIFile *)
0x007F0EF8 bool CPVPMatch::CanAddPlayer(class User &) const
0x005AFDD8 bool ReplyLoadPledgeWar(class CDBSocket*, const unsigned char *)
0x006A616C bool CItemEquipCondition_some_fortress::CheckPrivate(class CCreature *, class CItem *)
0x0084B150 bool CSkillEffect_i_fatal_blow::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x00502744 bool CCommCli::CheckCommSvr(User *pUser, bool bCheck)
0x0058D190 void CDB::RequestGetMemoList(class User*, int,wchar_t *)
0x0050201C bool CCommCli::ConnectToCommD()
0x0072ECE0 bool NpcSetDoorHpLevel(class NpcSocket*, const unsigned char *)
0x0097EFB0 CObject* CZzoldagu::Copy()
0x005B0078 bool ReplyLoadDoor(class CDBSocket*, const unsigned char *)
0x008A8C58 bool User::CheckSubjobCommon(int,int)
0x0052CE50 bool CCreature::ValidateCPRegen(void)
0x00456318 bool AuthReplyReconnect(class CAuthSocket*, const unsigned char *)
0x008F572C bool User::DeleteAcquireSkills(enum EtcSkillAcquireType)
0x006FC660 bool CAttackAction::CheckAttackable(double,double,double,double,double,double,int,int,enum AttackType)
0x0063CA78 bool CFortress::OnAIEvent(int,int,int,int,__int64)
0x0040F744 void CAgitHTML::AgitSale1Request(void)
0x004A3608 bool BuilderCmd_SendPledgeSkill(class CSocket*, class User*, wchar_t *)
0x0075B6C0 void CContributeData::AccumulateContribute(class CCreature*, double)
0x0097DADC void CXmasSantaEventMgr::Add(class CXmasSantaEventInfo *)
0x004EE4DC void CCastle::PassSiege(void)
0x0082E470 bool CSkillEffectAddBonusByWeaponType::Pump(class CCreature*, const class CSkillInfo *, int)
0x00967CCC void CWorld::__async_AsyncEnterWorld(struct CExecutionArgumentPad *)
0x007344B8 bool NpcGiveFishingEventPrize(class NpcSocket*, const unsigned char *)
0x004E1F00 bool BuilderCmd::CheckImitation(class CSocket*, class User*, wchar_t *)
0x00480A74 bool BuilderCmd_switch_pledgewar_member_count_condition(class CSocket*, class User*, wchar_t *)
0x0083EF5C bool CSkillEffect_p_attack_speed_by_hp1::Pump(class CCreature*, const class CSkillInfo*, int)
0x008227B8 void CSkillDB::PostLoad(void)
0x005F7074 bool CDoor::IsEnemyTo(class CCreature *)
0x00595850 void CDB::RequestLoadNRMemo(unsigned int)
0x005845E0 void CDB::SendSetBuilder(wchar_t*, int)
0x0058C50C void CDB::RequestEndMonRace(int,double,double,double,double,double,double,double,double,double,double,int,int,double,double)
0x008494AC bool CSkillEffect_i_mount_for_event::Instant(class CCreature *, class CObject *, const class CSkillInfo*, class CSkillAction2*, double)
0x00706118 void CCreatureController::__async_MoveToTarget(struct CExecutionArgumentPad *)
0x006945D0 __int64 CItem::GetCrystalizeCount(const int) const
0x006079E8 void DxAddAllOlympiadBonusPoint::DoServerJob(void)
0x00686AAC __int64 CInventory::GetBoltCountByCrystal(enum CrystalType)
0x0079645C bool CPartyMatchingWaitingRoom::SetInvitable(class User *)
0x00953350 class FVector CVehicle::ConvAbsToRel(class FVector) const
0x00621E88 bool CFieldCycle::AddStep(int,int,struct StepInfo *)
0x0062F53C bool CFortress::IsInSiege(void)
0x00455DF0 void CAuthSocket::OnClose(void)
0x005F0F6C void CDominionManager::SendDominionMessageToMembers(int)
0x0055F694 int __cdecl CCreature::TriggerSkillBySkill(int,class CObject &)
0x00743BF8 bool NpcBroadcastScreenMessage(class NpcSocket*, const unsigned char *)
0x0055F298 int __cdecl CCreature::TriggerSkillByAttack(class CCreature &,double,bool)
0x00921EAC bool RequestRecipeShopQuit(class CSocket*, const unsigned char *)
0x005EEB34 void CDominionManager::AddStart(class CDominion *)
0x008428DC bool CSkillEffect_p_exp_modify::PumpEnd(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpEndType) const
0x0059CC70 void CDB::RequestBreakFriendshipBatch(class User*, class std::xvectorint,class std::xallocatorint &)
0x004440D0 bool AtomicEvolvePet::Do(void)
0x007F937C bool CRecipeInfo::CheckCondition(class User *, bool)
0x00478D90 __int64 SSQSystem::GetMainEventPoint(enum SSQPart::type) const
0x006739FC void SendMail::ExecuteInternal()
0x0042D0EC void BuilderCmdHelper::Destroy(class User*, wchar_t *)
0x00576CC0 int __cdecl CCursedWeapon::GetLevel(void)
0x008EBDA4 void User::OnDiePenalty(bool,double)
0x005CB690 bool ReplyManMemo(class CDBSocket*, const unsigned char *)
0x004947F0 bool BuilderCmd_left_petition_chat(class CSocket*, class User*, wchar_t *)
0x0080D1F0 class CSetting::RestartPointGroup *__cdecl CSetting::GetRestartPointGroup(enum RaceType,class FVector)
0x00406448 long CAgit::GetAgitFirstSiegeDate(void)
0x00912A60 bool SetPledgeEmblem(class CSocket*, const unsigned char *)
0x00832D40 bool CSkillEffect_i_dispel_by_slot::Instant(class CObject*, const class CSkillInfo *)
0x00806610 void CRestrictArea::Load(void)
0x00428AFC void CAirShipConstRegular::OnLoad(void)
0x008E0390 void User::AnnouncePickItem(class CItem *)
0x0089A5D0 bool User::SetStopSay(unsigned long,bool)
0x0086B5AC enum TeleporterType __cdecl CTeleporter::CanTeleport(class User *)
0x0044D790 long CAuctionNPC::GetNextStartTime(void)
0x009587D8 void CVehicleDB::Reload(void)
0x00884C20 void CUCRecordBoard::Summation(void)
0x007DB558 void CPledge::UpdateNameValue(int)
0x005513E4 void CCreature::_GetPassiveSkillListByType(const class CSkillInfo*, class std::xvectorclass CSkillInfo const*, class std::xallocatorclass CSkillInfo const* &)
0x004A3310 bool BuilderCmd_SendSkillList(class CSocket *, class User*, wchar_t *)
0x0047F500 bool BuilderCmd_switch_market_price_warning(class CSocket*, class User*, wchar_t *)
0x00593B5C void CDB::RequestLoadFortressSiege(int)
0x0052F840 bool CCreature::BeClosedToPassingPos(const class FVector &)
0x00894298 enum AttackType User::GetAttackType(class CSharedItemData **)
0x00537020 enum AttackType CCreature::GetRealAttackType(void)
0x00524A1C void CCreature::OnCreate(void)
0x0043028C int __cdecl AltitudeHelper::AdjustAltitude(int)
0x004305DC void CShipAction::AddTimer(int)
0x00903434 void CUserBookmarkHandler::BuilderCmdHandler(class User*, wchar_t *)
0x0094F3D8 int GetIntFromString(WCHAR* sNum)
0x00832610 bool CSkillEffect_op_blink::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x005EC610 void CDominionManager::BroadcastDominionMessageToAll(int)
0x00622C9C void CExecutionSerializerclass CFishingController,32::AddExecutable(class MemoryObject*, void (__cdecl MemoryObject::* )(struct CExecutionArgumentPad *),class CExecutionArgument *, const wchar_t *)
0x007E4720 void PlayMusic::ServeInternal(class User *)
0x0058A40C void CDB::RequestAgitAutoSell(int,__int64,int,int,int)
0x006242B8 bool CFishingController::SummonNPC(int,class User *)
0x00831428 bool CSkillOperateCondition_op_soul_max::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x0071F5EC bool CNPC::OnNpcMovePacket(int,int,int)
0x00691DA8 lock is empty
0x0085CAFC bool SSQSystem::ChangePeriod(int,int,int)
0x0051747C bool CControlTower::IsEnemyTo(class CCreature *)
0x008481C0 bool CSkillEffect_i_teleport::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x008A6E20 void CThreadLocalWorldMap2100000,50000,8::Remove(int,class CObject *)
0x008A1D08 bool User::IsPartyMaster(void)
0x004799BC bool BuilderCmd_friendaddoff(class CSocket*, class User*, wchar_t *)
0x00708CEC bool CMoveToTargetRelativeAction::SetMoving(void)
0x00767974 void COlympiadField::TimerExpired(int)
0x00704894 bool CMoveRelativeAction::OnStart(void)
0x0076244C class CSetItem *__cdecl CObjectDB::GetSetItemBySetItemId(int) const
0x006BF400 void CManor::ReadUnlock(void)
0x0082E4F4 void CSkillEffectByArmorType::SetArmorTypeArray(bool [])
0x006FACE0 bool CNothingAction::OnStart(void)
0x00448444 bool CSharedCreatureData::SetFlagJournal(int,int)
0x00602CB0 bool CDuelBuilderCmdHandler::BuilderCmd_PartyDuelStart(class CSocket *, class User*, wchar_t *)
0x0069194C void CGetOffVehicleIOCPMessage::OnReceive(int)
0x0065BE6C void ModifyTempMailFormHtmlBuilder::SendHtml()
0x0065DC4C void ModifyTempMailFormHtmlBuilder::Build1002Packet()
0x00658D84 void ModifyTempMailHtmlBuilder::DisassemblePacket()
0x0058DC14 void CDB::RequestBBSClanAdmin(class User*, int,int,int,wchar_t*, int,int,const unsigned char *)
0x00661F4C void ModifyTempMailFormHtmlBuilder::Build1001Packet()
0x00664C58 void ModifyTempMailFormHtmlBuilder::BuildHtmlInternal()
0x00765144 void COlympiadField::StatusPrepareMatch(int)
0x00772E48 void COlympiadDefaultSetting::AddNotResetSkill(class std::xvectorint,class std::xallocatorint &)
0x008E7100 void User::OnPeriodicItemDestroyed(class CItem*, int)
0x0087D3C8 bool CTransform::IsValidAction(int)
0x0058C34C void CDB::RequestCreateMonRace(int,int,int,int,int,int,int,int,int)
0x006E4698 bool CMonRaceDB::CreateRace(int)
0x00808EA0 __cdecl CSecureINIFileReader::CSecureINIFileReader(void)
0x0083F990 bool CSkillEffect_p_physical_shield_defence::Pump(class CCreature*, const class CSkillInfo*, int)
0x00536300 double CCreature::EquipedArmorSpeedByCrystal(void) const
0x008F7E08 bool User::GatherSkillAcquireList(class std::xmapclass CSkillKey,struct User::AcquireInfo,struct std::lessclass CSkillKey,class std::xallocatorstruct std::pairclass CSkillKey const ,struct User::AcquireInfo  &,int &,enum EtcSkillAcquireType,bool)
0x0091770C bool RequestShowCastleInfo(class CSocket*, const unsigned char *)
0x00590C64 void CDB::RequestOlympiadPenaltyLog(int,int,int,int,int,int)
0x00519030 void CControlTower::OnSiegeEnded(void)
0x0049C860 bool BuilderCmd_col_ban(class CSocket*, class User*, wchar_t *)
0x007B9008 CPetitionCli::ConnectToPetitionD
0x00704E20 void CMoveAction::Set(class CSmartID,class FVector,bool,bool,int,int,int)
0x005CD978 bool ReplyCreateSubJob(class CDBSocket*, const unsigned char *)
0x006EDB64 bool CheckPointOverlap::operator ()(class FVector &)
0x00430490 void CShipController::AddTimerEx(__int64)
0x00899694 void User::CheckCompassRegion(void)
0x0047B8F8 bool BuilderCmd_gmspeed(class CSocket*, class User*, wchar_t *)
0x00849BD4 double L2SkillFunc::GetMagicCritical(class CCreature &,class CObject &,double)
0x004950CC bool BuilderCmd_setpower(class CSocket*, class User*, wchar_t *)
0x0061026C void CEventMatch::SendEventMatchInfo(class CUserSocket *)
0x00963BC0 bool CWorld::CanGo(const class FVector &,class FVector &,class FVector &,bool &,double &,int,bool)
0x0042A85C void CAirShip::FillOutputVectorWithParts(class std::xvectorclass CSafePointer2class CStaticObject,class std::xallocatorclass CSafePointer2class CStaticObject  &,class std::xvectordouble,class std::xallocatordouble &,class FVector &)
0x0070055C bool CAttackAction::OnTick(void)
0x0063B71C bool CFortressBuilderCmdHandler::BuilderCmd_ShowInfo(class CSocket*, class User*, wchar_t *)
0x0052A2D4 bool CSharedCreatureData::SetAbnormalLevel(enum AbnormalStatusSlotType,unsigned char)
0x0062B884 void CFortress::SetFlagpole(class CFortressFlagpole *)
0x00766F88 void COlympiadField::AsyncEscapeObserver(int)
0x005BB6A4 bool ReplyQueryCastleSiegeForDismiss(class CDBSocket *, const unsigned char *)
0x0058C750 void CDB::RequestGetMonRaceTicket(class User*, int)
0x00500DD4 bool CCleft::RemoveCleftPlayer(int)
0x008520C8 bool CSkillOperateCondition_op_need_summon::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x005D6954 bool DBPacketHandler::DropItemPacket(class CDBSocket *, const unsigned char *)
0x006BE24C bool NpcPosEventMap::_SetPosEvent(const wchar_t*, int)
0x00572584 void CCreatureController::__async_PrivateStore(struct CExecutionArgumentPad *)
0x008DBCBC void User::UpdateSlotItemInInventory(enum SlotType,enum InventoryUpdateType)
0x00587ADC void CDB::RequestJoinAlliance(class User*, class CAlliance*, class CPledge*, class CPledge *)
0x005FC22C void CPartyDuel::SendToTeamPlayers(enum DuelTeamType,const char*, ...)
0x008E1B18 void User::OnLoadPeriodicItemInfo(int,const unsigned char *)
0x00774D88 void COlympiadUser::OnLeaveWorld(void)
0x0088AF44 bool User::IncreaseSoulCount(int,const int)
0x00456D80 void CIOSocketExclass CIOBufferEx8192 ::Initialize(void)
0x005684AC bool CCreature::SetVisibleBySkill(bool)
0x0055E020 void CCreature::EnableSetItemSkill(int,bool)
0x0049FCA0 bool BuilderCmd_setbosspoint(class CSocket*, class User*, wchar_t *)
0x00865480 void CTeamBattleAgit::ResumeSiege(void)
0x008E8D54 bool User::DeleteItemInInventoryBeforeCommit(int,__int64)
0x0060FAC4 CEventController::SendEventControllerInfo(CUserSocket *pUserSocket = NULL, bool IsInsight)
0x008570D0 bool CSkillEffect_i_confuse::Instant(class CCreature *, class CObject *, const class CSkillInfo*, class CSkillAction2*, double)
0x00640070 void CFriends::GetFriendName(unsigned int nDbId, WCHAR *sName, int nNameLen)
0x00716C48 void CSkillAction2::BroadcastSkillUse(class CCreature*, int)
0x0070FEA4 bool CSkillAction2::CheckAndConsumeHPMP(class CCreature*, class CSkillInfo*, double,bool,bool)
0x007F2C50 void CPVPMatch::_BroadcastToPlayer(class std::xmapunsigned int,class CPVPMatchMemberInfo*, struct std::lessunsigned int,class std::xallocatorstruct std::pairunsigned int const ,class CPVPMatchMemberInfo*  &,const char*, ...)
0x005E3558 bool BuilderList(class CDBSocket*, const unsigned char *)
0x007C8C00 void CPledge::SetBattleCamp(class CBattleCamp *)
0x005CE344 bool ReplyEventAmount(class CDBSocket*, const unsigned char *)
0x00736788 bool NPCFieldCycle(class NpcSocket*, const unsigned char *)
0x0046007C void CBlockUpset::BanishCombatBlockUpsetUser::Do(class CBlockUpsetMemberInfo &)
0x00834584 bool CSkillEffect_i_Enchant_Armor_Rate::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x0058BD04 void CDB::RequestSetTeamBattleStatus(class CTeamBattleAgit*, int)
0x0062CC08 bool CFortress::HasMoreThan3DayAndDelta(void)
0x00740418 bool NpcRenewSubJob(class NpcSocket *, const unsigned char *)
0x00457574 void CIOSocketExclass CIOBufferEx8192 ::__async_AsyncWrite(void *)
0x004A9208 bool BuilderCmd::set_dominion_period(class CSocket*, class User*, wchar_t *)
0x005FF32C void CPartyDuel::ForPlayer(class User*, enum DuelTeamType,class CDuelPlayerOperation &)
0x008A6FDC void User::Delete(void)
0x006FCDC8 void CAttackAction::SetPositionBonus(class CCreature *, class CObject *, double &,double &,double &)
0x00480324 bool BuilderCmd::loadnpcsetting(class CSocket*, class User*, wchar_t *)
0x0083AA20 bool CSkillEffect_i_detect_object::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x00841564 bool CSkillEffect_p_violet_boy::PumpStart(class CCreature &,class CCreature*, const class CSkillInfo *, enum SkillPumpStartType) const
0x006FF024 bool CAttackAction::CheckIsHit(bool,double,double,const class FVector &,const class FVector &,const class FAngle &)
0x004EA518 bool CCastle::IsRelatedFortress(int)
0x007C7284 void CPledge::ViewPledgeMemberInfo(class User*, enum PledgeType,wchar_t *)
0x00843F74 bool CSkillEffect_i_open_common_recipebook::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x00705A40 void CMoveToTargetRelativeAction::ComputeDistance(void)
0x005825A4 void CDB::RequestSetUserNickname(class User *, class User*, const wchar_t *)
0x005BC5BC bool BBSReadArticleThread(class CDBSocket*, const unsigned char *)
0x0089CBC4 void User::AddPoint(int,int,bool)
0x004E920C void CCastle::ChangeTaxRate(void)
0x0071995C bool CNPC::CanEquip(class CItem *)
0x0087D1F0 void CTransformCombatData::SetStat(class std::xvectorint,class std::xallocatorint &)
0x0068CCEC bool CInventory::CheckAddable(int,bool)
0x004669A8 void CBlockUpset::_StartCombat(void)
0x0082FAEC bool CSkillOperateCondition_build_camp::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x0048C428 bool BuilderCmd_setkarma(class CSocket*, class User*, wchar_t *)
0x0053CB9C bool CCreature::AddItemToInventory(struct InventoryParams &)
0x0083EB04 bool CSkillEffect_p_physical_attack_by_hp2::Pump(class CCreature*, const class CSkillInfo*, int)
0x00652BA8 void CHeroSystem::SetHeroPledge(int,int,const wchar_t*, int)
0x0093748C bool RequestRecipeShopItemMake(class CSocket*, const unsigned char *)
0x00719E24 void CNPC::Set(enum ObjectFieldType,__int64)
0x007D831C void CPledge::InitPledge(void)
0x006178B0 class CEventMatch *__cdecl CEventMatchMgr::CreateEventMatch(class CSocket*, int,class FVector,int,int,const wchar_t*, const wchar_t *)
0x0073B3C4 bool NpcLeaveWorld(class NpcSocket*, const unsigned char *)
0x0071C908 bool CNPC::DropItem(class CItem*, __int64,class FVector &,bool)
0x008088F0 unsigned long CSecureINIFile::GetString(const wchar_t*, const wchar_t*, const wchar_t*, wchar_t*, unsigned long)
0x00590B9C void CDB::RequestGetHeroMatchResult(int)
0x00681638 bool CInstantZone::LeaveZoneWithoutTeleport(class User*, class FVector &,bool)
0x00477284 int __cdecl User::GetPremiumLevel(void)
0x00892A5C int __cdecl User::GetSocialClass(unsigned int)
0x0089D0C8 int __cdecl User::GetSocialClass(void)
0x0057AA80 void CCursedWeaponMgr::Add(struct CursedWeaponInfo *)
0x00891C48 int __cdecl User::GetPoint(int)
0x0088E3B0 bool User::IsInFortressSiege(void)
0x0088F1E0 int __cdecl User::GetEquipedHennaCount(void)
0x007C38EC void CPledge::SetMaster(class User *)
0x0069BE5C class CItemConstInfo *__cdecl CItemConstInfoDB::GetItemConstInfo(int)
0x0088EB0C int __cdecl User::GetSocialityFaintByLevel(int,int)
0x0088EA80 int __cdecl User::GetSulffrageCountByLevel(int)
0x00643018 void CGameEventMgr::TimerExpired(int)
0x005A5A28 bool ReplyManipulatePremiumItemsPacket(class CDBSocket*, const unsigned char *)
0x007E2F48 bool CPledgeMemberList::SetAcademyMaster(wchar_t*, wchar_t *)
0x006BD4E8 void NpcPosEventMap::OnNpcSocketClosed(void)
0x007BF290 static bool NotifyCheckOut(CPetitionSocket *socket, const unsigned char *packet)
0x008D8E9C bool User::BaseAttributeCancel(class CItem *)
0x006A6DB4 int __cdecl MsgHelper_ManipulateItem(char*, int,int &,class CItem*, struct InventoryParams &)
0x00554F0C void CCreature::SetSkillLock(int,int,int)
0x008FAA8C void User::PetNameChanged(int)
0x00576478 void SpriteDB::Add(enum SpriteType,class CSprite*, int,int)
0x0040CEB8 void CResidenceDecoDb::AddResidenceDeco(class CResidenceDeco *)
0x0088945C ChcekTradeTimeout()
0x00840D74 bool CSkillEffect_p_reflect_dd::PumpStart(class CCreature &,class CCreature*, const class CSkillInfo *, enum SkillPumpStartType) const
0x007AE0FC void CPet::AutoEquip(void)
0x0069B41C void CItemExpirationManager::CheckExpiredItem(void)
0x00926DB4 bool SekCostume(class CSocket*, const unsigned char *)
0x0084421C bool CSkillOperateCondition_op_fishing_reeling::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x0058FF10 void CDB::RequestReplyMail(class User*, int,class CMailListParameter &)
0x00961F70 bool CWorld::PickAndEquipItemFailed(class CItem *)
0x00620DC8 void CFieldCycleSystem::AddPoint(int,int,int,class CCreature *, class CSocket *)
0x005252D8 void CThreadLocalWorldMap2100000,500000,8::Remove(int,class CObject *)
0x006DEF48 __cdecl CMonRaceHTML::CMonRaceHTML(class CUserSocket *)
0x007B48F0 void CSummon::SendSummonInfo(bool,bool)
0x008616E4 void CStaticObject::OnCreate(void)
0x005DFF48 bool ReplyLoadCastlePacket(class CDBSocket*, const unsigned char *)
0x006BF8DC void CManor::SaveNowSeedInfo(int)
0x0081F030 bool CSkillInfo::PumpEnd(class CCreature &,class CCreature*, enum SkillPumpEndType) const
0x006D2868 void CSmartQueue::ReleaseMonopolizedSemaphore(void)
0x00475E00 void CShopServer::WriteLock(const wchar_t*, int)
0x00821458 void CSkillDB::Load(void)
0x0059258C void CDB::RequestUpdateCursedWeapon(int,double,int,int,int,int)
0x00771F5C void COlympiadTeam::StartGame(void)
0x0045FF34 void CBlockUpset::_ShowWaitingNpcBlock(bool)
0x008FFD0C void `anonymous-namespace::LogUserActionHandlerList(void)
0x005599E4 void CCreature::GatherNeighborCreatureArc(int,int,class std::xvectorclass CSafePointer2class CCreature,class std::xallocatorclass CSafePointer2class CCreature  &,class std::xvectordouble,class std::xallocatordouble &,const struct DamageRangeType &,int,int,enum SkillAffectObjectTypeEnum,class CCreature*, class CCreature*, class FVector,int)
0x007D48B4 void CPledge::OpenAllWindowPacket(class User*, bool,wchar_t *)
0x00903954 bool CUserBookmark::_SaveSlot(class User*, wchar_t*, int,wchar_t *)
0x00781A88 void CParty::AddWindowPacket(class User *)
0x00954840 class CVehicle *__cdecl CVehicle::FindObject(unsigned int)
0x00777934 void COwnThing::Move(class FVector)
0x00419B78 void CAirShip::_EnterWorld(const class FVector &)
0x007C6358 bool CPledge::CanOwnFortress(unsigned int)
0x006C0EEC bool CManor::CheckBuySeed(int,__int64,class User *)
0x0089381C bool User::IsTransformedExceptModeChange(void) const
0x004B9BB4 bool BuilderCmd_disband(class CSocket*, class User*, wchar_t *)
0x0058E9A0 void CDB::RequestChangeSubJob(class User*, int)
0x00852F54 bool CSkillEffect_i_sowing::Instant(class CCreature*, class CObject*, const class CSkillInfo *, class CSkillAction2*, double)
0x0094B5C8 bool HtmlCmdSkillQuestAccept(class CUserSocket*, class User*, const wchar_t*, const wchar_t *)
0x0058D4F8 void CDB::RequestManorMoveCrop(int,int,int,int,int,char *)
0x0089C3A4 void User::SendPCCafePointInfo(int,int,bool,bool)
0x00636298 bool CFortressBuilderCmdHandler::BuilderCmd_ResetOwner(class CSocket *, class User*, wchar_t *)
0x007EAC14 bool CPremiumService::Connect(void)
0x00623FA4 bool CFishingController::SendFishingHPRegenPacket(int)
0x0083F744 bool CSkillEffect_p_pvp_magical_skill_dmg_bonus::Pump(class CCreature*, const class CSkillInfo*, int)
0x007C3820 bool CPledge::CanCreateAlliance(void) const
0x00955204 void CVehicle::StopDrive(void)
0x0079C6E8 unsigned int CPartyRoomInfo::GetPartyRoutingType() const
0x00540B6C void CThreadLocalWorldMap2100000,50000,8::BroadcastToTargettingNeighbor(class CObject*, int,class FVector,int,const char*, ...)
0x00599E9C void CDB::SendSaveItemInfo(class User *) const
0x00768880 bool COlympiadParam::AbleToAddEntry(time_l2_t tSeasonStart)
0x004FEA54 void CCleft::_OnCleftPlayerAdded(class CCleftMemberInfo *)
0x007097A0 bool CMoveToTargetRelativeAction::OnStart(void)
0x006C8CEC bool CManor::ProcureCrop(class User *, int,int,__int64,bool,__int64 &)
0x007E3174 bool CPledgeMemberList::GetMemberInfo(class CPacketHelperEx16384 &,enum PledgeType,wchar_t *)
0x0087E518 bool CTransformDB::Load(void)
0x008EB98C bool User::RequestRecipeShopManageList(int)
0x007FF7BC void CResidence::ShowTerritories(class CCreature &,const enum TerritoryType::Enum)
0x0041EC24 bool CAirShipForRegular::EnterWorld(int,int)
0x0086C33C bool CTerritory::IsInside(class CTerritory &,bool)
0x007597F0 class FVector CWorldObject::ConvRelToAbs(class FVector) const
0x0080E178 class FVector CSetting::GetRandomStartPoint(__int64)
0x0071D2B8 class FVector CNPC::ChoiceValidPosition(const class User*, class CSkillInfo *)
0x0075825C class FVector CWorldObject::ConvAbsToRel(class FVector) const
0x0046091C void CBlockUpset::ShowWaitingNpcBlock(bool)
0x0086DBF4 class FVector CCreaturePosLoggerclass CCreature::LogPosition(class MemoryObject *)
0x0080E490 class FVector CSetting::GetRandomStartPoint(enum ClassType)
0x00860B58 class FVector CStaticObject::GetMeleeAttackPosition(class CCreature *)
0x0050289C void CCommCli::RequestBBSInit(User *pUser, int nParentNodeId, int nLocation, int nPledge, int nSortType, int nPage)
0x0086E904 class FVector CCreaturePosLoggerclass CFishingController::LogPosition(class MemoryObject *)
0x0087C6A0 bool CTransformDB::Load(wchar_t*, int)
0x00813EDC CSharedRWLock::~CSharedRWLock()
0x006F0368 bool CMultiPartyCommandChannel::AddParty(class CParty *)
0x004555F0 void CAuctionAgit::AddAuction2(int,__int64,int)
0x008EF66C bool User::CanPossessHolyThing(class CHolyThing *)
0x0091BB40 bool UserPacketEx::CleftEnter(class CSocket *, const unsigned char *)
0x006E2F6C bool CMonRaceDB::CheckRaceManagerLoc(class FVector)
0x0085F780 void SSQSystem::OnStart(void)
0x008F28BC bool User::BasicAction(enum ServerTriggeredUserAction,bool,bool,enum StopType)
0x00696F50 unsigned int CSmartIdManagerclass CItem,900000,8::RegisterObject(unsigned int,unsigned int,class CItem *)
0x0088E2F8 bool User::HasFortress(void)
0x004347E4 unsigned int CSmartIdManagerclass CAlliance,5000,8::RegisterObject(unsigned int,unsigned int,class CAlliance *)
0x007C7D84 unsigned int CSmartIdManagerclass CPledge,10000,8::RegisterObject(unsigned int,unsigned int,class CPledge *)
0x007CBE44 void CPledge::SystemMessage(int,wchar_t *)
0x00524104 unsigned int CSmartIdManagerclass CCreature,100000,8::RegisterObject(unsigned int,unsigned int,class CCreature *)
0x008DAB8C bool User::HandlePremiumItemManipulation(__int64,class CItem *, __int64)
0x00642EA0 bool CGameEventMgr::EnableNPCList(void)
0x007C450C bool CPledge::HasToGraduateAcademy(enum ClassType,enum ClassType)
0x0047DF00 bool BuilderCmd_combat(class CSocket*, class User*, wchar_t *)
0x005EFFDC void CDominionSiegeEntry::Say(class User*, wchar_t*, enum SayPacketType)
0x006DD1EC void CMiniGameAgit::LoadTopNPledgeFromDB(void)
0x0057D178 bool CCursedWeaponDBHandler::ReplyLoadCursedWeaponList(class CDBSocket*, const unsigned char *)
0x00826FE4 struct SkillEnchantInfo *__cdecl CSkillEnchantDB::GetEnchantedSkill(const class std::xmapint,struct AcquiredSkillInfo,struct std::lessint,class std::xallocatorstruct std::pairint const ,struct AcquiredSkillInfo  &,int,int)
0x00733E80 bool AddOlympiadTradePoint(class NpcSocket*, const unsigned char *)
0x00594754 void CDB::RequestSetEndTime(int,int,int)
0x008961B4 bool User::IsAirShipDriver(void)
0x008EF9A8 void User::DeleteOwnThing(bool)
0x006A55AC bool CItemUseCondition_category::CheckPrivate(class CCreature*, class CItem *)
0x00818AFC void CSiegeAgit::OnStartInBattleField(class User*, class FVector &,bool &)
0x007DFA84 void CPledgeMemberList::ChangeMemberNickName(unsigned int,wchar_t *)
0x007E7DF4 void CPledgeRanking::Insert(unsigned int,int)
0x0080ADCC void CSerializedLookNeighborMessage::OnHandle(class CCreature *)
0x008EEB68 bool User::CanCreatePledge()
0x007AFE38 void CPet::OnValidateLevel(void)
0x0068B110 bool CInventory::IsValidManipulation(class CItem*, __int64)
0x007F18AC void CPVPMatchSystem::CPVPPointTimeBlock::SetEndTime(int,int)
0x00562704 void CCreature::_ValidateSetItemOnUnequipItem(enum SlotType,bool)
0x008513BC bool CSkillOperateCondition_op_sweeper::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x00817F78 int __cdecl CSiegeAgit::GetAttackerCount(void)
0x00962800 void CWorld::IncreaseUserMapDensity(int,int)
0x00522694 void CCrataeCube::SendCurrentRecordForUIToAllUser(int)
0x00838AB8 bool CSkillEffect_i_change_face::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x00826EDC struct SkillEnchantInfo *__cdecl CSkillEnchantDB::GetSkillEnchantInfo(int,int)
0x005E5594 bool ManipulateItemPacket(class CDBSocket*, const unsigned char *)
0x00926804 bool MoveWithDeltaPacket(class CSocket*, const unsigned char *)
0x0091EDC4 bool MoveToLocationInVehiclePacket(class CSocket*, const unsigned char *)
0x0053F9E8 int __cdecl CCreature::_FindFirstUnsharedInstantBuff(void) const
0x00926E7C bool MoveToLocationBackPacket(class CSocket *, const unsigned char *)
0x004839C0 bool BuilderCmd_CreateAuctionBid(class CSocket*, class User*, wchar_t *)
0x00837B40 bool CSkillEffect_i_focus_soul::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x0094E4EC void ParseHTMLParam(const WCHAR* packet, char* format, ...)
0x008CEEDC bool User::OnGetItemPacket(int,__int64)
0x0057B658 void CCursedWeaponMgr::BuilderCmd_Delete(class User*, int)
0x00758140 __cdecl CWorldObject::CWorldObject(const class CWorldObject &)
0x0088F270 void User::SendEquipedHennaListForUnequip(void)
0x006FB5B0 bool CGetItemAction2::OnStart(void)
0x00842B5C bool CSkillEffect_p_crystal_grade_modify::PumpStart(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpStartType) const
0x004A3900 bool BuilderCmd_CanSee2(class CSocket*, class User*, wchar_t *)
0x00447D0C bool AtomicUpdatePVPPoint::Do(void)
0x00881774 void CWorldTrap::OnStepIn(class CCreature &)
0x0060FC24 void CEventController::EstablishEventController(int nEventID, FVector vPos)
0x0088CED0 void User::SetDieWithSpecialResurrection(double,double)
0x004FB30C void CCleft::ChangeState(enum PVPMatchState::Enum)
0x00579AE8 void CCursedWeaponMgr::BuilderCmd_SettingView(class CUserSocket *)
0x007FFC7C void CResidence::DoDecoCheck(unsigned long)
0x004D9048 bool BuilderCmd_invite(class CSocket*, class User*, wchar_t *)
0x008EF020 void User::RenameByDominionSiege(bool,bool)
0x007BD9A4 bool CPetitionCli::ReplyLeftChat(int nPetitionId
0x008B56EC void User::MarkInZoneRestriction(int,int,bool,int)
0x007BB31C bool CPetitionCli::LeftChat(User *pUserGm, WCHAR* pwsTarget)
0x0067AA44 void CInstantZoneCluster::SetGroup(class CInstantZoneGroup *)
0x007B908C bool CPetitionCli::Connect()
0x007B9820 bool CPetitionCli::RequestFeedback(int nLen, char* pBuf)
0x007BAEA0 bool CPetitionCli::CreateThread()
0x007B9A90 bool CPetitionCli::Init()
0x006008E4 void CIndividualDuel::OnPlayerDie(class User*, class CCreature *)
0x006B574C void CHeartEvent::Init(void)
0x0083DC64 bool CSkillEffect_p_set_cloak_slot::Pump(class CCreature*, const class CSkillInfo*, int)
0x00753C3C bool NpcAtomicDelGiveItemParam(class NpcSocket*, const unsigned char *)
0x004CE9D4 bool CObjectMapclass CUserSocket,8191,29,class RWLock::ExistKey(int)
0x004A43D4 bool BuilderCmd::skill_debugger(class CSocket*, class User*, wchar_t *)
0x0082E300 bool CSkillEffectByWeaponType::CheckPumpCondition(class CCreature *)
0x0087F0D4 void CTransformDB::Add(int,enum SexType,class CTransform *)
0x0056DF1C void CCreatureController::ActionBroadcastMoveToTargetInAirShip(const class FVector &,const class FVector &,int,int,unsigned int)
0x00859E90 bool SSQSystem::SendSealInfoTo(class User *)
0x0077094C enum GameRuleType COlympiadEntry::IsRegisteredUser(class User *)
0x005982BC void CJobFinishSignal::SetNoblessLoaded(void)
0x00916100 bool IsValidVariationCancelCandiateItem(class User*, class CItem *)
0x00576950 bool CCubicHandler::OnTick(class CCreature &,class CCubic &,struct CubicActivationInfo &,struct ActivateInfo2 &)
0x007E563C void UnequipCastleItem::ServeInternal(class User *)
0x00696C10 bool CItem::Crystallize(class User*, class CPet*, __int64)
0x008F2DCC bool IsInNoCallPCArea(const class FVector &)
0x0059A944 void CDB::SavePetInfo(class CPet *)
0x00915D10 bool IsValidVariationCandidateItem(class User*, class CItem *)
0x007D2688 void CPledge::SetAlliance(class CAlliance *)
0x006A8A90 bool ItemManip::MakeDBPacket(class CInventory &,char *, int,int &,int &) const
0x006A6D4C bool ItemManip::IsDbId(void) const
0x007EBCB8 bool IBNewItemDeliveredToCharacterNotiPacket(class CPremiumServiceSocket*, const unsigned char *)
0x006A7864 bool ItemManip::MakeDBPacket(char*, int,int &,int &) const
0x006E36D4 bool CMonRaceDB::ChangeRaceStatus(enum MONRACESTATUS)
0x007D121C void CPledge::OpenAllWindowPacket(class User*, bool,wchar_t*, enum PledgeType,class CPacketHelperEx16384 &,bool)
0x008FDF58 bool User::RideForEvent(int,int,int)
0x006BF004 bool CManor::CheckProcureCrop(int,__int64)
0x006220A4 void CFishingController::CalcGuts(void)
0x008B5FF8 void User::ResetAllInZoneRestriction(void)
0x007A9B2C bool CPCCafeEventMgr::GetUserEventEnabled(int)
0x00910E4C bool RequestSetTutorial(class CSocket*, const unsigned char *)
0x008BD650 bool CObjectMapclass User,8191,5,class RWLock::Insert(int,class User*, char*, int)
0x008DF8E8 void User::RecipeStoreBuy(const unsigned char*, class User *)
0x00593C14 void CDB::RequestLoadFortressSiegeRegistry(int)
0x0076AF58 void COlympiadSystem::ConfirmStep(void)
0x006EF49C bool CMultiPartyCommandChannel::RemoveParty(class CParty *)
0x0089139C void User::SendPetitionVote(int*, int,wchar_t*, int)
0x00591354 void CDB::RequestSavePCCafeCount(class User *, int,int)
0x008188C4 void CSiegeAgit::TimerExpired(int)
0x00427760 bool CAirShipManager::GetOnAirShip(class User*, unsigned int)
0x005BA62C bool DBPacketHandler::_ReplyPrepareCastleWar(unsigned int,unsigned int,unsigned int,unsigned int,unsigned int)
0x005C0B80 bool DBPacketHandler::_ReplyWithdrawPet(unsigned int,unsigned int,int,class CPet*, int,int,int,int,int,__int64,double,double,wchar_t *)
0x005C1148 bool DBPacketHandler::_ReplyDepositPet(unsigned int,unsigned int,unsigned int,int)
0x005C595C bool DBPacketHandler::_ReplySetNextCastleSiege(unsigned int,unsigned int,unsigned int,unsigned int,unsigned int)
0x005CE5F0 bool DBPacketHandler::ReplyReloadSkill(class CDBSocket*, const unsigned char *)
0x00421198 void CAirShipForFree::SendTeleportList(class User *)
0x005CF800 bool DBPacketHandler::ReplyWithdrawPet(class CDBSocket*, const unsigned char *)
0x004BB294 void `anonymous-namespace::DelSubPledgeSkill(class CSocket*, wchar_t *, enum PledgeType,int)
0x005CFBA4 bool DBPacketHandler::ReplySetNextCastleSiege(class CDBSocket*, const unsigned char *)
0x005D33CC bool DBPacketHandler::ReplyLoadPetItems(class CDBSocket*, const unsigned char *)
0x00719D6C void CNPC::Suicide(enum DamageTypeEnum)
0x006F7488 void SetMemberMPCC::Work(User *pUser)
0x006FE914 bool CAttackAction::CheckBowCondition(class CCreature*, int,int,bool,class CSharedItemData *)
0x004B5770 bool BuilderCmd::_attack(class User *, class CUserSocket*, class CResidence*, wchar_t *)
0x0097E6B0 void CYearCatchEventMgr::Add(class CYearCatchEventInfo *)
0x0076A624 bool COlympiadUser::OlympiadStatusReset(void)
0x0054B8A4 int __cdecl CCreature::PrepareSpelledInfoChangedBuffer(char*, int &)
0x0052E43C void CCreature::ValidateForceAction(class CObject*, bool &)
0x00521AEC bool CCrataeCube::ReadyMatch(void)
0x0045F5E0 void CBlockUpsetManager::RewardHandler::GiveItem(class User &,struct CBlockUpsetManager::WinLoseSetting &)
0x0065F178 void WriteFriendMailFormHtmlBuilder::BuildHtmlInternal()
0x0064FBEC void CGameInfoPipeline::SetSendable(bool)
0x007EA918 void CPremiumServiceSocket::OnRead(void)
0x0087FFDC void CWorldTrap::OutOfSight(class CObject*, bool)
0x0052E614 bool CCreature::CanUseMoveToTargetAirShip(class CObject*, bool &)
0x00465AF4 bool CBlockUpset::_AddBlockUpsetWaitingPlayer(enum BlueRedTeam::Enum,class User &)
0x008EEC90 User::IsPledgeMaster()
0x0088C1F8 void User::AnnounceSSQStatus(void)
0x00484D4C bool BuilderCmd_Bookmark(class CSocket*, class User*, wchar_t *)
0x0055E784 void CCreature::DeleteAllAcquireSkills(void)
0x006E579C void CMonRaceHTML::MonRaceView20(void)
0x00673288 void WriteFriendMailForm::ExecuteInternal()
0x00691B18 void CRegularAirShipStartMessage::OnReceive(int)
0x006399AC void CFortressSiege::FlagPicked(class User*, class CItem *)
0x00966854 void CWorld::OnGetOnOffAirShip(class CCreature*, class FVector)
0x005E6A94 void CDBSocketOp::ManIntAnn(const unsigned char *packet)
0x006669F8 BOOL CHTMLCache::OpenFile()
0x00965818 void CWorld::ReportDistribution(enum ReportType)
0x00485504 bool BuilderCmd_SubGamePoint(class CSocket*, class User*, wchar_t *)
0x0083E954 bool CSkillEffect_p_critical_rate_by_hp2::Pump(class CCreature*, const class CSkillInfo*, int)
0x00681D8C void CInstantZone::SendRemainTimeMessage(int,int)
0x007461CC bool NpcEnterWorldPacket(class NpcSocket*, const unsigned char *)
0x007AE690 bool CUserRidingInfo::IsSame(enum PetCheckCond,int)
0x004089AC CResidenceDeco::CResidenceDeco()
0x007C560C void CPledge::PledgeLevelUpByNpc(class CNPC *, class User *)
0x0077FE60 void CParty::ClosePetWindowPacket(class CSummon *)
0x007D9A64 bool CPledge::CanSubPledgeSkillAcquire(enum PledgeType,int,int,int &)
0x008F1FAC void User::RemoveOwnThing(void)
0x0073BB1C bool NpcViewSiegeList(class NpcSocket*, const unsigned char *)
0x00634F18 bool CFortressSiegeRegistry::UnregisterPledge(unsigned int)
0x00590FE4 void CDB::RequestSetPledgeAnnounce(unsigned int,unsigned int,int,wchar_t *)
0x008898D4 bool SocialClassNS::IsKnightMaster(class User *)
0x008DFC94 void User::RecipeStoreShowInfo(class User*, int,int)
0x00469220 void CBossRecordRanking::LoadFromDB(void)
0x00629848 void CFishingEventMgr::Init(void)
0x00781020 class User *__cdecl CParty::GetItemWinnerRandomly(class User *, const unsigned int,const int)
0x008F3960 bool IsCallPCEnableArea(class User*, class User*, const class FVector &,enum User::CallPCResult &)
0x00456C98 void CIOSocketExclass CIOBufferEx8192 ::GracefulClose(void)
0x008D5CC4 void User::BeStealedInfectedSkills(class User*, const int,const int,class std::xvectorstruct CCreature::InfectedSkillType,class std::xallocatorstruct CCreature::InfectedSkillType &)
0x0042CF64 void BuilderCmdHelper::GetOnAirShip(class User*, wchar_t *)
0x00598680 void CDB::SaveQuestInfo(class User *) const
0x0081882C bool CSiegeAgit::IsRegisteredForSiege(class CPledge *)
0x0046E2A0 bool CBotChecker::BeginCheck(int,class User *, int)
0x0046F678 int __cdecl CBotReportAgent::GetAvailablePoint(int)
0x0049A4A0 bool BuilderCmd_set_petition_disable_time(class CSocket*, class User *, wchar_t *)
0x0082F544 bool CSkillOperateCondition_op_2h_weapon::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x00717804 void CCreatureController::__async_Skill(struct CExecutionArgumentPad *)
0x0091002C bool IsValidStateOfUser(class User *)
0x006860B4 __cdecl CCenteredSharedRWLock16384::CCenteredSharedRWLock(const wchar_t*, unsigned long)
0x007648AC bool COlympiadField::AsyncUpdateAllPlayers(int)
0x0080F520 void CContainerDB::FreeVehicleContainer(class CContainer *)
0x00751B44 bool NpcJoinTimeAttack(class NpcSocket*, const unsigned char *)
0x0067B840 void CInstantZone::_ClearAreaEventControllerMap(void)
0x00629438 bool CFishingEventMgr::ReplyRegister(const unsigned char *)
0x00767514 void COlympiadField::AsyncChangeObserverField(int,int)
0x004CC4C4 bool BuilderCmd_DeleteBuff(class CSocket*, class User*, wchar_t *)
0x007F2590 bool CPVPMatch::CheckDistanceWithNpc(class User &)
0x0052A728 void CCreature::LeaveWorld(void)
0x0090F904 bool RequestViewFishingEventRanking(class CSocket*, const unsigned char *)
0x005AA858 bool ReplySaveBotReportPacket(class CDBSocket*, const unsigned char *)
0x004DA8F0 bool BuilderCmd_join2(class CSocket *, class User*, wchar_t *)
0x007F7D7C void QuestionAnswer::SetRequest(const struct Query &,const struct Query &)
0x006EB6E8 bool CMonRacePacket::DoReply(const unsigned char *)
0x007285C0 unsigned int CUniqNPCDB::GetUniqNPCSID(int,int)
0x00594284 void CDB::RequestSaveFortressSiegeRegisterPledge(int,int)
0x009241A4 void CUserSocket::ReportOrt(char *caller, int line, int nWorkType)
0x005ABF30 bool CObjectMapclass CPledgeCrest,1,5,class RWLock::DeleteObject(int,char*, int)
0x004EF634 void CCastle::EndSiege(void)
0x0041C3B8 void BuilderCmdHelper::Teleport(class User*, wchar_t *)
0x00638048 void CFortressSiege::PushFlagItem(class CItem*, const class FVector &)
0x00902444 bool CUserBookmark::CanAddSlot(int)
0x0080131C void CResidence::CheckAttendedAuction(int)
0x005FA290 void CDoorDB::StartDoorTimer(void)
0x00783B4C unsigned int CParty::Oust(class User &,wchar_t *)
0x00830558 bool CSkillOperateCondition_consume_body::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x0072CBE0 void CTeamBattleAgit::OnBossNpcDead(CNPC *pNpc)
0x0044130C void AtomicDeleteAcquireSkills::Dump(void)
0x004AA720 bool BuilderCmd::register_dominion_builder(class CSocket*, class User*, wchar_t *)
0x0043BECC void AtomicJob::Destroy(void)
0x005F518C void CDominionManager::StartRegistration(void)
0x007C9A58 void CPledge::TakeOustPenalty(void)
0x004ACC44 bool BuilderCmd::skill_test(class CSocket*, class User*, wchar_t *)
0x007D4090 bool CObjectMapclass CPledge,1,5,class RWLock::Insert(int,class CPledge*, char*, int)
0x00736E7C bool NpcAbsoluteReturn(class NpcSocket*, const unsigned char *)
0x0094543C bool HtmlCmdBuy(class CUserSocket*, class User*, const wchar_t*, const wchar_t *)
0x00535514 void CTLPipeBasestruct CTL_WorldMapNode2,500000,8::Read(class CTLPipeBasestruct CTL_WorldMapNode2,500000,8::CReadCallback *)
0x005FB46C void CDoppelganger::ReportOrt(char *caller, int line, int nWorkType)
0x0061643C void CEventMatch::SetObserver(class CSocket *, class User*, int)
0x0080993C void CSerializedOnInfectedSkillByMessage::OnHandle(class CCreature *)
0x0056F15C void CCreatureController::ActionBroadcastEarthQuake(class FVector,int,int)
0x00586894 void CDB::RequestBBSReadComment(class User*, int,int,int,int,int,int,wchar_t *, int,int)
0x008CEBBC bool User::OnAppearingPacket(void)
0x00578EC0 int __cdecl CCursedWeaponMgr::GetOriginalPKCount(int)
0x00578D54 int __cdecl CCursedWeaponMgr::GetWeaponLevel(int)
0x00603900 void CDuelPlayerInfo::GetOrgInfectedSkills(class CCreature *)
0x004F2DD4 void CCastle::AdjustSiegeTime(void)
0x0055EE8C int __cdecl CCreature::TriggerSkillByDamage(class CCreature &,double)
0x0055C3AC int __cdecl CCreature::LevelUp(unsigned int)
0x0044F044 __int64 CAuction::GetBiddingPrice(int)
0x00686A04 __int64 CInventory::GetArrowCountByCrystal(enum CrystalType)
0x005610C0 int __cdecl CCreature::LevelDown(unsigned int)
0x0055F9E0 int __cdecl CCreature::TriggerSkillByAvoid(class CCreature &)
0x00578238 int __cdecl CCursedWeaponConstInfo::AssembleCursedWeaponList(char*, int,int *)
0x0047D8C8 bool BuilderCmd_enable_client_event(class CSocket*, class User*, wchar_t *)
0x00755968 bool NpcCheckRegisterUser(class NpcSocket*, const unsigned char *)
0x0046DE88 void CBotChecker::SetData(int,int)
0x005710E4 void CCreatureController::DoPendingAction(int,bool)
0x008623C8 CStatusWnd::CStatusWnd(void)
0x0052D0E0 bool CCreature::ValidateMPRegen(void)
0x00769A0C wchar_t *__cdecl COlympiadTeam::GetPartyMasterName(void)
0x006FFD58 void CAttackAction::OnHitTarget(int,bool,bool)
0x0048D9A0 bool BuilderCmd_settax(class CSocket*, class User*, wchar_t *)
0x004673F0 bool CBlockUpset::_CheckStartBlockUpsetCombat(const int)
0x004CE580 bool BuilderCmd_SetBuilderCmdLevel(class CSocket*, class User*, wchar_t *)
0x004846AC void `anonymous-namespace::ShowCanSee(class User*, const class FVector &,const class FVector &)
0x004CD394 bool BuilderCmd_party_stop(class CSocket*, class User*, wchar_t *)
0x0088065C class User *__cdecl CPCTrap::GetUserOrMaster(void)
0x0070FCFC bool CSkillAction2::CanStartSkillAction(void)
0x00858FFC __cdecl CSocket::CSocket(unsigned __int64,int)
0x0073755C bool NpcSetRimPoint(class NpcSocket *, const unsigned char *)
0x006A9FDC static void Report()
0x00612CA0 void CEventMatch::ChangeRelation(int)
0x0093C9E4 bool ReplyGameGuardInfo(class CSocket*, const unsigned char *)
0x005975E8 void CDB::RequestLoadAirShip(void)
0x0048EB4C bool BuilderCmd_setannounce(class CSocket*, class User*, wchar_t *)
0x004E2778 void LoadBuilderCmdHandler(void)
0x0069F9D4 void LoadArmorEnchantBonus(void)
0x006A5964 bool CItemUseCondition_inzone_num::CheckPrivate(class CCreature*, class CItem *)
0x008F8080 void User::GetSkillsFromItem(class CItem &,class std::xmapint,class CSkillInfo const*, struct std::lessint,class std::xallocatorstruct std::pairint const ,class CSkillInfo const*  &,enum User::CheckCrystalType)
0x0044451C bool AtomicEvolvePetWithSameExp::Do(void)
0x004BD2E0 bool BuilderCmd::add_residence_skill(class CSocket*, class User*, wchar_t *)
0x0073D10C bool NpcQueryTeamBattleNpc(class NpcSocket*, const unsigned char *)
0x007F5C88 bool CPVPMatchSystem::ReadyMatch(unsigned int)
0x0043E930 AtomicDropItem2::Disassemble(const unsigned char *packet)
0x00485A1C void CTLPipeBasestruct CTL_WorldMapNode2,20000,8::CThreadPipe::Read(class CTLPipeBasestruct CTL_WorldMapNode2,20000,8::CReadCallback *)
0x008C5320 bool User::OnEnterWorldPacket(class CUserSocket*, const unsigned char *)
0x005228A0 void CCrataeCube::SendCurrentRecordForUIToOneUser(unsigned int,int)
0x008924F8 int __cdecl User::GetBossRecordRound(void)
0x008FFCA8 int __cdecl `anonymous-namespace::GetUserActionHandlerListSize(void)
0x004F1B40 void CCastle::SendCastleSiegeInfo(class CUserSocket*, class User *)
0x0083567C bool CSkillEffect_i_focus_max_energy::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x00903018 void CUserBookmark::SendList(class User *)
0x00734C04 bool NpcSetParam(class NpcSocket*, const unsigned char *)
0x00537EBC bool CCreature::CheckRelationWithCaster(class CCreature*, class CCreature*, enum SkillAffectObjectTypeEnum,bool)
0x00607DA0 void CNewbieCheck::DoServerJob(void)
0x005981E4 void CJobFinishSignal::SetWarLoaded(void)
0x0062C350 void CFortressNpcMakerEventHandler::Send(int,int,int,int,const wchar_t *)
0x00608C50 void DxDepositSevenSignQuestItemEx::DoServerJob(void)
0x0060543C void DxChangeSSQPeriod::DoServerJob(void)
0x00608914 void DxDeleteDepositedSevenSignQuestItem::DoServerJob(void)
0x006094C4 void DxDismissSevenSignMember::DoServerJob(void)
0x005FC638 void Duel_SetDuelInfo::Operate(class User*, class CDuelPlayerInfo *)
0x005FC6D0 void Duel_ResetDuelInfo::Operate(class User *, class CDuelPlayerInfo *)
0x005FC4E4 void Duel_SetParamChanged::Operate(class User*, class CDuelPlayerInfo *)
0x005FC5BC void Duel_SetRelationChanged::Operate(class User*, class CDuelPlayerInfo *)
0x0065369C void CHeroSystem::SetHeroWords(class User*, const wchar_t *)
0x005FC760 void Duel_Send::Operate(class User*, class CDuelPlayerInfo *)
0x005FC828 void Duel_PlayMusic::Operate(class User*, class CDuelPlayerInfo *)
0x005DF1B8 bool AdminToolAnnouncePacket(class CDBSocket*, const unsigned char *)
0x00841FD4 bool CSkillEffect_p_change_fishing_mastery::Pump(class CCreature*, const class CSkillInfo*, int)
0x008E2178 void User::SendItemList(bool,bool,class CUserSocket *)
0x0088B294 bool `anonymous-namespace::IsInfectedSkillMatched(struct CCreature::InfectedSkillType &,int)
0x0088EBB8 int __cdecl User::GetRemainSulffrageCount(void)
0x007F622C void CPVPMatchSystem::EndMatch(unsigned int)
0x0043DDA0 const unsigned char *__cdecl AtomicResetResidenceDeco::Disassemble(const unsigned char *)
0x00593514 void CDB::LoadItemDuration(class User *)
0x0055E87C bool CCreature::DeleteAcquireSkill(int)
0x0048CC10 bool BuilderCmd_dropitemeach(class CSocket*, class User*, wchar_t *)
0x005452BC void CCreature::ChangeMoveType(enum MoveType)
0x00453AC0 int __cdecl CAuctionAgit::GetAuctionCount(void)
0x00436E18 void CUserSocket::SendSystemMessage_d(unsigned int,int)
0x00600E14 void CIndividualDuel::SaveDuelRecord(void)
0x005A8DF8 bool ReplyReorganizePledgeMember(class CDBSocket*, const unsigned char *)
0x00914444 bool ReplyOustFromMPCCRoom(class CSocket*, const unsigned char *)
0x00855E14 bool CSkillEffect_p_trigger_skill_by_attack::PumpStart(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpStartType) const
0x00892754 int __cdecl User::GetTotalBossPoint(void)
0x007E0AB4 unsigned int CPledgeMemberList::GetCharDbId(wchar_t *)
0x0079C250 int CPartyRoomInfo::GetNextRoomId()
0x006A583C bool CItemUseCondition_race::CheckPrivate(class CCreature*, class CItem *)
0x008B3DEC int __cdecl User::GetBlockList(char *)
0x00814AB0 int __cdecl SharedPlatformInfo::AddPlatform(int,int)
0x004AA374 bool BuilderCmd::dominion_list(class CSocket*, class User*, wchar_t *)
0x0077CBD0 unsigned int CSmartIdManagerclass CParty,10000,8::RegisterObject(unsigned int,unsigned int,class CParty *)
0x0088CCF8 int __cdecl User::CalcKarma(int,int)
0x0077702C bool COwnThing::IsEnemyTo(class CCreature *)
0x007C6FBC unsigned int CPledge::SetPledgePowerGrade(wchar_t*, int)
0x007C75C4 unsigned int CPledge::GetCandidateMasterDbId(wchar_t *)
0x007DF1B8 unsigned int CPledgeMemberList::GetAcademyMasterDbId(unsigned int)
0x00921884 bool CUserSocket::RequestUserCommand(class CSocket*, const unsigned char *)
0x004141C0 void CAgitHTML::AgitBidInfo(int)
0x00576D40 long CCursedWeapon::RecalcExpiredDateAfterDrop(void)
0x006EE214 int __cdecl CMultiPartyCommandChannel::GetMemberCount(void)
0x00500FB4 bool CCleft::EnterCleftPlayer(class User &)
0x0058EF7C void CDB::RequestLoadSubJob(class User *)
0x0083B5D0 bool CSkillEffect_p_transform::PumpEnd(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpEndType) const
0x00497F30 bool BuilderCmd_set_door_status2(class CSocket*, class User*, wchar_t *)
0x0078A284 class CSPointerclass CPartyRoom CPartyMatchingRequest::JoinRoomInternal(class CSPointerclass User,int,class CPartyRoomListFilter &)
0x00617CB0 class CSPointerclass CEventMatch CEventMatchUser::GetEventMatch(void)
0x007EF770 void CPremiumService::RequestSubGamePoint(int,__int64)
0x00592A0C void CDB::RequestSaveSubPledgeSkill(unsigned int,enum PledgeType,unsigned int,int)
0x0079CAF0 class CSPointerclass CMultiPartyCommandChannel CMPCCRoomInfo::GetMPCC(void) const
0x00653CC8 int __cdecl CHeroInfo::GetAchievements(int,int,struct AchievementsInfo *)
0x007CBD3C void CPledge::SystemMessage(int,wchar_t*, int)
0x00856600 bool CSkillEffect_p_trigger_skill_by_skill::PumpEnd(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpEndType) const
0x0043C480 int __cdecl AtomicBuyLottoTicket::Assemble(char*, int)
0x0062BB94 void CFortress::UpdatePledgeNameValue(class CPledge*, enum FortressPledgeNameValueChange)
0x007FC44C void CResidence::InstallTeleport(int,int)
0x0043C660 int __cdecl AtomicEvolvePet::Assemble(char*, int)
0x0091089C bool RequestChangeCharName(class CSocket*, const unsigned char *)
0x006CEBBC __int64 CMarketPriceList::GetMarketPrice(class CItem *)
0x004815F0 bool BuilderCmd_LoadPCCafeCouponEventSetting(class CSocket*, class User*, wchar_t *)
0x008868F0 void CUCRecordBoard::UserDie(class User*, class User *)
0x0043C8D8 int __cdecl AtomicEvolvePetWithSameExp::Assemble(char*, int)
0x004E2EB4 bool BuilderCmd_setarea_all(class CSocket*, class User*, wchar_t *)
0x006BFC9C __int64 CManor::CalcCropToAdena(void)
0x004357B0 void CAlliance::Say(class User*, wchar_t *)
0x006BFAA0 __int64 CManor::CalcRemainSeedToAdena(void)
0x00672FDC void WritePledgeMailForm::ExecuteInternal()
0x00670FC8 void WritePledgeAnnounce::ExecuteInternal()
0x00670D70 void WritePledgeAnnounceForm::ExecuteInternal()
0x0066D364 void WritePledgeAnnounce::ParseParameter()
0x0066D2AC void WritePledgeAnnounceForm::ParseParameter()
0x007ADC4C __int64 CPet::ExpInc(__int64,bool)
0x0065B72C void WritePledgeMailFormHtmlBuilder::BuildHtmlInternal()
0x0042515C class CAirport *__cdecl CAirShipManager::GetAirport(int)
0x008650E8 int __cdecl CTeamBattleAgit::AddEntryPledge(unsigned int,long,enum TEAM_BATTLE_COLOR,int)
0x0043CF70 int __cdecl AtomicResetPetName::Assemble(char*, int)
0x004ECF34 void CCastle::SetAllCastleSiegeToPledges(void)
0x006D5008 enum CMiniGameAgitStatus::state CMiniGameAgitStatus::CalcState(void)
0x0087DDD0 void CTransformCombatData::SetMDefend(class std::xvectordouble,class std::xallocatordouble &)
0x00588FFC void CDB::IncreaseUserKarma_KillSummon(int)
0x0066C1D8 void ReplyMailForm::ParseParameter()
0x0065DD74 void ReplyMailFormHtmlBuilder::Build1002Packet()
0x0065E92C void ReplyMailFormHtmlBuilder::BuildHtmlInternal()
0x0065BF84 void ReplyMailFormHtmlBuilder::Build1001Packet()
0x0062FEC0 void CFortress::PayFortressRent(void)
0x0088E188 bool User::HasAgit(void)
0x00905678 void CUserBookmarkHandler::DeleteSlot(class User*, const unsigned char *)
0x0076BF88 void COlympiadUser::EscapeFromOlympiad(void)
0x0043D9A8 int __cdecl AtomicPledgeLevelUp::Assemble(char*, int)
0x006414D0 bool CGameEventMgr::CheckAndDropItem(class CNPC*, const int,bool)
0x008A4E8C bool User::IsNowTrade(void)
0x00891E68 bool User::CheckPointAddable(int,int)
0x0083FDD8 bool CSkillEffect_p_skill_critical::Pump(class CCreature*, const class CSkillInfo*, int)
0x005B8E18 bool ReplyUpdateUserPledge(class CDBSocket*, const unsigned char *)
0x008A67AC bool User::Transform(int,bool)
0x007337C4 bool NpcLookItems(class NpcSocket*, const unsigned char *)
0x008F011C void User::UninstallAdvancedBattleCamp(void)
0x008FC6CC class CSummon *__cdecl User::GetSummonOrPet(void)
0x00460A24 void CBlockUpsetManager::ShowWaitingNpcBlock(bool)
0x00596D08 void CDB::RequestSetBotAdmin(class User *)
0x007105C4 bool CSkillAction2::CanUseBadSkill(class CCreature *)
0x009645D8 void CExecutionSerializerclass CWorld,4194304::AddExecutable(class MemoryObject*, void (__cdecl MemoryObject::* )(struct CExecutionArgumentPad *),class CExecutionArgument *, const wchar_t *)
0x00423210 class CAirportTeleport *__cdecl CAirportForFree::GetTeleport(int)
0x00966CE4 bool CWorld::OnAppearingIntoAirShip(class CAirShip*, class User *)
0x004B43F4 bool BuilderCmd_escape(class CSocket*, class User*, wchar_t *)
0x00439624 void CAreaDB::StartAreaTimer(void)
0x004234B0 class CAirportPlatform *__cdecl CAirportForFree::GetPlatform(int)
0x008093E8 void CSecureINIFile::RemoveAllSections(void)
0x0041D634 void CAirShipForFree::OnCreate(unsigned int,unsigned int,int)
0x00630A08 void CFortress::HandleGoIndependent(class User*, class CNPC *)
0x0065A59C void ReadMailHtmlBuilder::SendHtml()
0x0065D624 void ReadMailHtmlBuilder::Build2Packet()
0x00664BB0 void ReadMailHtmlBuilder::BuildHtmlInternal()
0x006BFBF8 __int64 CManor::CalcRemainCropToAdena(void)
0x0076D0EC void COlympiadTeam::EscapeFromOlympiad(void)
0x005EEA1C void CDominionManager::Add(class CDominion *)
0x0084D1A8 bool CSkillEffect_c_fake_death::Consume(class CObject*, double)
0x008EEF08 bool User::DeclareLord(void)
0x008DBE14 bool User::UnequipItem(enum SlotType)
0x005862BC void CDB::RequestSetNextCastleSiege(class User*, class CCastle*, int)
0x004937F4 bool BuilderCmd_view_enemy_list2(class CSocket*, class User*, wchar_t *)
0x004C2568 bool BuilderCmd_setquest(class CSocket*, class User*, wchar_t *)
0x006BF6CC __int64 CManor::GetCommissionForProcureCrop(int,__int64)
0x0097EE38 void CZzoldagu::ReportOrt(char *caller, int line, int nWorkType)
0x007F9E00 bool CRecipeInfo::RecipeShopMake(class User *, class User*, __int64)
0x008271BC bool SkillEnchantOperator::CheckRequestEnchantSkill(class User*, int,int,struct SkillEnchantInfo *&)
0x00900B7C class CSummon *__cdecl PetSummonActionHelper::CheckSummon(class User *)
0x008FC5B4 class CSummon *__cdecl User::GetSummon(void)
0x004A2CF8 bool BuilderCmd_CreateAuction(class CSocket *, class User*, wchar_t *)
0x00605CDC void DxStartQuickCycle::DoServerJob(void)
0x005A444C bool ReplyLoadInZoneRestriction(class CDBSocket*, const unsigned char *)
0x00494C58 bool BuilderCmd_SetStaticMeshStatus(class CSocket*, class User*, wchar_t *)
0x007196F4 __cdecl CNPC::~CNPC(void)
0x007AC478 void CSummon::CheckSummonBattleTimeStamp(void)
0x0083534C bool CSkillEffect_i_randomize_hate::Instant(class CCreature*, class CObject*, const class CSkillInfo *, class CSkillAction2*, double)
0x007F08BC void CPremiumService::RequestDeleteItem(__int64)
0x00895EE0 bool User::CanGetBirthdayGift(struct _SYSTEMTIME *)
0x006A0D58 void CArmor_ORT::ReportOrt(char *caller, int line, int nWorkType)
0x007D693C void CPledge::SendViewPledgeWarList(class CUserSocket*, unsigned int,int)
0x007BF000 static bool ToSendPacketError(CPetitionSocket *socket, const unsigned char *packet)
0x00678810 bool CInstantZoneEntranceCondition_check_quest::CanEnter(class CObject*, const class CInstantZone*, bool)
0x00657B0C bool CHolyThing::AddPossessingMaster(class User *)
0x007F966C bool CRecipeInfo::MakeMaterialPacket(class CPacketHelperEx16384 &,class User *)
0x0080A12C void CSerializedActivateSkillEffectsMessage::Clear(void)
0x005DF3A0 bool ReplySendSystemMessage(class CDBSocket *, const unsigned char *)
0x0066B79C void WritePledgeMailForm::ParseParameter()
0x0094B2F0 bool HtmlCmdQuestChoice(class CUserSocket*, class User*, const wchar_t*, const wchar_t *)
0x004499D8 bool NRMemoControl::Do(void)
0x0081DBA8 enum AbnormalStatusSlotType __cdecl GetAbnormalStatusSlotTypeByName(wchar_t *)
0x00609D30 bool DxCancelWar::CancelWar(void)
0x007AF918 __int64 CPet::SetExp(__int64)
0x005A9ED0 bool ReplyLoadLastColorPacket(class CDBSocket*, const unsigned char *)
0x006099E4 bool DxDeclareWar::DeclareWar(void)
0x005207E0 void CCCRecordBoard::SendCurrentRecordForSystemMessage(class User *)
0x006BD948 void DoorEventMap::SetEvent(class CDoor*, int)
0x007C6138 bool CPledge::ChangeMemberName(unsigned int,wchar_t *)
0x0072F2DC bool NpcAreaSetOnOff(class NpcSocket*, const unsigned char *)
0x007E72DC bool CPledgeRanking::IsInRanking(unsigned int)
0x006D517C NONE
0x0056AE48 bool CCreature::_InfectedSkillBy(class CCreature*, const class CSkillInfo*, const class CSkillInfo*, double,int,bool &)
0x00659B60 CUserSocket *CHtmlBuilder::GetUserSocket(int userServerId)
0x0095ADDC void CWareHouseDeposit::SendList(enum WareHouseClass)
0x005FD528 void CPartyDuelPlayerInfo::SetReturnPos(class FVector &)
0x004254D8 void CAirShip::OnStartRotating(int,int)
0x0058A88C void CDB::RequestMngComment(int,class User*, wchar_t *, int,wchar_t *)
0x0087F950 void CTrap::OnInteracted(class CCreature*, enum TrapInteractType)
0x0044D1DC class CNPC *__cdecl CAuction::GetAuctionNPC(void)
0x0045F340 void CBlockUpset::OnCombatStart::Do(class CBlockUpsetMemberInfo &)
0x00766DAC void COlympiadField::PlayerDied(class User *)
0x00881AEC bool CWorldTrapDB::AddTrapInfo(class CWorldTrapInfo *)
0x0073735C bool NpcSaveGetbirthdayGiftTime(class NpcSocket*, const unsigned char *)
0x00721EB8 bool CNPC::GetOnAirShip(class CAirShip *)
0x0072FC7C bool NpcDominionScriptEvent(class NpcSocket *, const unsigned char *)
0x0089D1A0 bool User::CheckDuelCancelCondition(int &,bool)
0x008B4864 bool User::IsInBlockList(int)
0x0062D688 void CFortress::AddInfoLog(void)
0x006AD910 void CThreadLocalWorldMap21000,3000,8::CTL_Map2::Insert(short,short,char,int,class CObject *)
0x005B3748 bool ReplyQueryPacket(class CDBSocket*, const unsigned char *)
0x006B4380 bool CL2Time::IsManorSettingEnableTime(void)
0x0062AF18 bool CFishingEventMgr::RequestGivePrize(class User *)
0x004E16DC bool BuilderCmd_SendInspector(class CSocket *, class User*, wchar_t *)
0x0066C130 void ReplyMailForm::ExecuteInternal()
0x00448044 bool AtomicManipulatePVPPointWithItem::CanDo(void)
0x005980FC void CJobFinishSignal::SetDominionLoaded(void)
0x00584698 void CDB::LoadSelectedCharacter(int,class CUserSocket*, short,int,int,int)
0x0061010C void CEventMatch::Appear(void)
0x0073715C bool NpcSaveGet5YearGiftTime(class NpcSocket*, const unsigned char *)
0x005FC998 void Duel_StopAction::Operate(class User*, class CDuelPlayerInfo *)
0x00730C74 class CSocket *__cdecl NpcSocket::Allocate(unsigned __int64)
0x005AB220 bool ReplyLoad5YearInfo(class CDBSocket*, const unsigned char *)
0x00830670 bool CSkillOperateCondition_energy_saved::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x00464DE4 bool CBlockUpsetManager::AddBlockUpsetNpc(int,int)
0x004475A0 bool AtomicCreateMPCC::Do(void)
0x00706730 bool CMoveToTargetWaitAction::Set(CSmartID spActor, CSmartID spTarget, int acceptableDist)
0x006523B4 void CHeroSystem::SetHeroType(int,int)
0x0065C3CC void ReplyMailFormHtmlBuilder::SendHtml()
0x00447E04 bool AtomicUpdatePVPPoint::CanDo(void)
0x008847D0 void CUCRecordBoard::Init(void)
0x00976068 bool CWorld::TryPickItem(class CItem*, class CCreature *)
0x00422E5C void CAirport::AddGetOffInfo(class CAirportPlatform*, class FVector &,int,int)
0x00916F8C bool ClickVariationCancelButtonPacket(class CSocket*, const unsigned char *)
0x0073C43C bool CloseTutorialHTML(class NpcSocket*, const unsigned char *)
0x0058FDA4 void CDB::RequestSaveMail(class User*, int,int,wchar_t*, wchar_t*, wchar_t*, class CMailListParameter &)
0x00796F00 void CPartyMatchingWaitingRoomListFilter::InitLevelLimits(int,int)
0x0063A050 void CFortress::SiegeEnd(struct FortressSiegeResult)
0x00595250 void CDB::RequestWaitingTransferPledgeMaster(unsigned int)
0x0080C9E8 void CSetting::PostProcessRestartPointGroup(void)
0x00592FF4 void CDB::RequestLoadTransferredPledgeMaster(void)
0x0084321C bool CSkillEffect_t_mp::Tick(class CObject*, double,unsigned int)
0x005627FC bool CCreature::UnequipItem(enum SlotType)
0x0065275C void CHeroSystem::RequestReloadAllHeroesToCacheD(void)
0x00577358 bool CCursedWeaponGenerator::TestGenEnable(void)
0x0062B674 bool NFontCheck::CheckCode(int nCode)
0x00674334 void CHtmlSender::SendHtml(std::xwstring &html)
0x008B4DEC void User::SetSocailityData(struct _SYSTEMTIME*, int,int)
0x007A5ECC double CPCParamDB::GetRegenMoveModeBonus(MoveModeEnum eMoveMode)
0x004342DC void CAlliance::CreateAllianceByNpc(class CNPC*, class User*, const wchar_t *)
0x0076C5DC void COlympiadTeam::SendSystemMessage(int)
0x00900DEC bool CBasicActionHandler_PET_ACTION::Handle(class User*, int,bool,bool,int)
0x009007E4 bool CBasicActionHandler_MAKE_ITEM::Handle(class User*, int,bool,bool,int)
0x0086ADBC void CTeamBattleFlag::SendTeamBattleFlagInfo(class CUserSocket *)
0x007FC3D0 void CResidence::InstallMpFlame(int,int)
0x007D9628 void CPledge::_SendPledgeSkillListThatCanBeAcquiredBy(class User*, bool,bool)
0x007CA654 void CPledge::AddSubPledgeTypeBits(enum PledgeType)
0x0044D07C void CAuction::SetAuctionStatus(const enum AuctionStatus)
0x0072C4E4 CNpcBattleAgit::CNpcBattleAgit()
0x007DDCE4 void CPledgeMember::Update(class CPledgeMember &)
0x005BC0C4 bool BBSReadArticle(class CDBSocket *, const unsigned char *)
0x006A50A4 bool CItemEquipCondition_fortress::CheckPrivate(class CCreature*, class CItem *)
0x00892238 bool User::CanGetPVPPoint(void)
0x007E0E1C bool CPledgeMemberList::CheckValidMasterCandidate(wchar_t *)
0x00757B20 void CObject::Set(enum ObjectFieldType,wchar_t *)
0x00589FA4 void CDB::RequestCreateAgitBid(class User*, int,int,int,__int64)
0x006A6314 bool CItemEquipCondition_inzone_num::CheckPrivate(class CCreature*, class CItem *)
0x008ADB94 bool User::GetOffAirShip(class CAirShip*, class FVector)
0x00508FFC void CIOSocketExclass CIOBufferEx16384 ::OnCreate(void)
0x00880E68 void CTrap::OnActivate(class CCreature *)
0x008405AC bool CSkillEffect_p_cp_regen::Pump(class CCreature*, const class CSkillInfo*, int)
0x0081105C bool CContainer::PopStaticObject(class CStaticObject *)
0x005BCFB4 bool BBSWriteForm(class CDBSocket*, const unsigned char *)
0x0043D038 const unsigned char *__cdecl AtomicResetPetName::Disassemble(const unsigned char *)
0x00481528 bool BuilderCmd_request_fish_prize(class CSocket*, class User*, wchar_t *)
0x00641F3C void CGameEventMgr::ShowEventSetting(class User *)
0x00843CBC bool CSkillOperateCondition_can_summon_pet::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x007CE794 void CPledge::UpdatePledgeMemberListPacket(unsigned int)
0x008B41A4 void User::SendBlockList(void)
0x00581278 void CDB::RequestSetShortCut(class User*, int,int,int,int,int) const
0x009020AC void CUserBookmarkHandler::ChangeSlot(class User*, const unsigned char *)
0x00840128 bool CSkillEffect_p_resist_abnormal_by_category::Pump(class CCreature*, const class CSkillInfo*, int)
0x00590E04 void CDB::RequestGetPledgeAnnounce(class User*, unsigned int,int)
0x00770058 __cdecl COlympiadEntry::COlympiadEntry(void)
0x006FC1E0 void CCreatureController::AddTimer2(int)
0x0054B698 int __cdecl CCreature::ToggleSkillAllOff(bool)
0x005502D8 int __cdecl CCreature::GetAcquiredSkillLevel(int)
0x00536590 int __cdecl CCreature::EquipedArmorsMpBonus(void) const
0x0053A14C int __cdecl CCreature::GetWeaponGradePenalty(void) const
0x00523030 int __cdecl CCrataeCube::GetRankUserPVPMatch(unsigned int)
0x0052ED4C int __cdecl CCreature::CalcReuseDelay(class CSkillInfo &)
0x00520AB4 int __cdecl CCCRecordBoard::MakeCurrentRecordPacket(char*, int,int)
0x00520F64 int __cdecl CCrataeCube::RegisterUser(unsigned int)
0x00463184 bool CBlockUpset::IsBlockUpsetCombatPlayer(int)
0x00595608 void CDB::SaveGetBirthdayGiftTime(unsigned int,struct _SYSTEMTIME *)
0x00550528 int __cdecl CCreature::GetSkillLevel(int)
0x005506A0 int __cdecl CCreature::SetSkillReuseDelay(class CSkillInfo &)
0x00612A08 void CEventMatch::ClearTeam(int)
0x00783A14 void CParty::Dismiss(bool)
0x00495F8C bool BuilderCmd_set_door_hp(class CSocket*, class User*, wchar_t *)
0x004BA19C bool BuilderCmd_join(class CSocket*, class User*, wchar_t *)
0x007C4454 void CPledge::GraduateAcademy(class User *)
0x007CE518 void CPledge::ActivatePledgeSkill(class User*, bool)
0x008BD468 bool CObjectMapclass CUserSocket,8191,30,class RWLock::Insert(int,class CUserSocket*, char*, int)
0x00584C80 void CDB::RequestGetPledgeEmblem(class User *, unsigned int)
0x0057237C void CCreatureController::__async_MoveRelatively(struct CExecutionArgumentPad *)
0x00577EFC void CCursedWeaponConstInfo::BuilderCmd_SettingView(class CUserSocket *)
0x0045E400 int __cdecl CBlockUpset::GetRelation(class User &,class User &)
0x00528560 CCreature::~CCreature()
0x0049D7C8 bool BuilderCmd_set_birthday(class CSocket*, class User*, wchar_t *)
0x005DA1D0 bool TeleportCharPacket(class CDBSocket*, const unsigned char *)
0x005927E4 void CDB::RequestLoadPledgeRanking(void)
0x008DEA9C bool User::HaveRecipe(int)
0x00943A44 bool HtmlCmdMonsterRace(class CUserSocket*, class User*, const wchar_t*, const wchar_t *)
0x0091CCD0 bool WithdrawPartyPacket(class CSocket*, const unsigned char *)
0x009196EC bool UserPacketEx::RequestDominionInfo(class CSocket *, const unsigned char *)
0x005D30A4 bool PartyTelBookMarkPacket(class CDBSocket *, const unsigned char *)
0x00818210 void CSiegeAgit::StartSiege(void)
0x00535210 void CCreature::AttackTestBySec(class CCreature &,int,class User &)
0x00580F60 void CDB::RequestWithdrawWareHouseItems(unsigned int,class User*, int,int,int,int,char *) const
0x0090FAD4 bool RequestCursedWeaponList(class CSocket*, const unsigned char *)
0x005E794C void CDBSocketOp::DelSubPledgeSKill(const unsigned char *)
0x007FF3F4 void CResidence::MakeHolyThingBreakable(bool)
0x00821F00 void CSkillInfo::PostLoad(void)
0x0073590C bool GiveItemByCastleSiegeDefence(class NpcSocket*, const unsigned char *)
0x00650B14 bool GIPResultPacket(class CGIPSocket*, const unsigned char *)
0x00601D78 void CPartyDuel::OnCloseUp(void)
0x004EA8F0 void CCastle::ResumeSiege(void)
0x00689A88 bool CInventory::CheckAddableMulti(struct ItemAmountData [],bool)
0x008F274C void User::SendDeletedSkillToDB(int)
0x0084BBD8 bool CSkillEffect_i_capture_ownthing::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x0076B8D4 void COlympiadFuncHandler::EscapeFromOlympiad(void)
0x009556DC bool CVehicle::QuickDeparture(void)
0x004A007C bool BuilderCmd_CheckPCCafeCoupon(class CSocket*, class User *, wchar_t *)
0x0065A4A4 void ListMailHtmlBuilder::SendHtml()
0x0042D354 void BuilderCmdHelper::DestroyAll(class User*, wchar_t *)
0x0045B19C class User *__cdecl CBattleCamp::GetUserOrMaster(void)
0x00810398 bool CSharedFactoryclass CStaticObject,class CSharedStaticObjectData,class CSharedStaticObjectConstant,&class CSharedDefine const SharedDefine_StaticObject::Pop(int,int &)
0x0088B9E4 void User::PetitionSayBySystem(wchar_t *)
0x0058283C void CDB::SendPunishmentHistory(class User*, int)
0x0047A250 bool BuilderCmd_ping(class CSocket*, class User*, wchar_t *)
0x0070F174 bool CMoveToTargetAction::OnTick(void)
0x00426E54 enum DriverHelper::AirShipDriverType DriverHelper::CanDrive(class CAirShip*, class User*, bool)
0x005C3454 bool ReplyPackageLoadTargetList(class CDBSocket*, const unsigned char *)
0x004D9370 bool BuilderCmd_can_make_clan(class CSocket *, class User*, wchar_t *)
0x00591D34 void CDB::RequestInitializeBossRecord(int)
0x00413270 void CAgitHTML::AgitAuctionInfo(int)
0x0088A7F0 void User::OnCreate(void)
0x007F3230 void CPVPMatchSystem::Init(void)
0x008E1FDC int __cdecl User::GetPeriodLeft(int)
0x004A294C bool BuilderCmd_VehicleInfo(class CSocket*, class User*, wchar_t *)
0x0058246C void CDB::RequestSetAllianceCrest(class User*, class CAlliance*, const unsigned char *, int)
0x0091D2E8 bool ShortCutDeletePacket(class CSocket*, const unsigned char *)
0x0057FF98 void CDB::RequestDeleteChar(unsigned int,unsigned int,class CUserSocket *) const
0x005931A4 void CDB::RequestAcademyGraduateList(unsigned int,unsigned int)
0x00971F40 void CWorld::UnLoadStaticObject(class CStaticObject*, class CAirShip *)
0x006FBC78 void CMoveRelativeAction::OnEnd(bool)
0x008D8350 bool User::OnDestroyItem(class CItem*, __int64,bool &)
0x008EE804 void User::TakeDismissPenalty()
0x0090F5BC bool RequestPledgePowerList(class CSocket*, const unsigned char *)
0x00945234 bool HtmlCmdItemAuction(class CUserSocket*, class User*, const wchar_t*, const wchar_t *)
0x0062CCC0 bool CFortress::HasMoreThan75Hours(void)
0x0063E8DC void CFortress::SiegeResume(void)
0x00748F2C bool NpcCreateOnePrivate(class NpcSocket*, const unsigned char *)
0x005E4460 bool ReplyLoadSiegeAgit(class CDBSocket*, const unsigned char *)
0x008D8894 bool User::DropItem(class CItem*, __int64,class FVector &,bool)
0x008882D4 bool CUndergroundColosseum::StartMatch(unsigned int,unsigned int)
0x00591C5C void CDB::RequestFishingEventSavePrize(int,int,char *)
0x0044AD40 bool AtomicCastBuffWithMpConsumption::Do(void)
0x0094EBB0 GetLeftString(WCHAR *str, WCHAR **result)
0x00596F50 void CDB::RequestSaveDominionRegistry(int,int,int,int)
0x008626D8 void CStatusWnd::OnStatusWndPaint(HDC hDC)
0x0094AA60 bool HtmlCmdRecipeNpc(class CUserSocket*, class User *, const wchar_t *, const wchar_t *)
0x004E1FF8 bool BuilderCmd::show_lines_test(class CSocket*, class User*, wchar_t *)
0x00863478 void CStatusWnd::RegisterWindowClass(HINSTANCE hInstance)
0x0086262C void CStatusWnd::OnMainWndResized(WPARAM wParam, LPARAM lParam)
0x0086258C void CStatusWnd::SetMessageV(int nLine, const WCHAR *sFormat, ...)
0x0059463C void CDB::RequestCreateItemAuction(int,int,int,int,__int64,__int64,int,int,__int64,int)
0x006D46D0 void CMerchant::AddBuyingGood(struct GoodStruct *)
0x00423348 void CAirportForFree::AddPlatform(class CAirportPlatform *)
0x0059F6BC bool ReplyLoadSubPledge(class CDBSocket*, const unsigned char *)
0x0085A828 bool SSQSystem::ChangeUserPoint(class User*, int)
0x0084075C bool CSkillEffect_p_cp_regen_by_move_mode::Pump(class CCreature*, const class CSkillInfo*, int)
0x006234B8 class CFishInfo *__cdecl CFishingDB::FindFish(int) const
0x00520C8C int __cdecl CCrataeCube::CheckRegisterUser(unsigned int)
0x00530010 int __cdecl CCreature::ChangeScaleMode(int)
0x007050A8 void CCreatureController::__async_MoveToTargetRelative(struct CExecutionArgumentPad *)
0x005FA198 void CDoorDB::InitializeDoors(void)
0x0090256C bool CUserBookmark::AddSlot(class User*, int)
0x0058AAF4 void CDB::RequestNewTeamBattleAgitPledge(class CTeamBattleAgit*, class CPledge*, class User*, class CNPC*, int,int)
0x0092198C bool RequestRecipeShopSetMsg(class CSocket*, const unsigned char *)
0x005359A4 void CCreature::AreaCheckForEveryTick(class CGeoZone *, class CGeoSector*, int)
0x005377A8 bool CCreature::DeleteItemInInventoryBeforeCommit(int,__int64)
0x0043CBC8 const unsigned char *__cdecl AtomicDestroyPet::Disassemble(const unsigned char *)
0x0060A148 void DxDeclareWar::DoServerJob(void)
0x00424310 bool CAirShipManager::BuyFreeAirShip(class User*, enum AirShipTypeEnum,int,unsigned int)
0x0083DDFC bool CSkillEffect_p_cubic_mastery::Pump(class CCreature*, const class CSkillInfo*, int)
0x006A484C bool CItemEquipCondition_classid::CheckPrivate(class CCreature*, class CItem *)
0x00402958 bool Agent::QuerySecond(void)
0x004BB8E0 bool BuilderCmd_acquire_sub_pledge_skill(class CSocket*, class User*, wchar_t *)
0x0055102C bool CCreature::DespawnCubicBySlot(int)
0x0071D410 bool CNPC::FreezeIfNobodyNearMe(void)
0x00705638 void CMoveToTargetRelativeAction::Set(class CSmartID,class CSmartID,bool,int,int,int,int,class CSmartID)
0x00713ED0 bool CSkillAction2::Activate(class CCreature &,class CObject &,enum CSkillInfo::EffectActivateTiming)
0x004D8568 bool BuilderCmd_graduate_academy(class CSocket*, class User*, wchar_t *)
0x0057FCF8 void CDB::RequestDeleteGuardData(int) const
0x008D7454 long User::EnterItemManipulation(int)
0x005ECA20 void CDominionManager::PauseSiege(void)
0x004D3F18 bool BuilderCmd_stoplogin(class CSocket*, class User *, wchar_t *)
0x00755688 bool NpcRegisterResurrectionTower(class NpcSocket*, const unsigned char *)
0x0088BE18 void User::IncreaseDuelCount(void)
0x0071B2F0 bool CNPC::IsEnemyTo(class CCreature *)
0x00590D4C void CDB::RequestLoadPledgeSiegeKillDeathCount(int)
0x0056E4A4 void CCreatureController::ActionBroadcastStopMove(void)
0x00817A04 void CSiegeAgit::PauseSiege(void)
0x00594AC4 void CDB::RequestSetTutorial(int,unsigned int)
0x006066CC void DxLoadOlympiad::DoServerJob(void)
0x0097DE94 bool CXmasSantaEventMgr::LoadINIFile(void)
0x00535D5C bool CCreature::CanDropItem(class CItem*, __int64,class FVector &,bool)
0x00576758 bool CCubicHandler::ReadyToUseSkill(class CCreature*, class CCubic*, struct CubicActivationInfo &,struct ActivateInfo2 &)
0x00580D60 void CDB::RequestDeletePledgeByTimer(class CPledge *)
0x0049E3D0 bool BuilderCmd_set_fatigue_time(class CSocket*, class User*, wchar_t *)
0x005FC154 void CIndividualDuel::RestoreStatus(void)
0x00901374 bool CBasicActionHandler_BOT_REPORT::Handle(class User*, int,bool,bool,int)
0x007AD8DC void CPet::OnMasterLeaveWorld(void)
0x007A78B8 int __cdecl CPCCafeCouponEventMgr::FailedInputCoupon(const int)
0x0052BE20 void CCreature::_CheckTrapInLookNeighbor(class CCreature*, const class FVector &)
0x006DD3B4 void CMiniGameAgit::ClearGame(void)
0x004F57A8 bool CCategoryDataDB::IsInCategory(int,int)
0x00519F64 bool CCoretimeTeleportEventMgr::Load(void)
0x007F474C class CPVPMatch2 *__cdecl CPVPMatchSystem::GetMatchByMatchType(enum PVP_MATCH_TYPE)
0x004FC16C bool CCleft::_IsCleftPlayer(int)
0x0040D43C void CAgitHTML::AgitBid1Request(int,int)
0x00579364 bool CCursedWeaponMgr::AddWeapon(class CItem*, class User *)
0x0087E914 void CTransformCommonData::SetAdditionalSkill(int,class std::xvectorclass CSkillInfo const*, class std::xallocatorclass CSkillInfo const* &)
0x00530ECC bool CCreature::IsEquippedWithForcedItem(enum SlotType)
0x0077EB40 bool CObjectMapclass CParty,1,5,class RWLock::DeleteObject(int,char*, int)
0x0064FCE0 bool CGameInfoPipeline::ConnectToDaemon(void)
0x00521E60 void CCrataeCube::PostEndMatch(void)
0x005CDBA0 bool ReplyDeleteSubJob(class CDBSocket*, const unsigned char *)
0x00718368 bool CNoblessSystem::SetNoblessSkill(class User *)
0x005AF228 static bool DummyPacket(CDBSocket *socket, const unsigned char *packet)
0x0057CB98 void CCursedWeaponMgr::DeleteOriginalCursedWeapon(class CItem *)
0x00894B38 bool User::ValidateBaseHP(void)
0x005B29C8 bool ReplySetTeamBattleWinner(class CDBSocket*, const unsigned char *)
0x00687B10 bool CInventory::Pop(int,bool)
0x007C5D30 void CPledge::AddDbMember(unsigned int,const wchar_t *, wchar_t*, int,int,int,int,int,enum PledgeType,int)
0x00579D74 void CCursedWeaponConstInfo::Add(const struct CursedWeaponInfo *)
0x00906260 void User::BeforeAcquireSubjobSkills(void)
0x004803CC bool BuilderCmd::loadXMasSantaEventSetting(class CSocket*, class User*, wchar_t *)
0x00674B38 std::xwstring CHtmlGenerator::GetTemplet(int templetId)
0x004301D4 void CAirShipForFree::AutoSail(void)
0x00417658 bool CAirShipConstFree::CanPayCost(class User*, const struct CAirShipConstFree::AirShipCostType &,int)
0x007579F4 void CObject::Delete(void)
0x008211C8 int __cdecl CSkillDB::GetSkillIdLevelByName(const wchar_t*, int*, int *)
0x00816618 class SharedSSQInfo *__cdecl SharedSSQInfo::GetInfo(void)
0x007AC370 void CSummon::CheckSummonBattleMode(void)
0x00590518 void CDB::RequestArchiveMail(class User*, int,class CMailListParameter &)
0x005ABDA8 bool CObjectMapclass CPledgeCrest,1,5,class RWLock::Insert(int,class CPledgeCrest*, char*, int)
0x0052AD88 double CCreature::GotDamage(class CCreature *, double,double,bool,enum DamageTypeEnum,bool)
0x00555500 void CCreature::GatherNeighborCreatureByPoint(int,class std::xvectorclass CSafePointer2class CCreature,class std::xallocatorclass CSafePointer2class CCreature  &,class std::xvectordouble,class std::xallocatordouble &,int,int,int,enum SkillAffectObjectTypeEnum,class CCreature*, class FVector)
0x006A51F4 bool CItemEquipCondition_inzone::CheckPrivate(class CCreature*, class CItem *)
0x005FBE84 void CDuel::PlayerDie(class User*, class CCreature *)
0x00939DE4 bool CUserSocket::JoinPartyPacket(class CSocket*, const unsigned char *)
0x0044CEF4 void CAuction::OnCreate(void)
0x004E0AE0 bool BuilderCmd_gmliston(class CSocket*, class User*, wchar_t *)
0x00892EBC void User::SetAssociatedInstantZoneId(unsigned int,int,bool)
0x0083DFD4 bool CSkillEffect_p_transfer_damage_summon::Pump(class CCreature*, const class CSkillInfo*, int)
0x0076F8D4 void COlympiadSystem::SetDebugString(class std::basic_stringwchar_t,struct std::char_traitswchar_t,class std::allocatorwchar_t &)
0x00424C90 void CAirShipManager::OnLoadFreeAirShipAll(int,const unsigned char *)
0x0043AFE4 bool CArea::IsBannedTerritoryOn(int)
0x007AB3A0 __cdecl CSummon::CSummon(void)
0x005ECED8 int __cdecl CDominion::CancelExtendDominion(void)
0x005F149C int __cdecl CDominionManager::GetUserDominionSiegeID(int)
0x005EA98C int __cdecl CDominionManager::AdjustNextSiegeTime(void)
0x00971334 bool CWorld::StaticObjectDisappear(class CStaticObject *)
0x006A5AA0 bool CItemUseCondition_transmode_include::CheckPrivate(class CCreature*, class CItem *)
0x005F1674 int __cdecl CDominionManager::GetPledgeDominionSiegeID(int)
0x005F5318 int __cdecl CDominionManager::CheckStartDominionRegistration(int,bool)
0x0047FB84 bool BuilderCmd_common_recipe(class CSocket *, class User*, wchar_t *)
0x0093DAF0 int __cdecl CSocketLimiter::DecUserSocketPerMAC(__int64)
0x008CD084 bool User::IsEnemyTo(class CCreature *)
0x00898090 void User::ValidateSpeed(void)
0x00810D44 bool CContainer::PushItem(class CItem *)
0x0059F374 bool ReplyLoadBossRecordRanking(class CDBSocket*, const unsigned char *)
0x0090C3E0 void User::SendCharInfo(class CUserSocket*, bool)
0x0048F114 bool BuilderCmd_hide(class CSocket*, class User*, wchar_t *)
0x006DE044 void CMiniGameAgit::StartSiege(void)
0x008454D8 double L2SkillFunc::GetMagicResisted(bool,bool,int,double,int,double,bool,double,double)
0x004BF080 bool BuilderCmd_delquest_nr(class CSocket*, class User*, wchar_t *)
0x004A79A8 bool BuilderCmd_reset_ip(class CSocket*, class User*, wchar_t *)
0x0045202C bool CAuctionManager::FinishAuction(class CAuction *)
0x0088D140 bool User::UpdateChar(unsigned int,__int64,int,int,unsigned int,unsigned int)
0x004188E4 void CTLPipeBaseunsigned int,1000,8::CThreadPipe::Write(const unsigned int &)
0x005B03EC bool JobFinishSignal(class CDBSocket*, const unsigned char *)
0x00732024 bool NpcPing(class NpcSocket*, const unsigned char *)
0x0067BD04 bool CInstantZone::EnterZone(class CNPC *)
0x006D5A7C void CMiniGameAgitNpcFuncHandler::SetWinner(void)
0x00899C1C bool User::TeleportWithAirShip(class CAirShip*, class FVector,unsigned int)
0x006F95C8 bool CMultiSellList::HasKeyItem(class CMultiSellInfo *)
0x0040E250 void CAgitHTML::AgitInit(void)
0x004495CC bool MemoControl::Do(void)
0x0045C898 bool CObjectMapclass CBattleCamp,1,5,class RWLock::Insert(int,class CBattleCamp*, char*, int)
0x004883B0 bool BuilderCmd_npccount(class CSocket*, class User*, wchar_t *)
0x008994DC void User::IncreaseKarma_KillSummon(void)
0x00456EB8 void CIOSocketExclass CIOBufferEx8192 ::OnCreate(void)
0x005844F8 void CDB::DelIntervalAnnounce(class CUserSocket*, int,int)
0x0087CDDC bool CTransform::SetCollision(class User*, const int,const int,bool)
0x00902CE8 void BuilderCmdHandler::OnAddSlot(class User*, wchar_t *)
0x0081FCAC void CSkillInfo::SendRegenPacket(class User *, int) const
0x00581068 void CDB::RequestDepositWareHouseItems(unsigned int,class User*, int,int,int,int,int,char *) const
0x00480924 bool BuilderCmd::showfishingeventsetting(class CSocket*, class User*, wchar_t *)
0x005F7738 bool CDoorDB::LoadData(wchar_t*, int,bool)
0x007E4860 void ArrivedMail::ServeInternal(class User *)
0x004164E4 void CAgitHTML::AuctionMine(bool)
0x005F9F38 bool CDoorDB::LoadTrap(void)
0x0047EA60 bool BuilderCmd_ride_wyvern(class CSocket*, class User*, wchar_t *)
0x0052E244 void CCreature::InitializeAreaMod(void)
0x009244F0 void CUserSocket::SendSystemMessage(wchar_t *, wchar_t *)
0x004EB7B4 void CCastle::ValidateStartSiege(void)
0x005BE5E4 bool BBSAddFavorite(class CDBSocket *, const unsigned char *)
0x004E9A40 void CCastle::UpdateDomainFortressContractStatus(void)
0x0057AB78 bool CCursedWeaponMgr::DropWeapon(class CItem*, class User *)
0x004B1690 bool BuilderCmd::summon_set_item(class CSocket*, class User*, wchar_t *)
0x009516E0 class Option *__cdecl Variation::GetRandomOption(void)
0x0066B534 void ListMail::ExecuteInternal()
0x00597488 void CDB::RequestSaveDominionRenamed(int,int)
0x00775A64 class Option *__cdecl OptionDB::FindByOptionNo(int)
0x00951648 class Option *__cdecl Variation::GetNormalOption(void)
0x0045E110 void CBlockUpset::ShowBlockUpsetInfo(class User &)
0x008CEA74 bool User::OnRestartPointPacket(enum RestartPoint)
0x005907D4 void CDB::RequestLoadAllNobless(bool)
0x00423EF0 bool CAirShipManager::AddConst(class CAirShipConst *)
0x00619530 int __cdecl CEventMatchBuilderCommandParser::Parse_info(class CSocket*, class User*, wchar_t *)
0x00619338 int __cdecl CEventMatchBuilderCommandParser::Parse_end(class CSocket *, class User*, wchar_t *)
0x00619140 int __cdecl CEventMatchBuilderCommandParser::Parse_pause(class CSocket*, class User*, wchar_t *)
0x00618F48 int __cdecl CEventMatchBuilderCommandParser::Parse_start(class CSocket*, class User*, wchar_t *)
0x00619B80 int __cdecl CEventMatchBuilderCommandParser::Parse_msg(class CSocket *, class User*, wchar_t *)
0x00619A58 int __cdecl CEventMatchBuilderCommandParser::Parse_remove(class CSocket*, class User *, wchar_t *)
0x006197D0 int __cdecl CEventMatchBuilderCommandParser::Parse_score(class CSocket*, class User*, wchar_t *)
0x00619728 int __cdecl CEventMatchBuilderCommandParser::Parse_list(class CSocket*, class User*, wchar_t *)
0x00682A04 void CInstantZone::TimerExpired(int)
0x00809BA4 void CSerializedPumpEndMessage::OnHandle(class CCreature *)
0x0061A080 int __cdecl CEventMatchBuilderCommandParser::Parse_dispelall(class CSocket*, class User*, wchar_t *)
0x005B7E58 bool ReplyOustPledgeMemberPacket(class CDBSocket*, const unsigned char *)
0x0066B35C void CHtmlCommand::SetPacket(const unsigned char *packet)
0x008567AC bool CSkillEffect_p_trigger_skill_by_avoid::PumpStart(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpStartType) const
0x0076D5EC int __cdecl COlympiadTeam::GetDamage(void)
0x007698F4 int __cdecl COlympiadTeam::GetOlympiadPoint(void)
0x00964B8C int __cdecl CObjectMapclass User,8191,5,class RWLock::GetSize(void)
0x007CDB90 void `anonymous-namespace::SendPledgeSkillListIfUserCanAcquire(class std::xmapunsigned int,int,struct std::lessunsigned int,class std::xallocatorstruct std::pairunsigned int const ,int  &,int,class User*, bool,bool,bool &)
0x0046DA0C int __cdecl CObjectMapstruct BotBlockData,10,5,class CIOCriticalSection::DeleteAllObjects(char*, int)
0x00768F78 int __cdecl COlympiadDefaultSetting::GetPenaltyPoint(enum GameRuleType,int)
0x005B985C bool ReplyPledgeExtendedInfo(class CDBSocket*, const unsigned char *)
0x0084DF8C bool CSkillEffect_p_set_collected::Pump(class CCreature*, const class CSkillInfo*, int)
0x0068E86C void CIOServer::Close(void)
0x0075BA00 bool CContributeData::PickableIn15Sec(class CCreature *)
0x004828E8 bool BuilderCmd_SpawnPCTrap(class CSocket*, class User*, wchar_t *)
0x00657810 void CHolyThing::SendHolyThingInfo(class CUserSocket *, bool,int)
0x007343C0 bool NpcShowFishingEventRanking(class NpcSocket*, const unsigned char *)
0x008A16D4 bool User::SetSnoop(int)
0x0049D3A0 bool BuilderCmd_dismiss_partyroom(class CSocket*, class User *, wchar_t *)
0x006E28EC void CMonRaceData::Debug(void)
0x007AB838 void CSummon::SendSystemMessage_d(unsigned int,int)
0x0067F5D4 void CInstantZone::SetAssociate(class User *)
0x005CA818 bool ReplyUnequipHenna(class CDBSocket*, const unsigned char *)
0x0089A2A0 void User::SetNickname(const wchar_t *)
0x008B3BE0 void User::SendCoolTime(void)
0x0076F3FC bool COlympiadTeam::IsValidCondition(enum GameValidCondition)
0x007CA454 void CPledge::RequestLoadSubPledge(void)
0x007360F8 bool NPCGiveEventItem(class NpcSocket*, const unsigned char *)
0x00749C4C bool NpcRegisterTeamBattle(class NpcSocket*, const unsigned char *)
0x00701AF8 bool CMoveRelativeAction::SetMovingIntoAirShipImpl(void)
0x006E13E4 bool CMonRaceDB::RequestUpdateMon(void)
0x0087DA70 void CTransformCombatData::SetStatByLevel(enum TransformLevelStat,class std::xvectordouble,class std::xallocatordouble &)
0x0082F60C bool CSkillOperateCondition_op_unlock::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x00923C2C bool RequestPetitionVote(class CSocket*, const unsigned char *)
0x007F6B7C void CPVPMatch::AddBanishPos(enum BlueRedTeam::Enum,const class std::xvectorclass FVector,class std::xallocatorclass FVector &)
0x00710A9C bool CSkillAction2::SetValidPendingAction(class CCreature *)
0x00659A48 int SendPledgeMailHandler::GetPledgeId()
0x00883894 void CUndergroundColosseum::OnDismissParty(class CParty *)
0x0091D3D0 bool CannotMoveAnymorePacket(class CSocket*, const unsigned char *)
0x0070F570 void CSkillAction2::Set(class CSmartID,class CSmartID,int,int,bool,bool,unsigned int)
0x0040661C void CAgit::TimerExpired(int)
0x00578A98 void CCursedWeaponMgr::RandomMake(class CNPC *)
0x004EDB70 bool CCastle::IsAllChildFortressRelated(void)
0x0076F7EC bool COlympiadPacket::MatchList(class CSocket*, const unsigned char *)
0x004564D8 void CIOSocketExclass CIOBufferEx16384 ::Close(void)
0x004EDD30 void CCastle::NotifySupportBroken(void)
0x005F9CB8 class CDoor *__cdecl CDoorDB::GetDoor(int)
0x007C9920 void CPledge::Save(unsigned int)
0x00626414 ASYNCHRONOUS_SERIALIZE_IMPL1(CFishingController, DoPumpingAndReeling, bool, bIsPumping)
0x00843814 bool CSkillEffect_c_mp_by_level::Consume(class CObject*, double)
0x00464628 void CBlockUpset::AddBlockUpsetNpc(int)
0x00468404 bool CBlockUpsetManager::LeaveWorld(class User &)
0x008CF0E4 void User::EnterWorld(void)
0x004A4CB8 bool BuilderCmd::show_click_pos(class CSocket*, class User*, wchar_t *)
0x006F6820 bool CMultiPartyCommandChannelRegistry::IsChannelMember(CParty* party)
0x0053A8BC void CCreature::ValidateMAttack(void)
0x0073366C bool NpcManorFunc(class NpcSocket*, const unsigned char *)
0x007D332C void CPledge::MailArrived(void)
0x00777E4C void COwnThing::SendOwnThingInfo(class CUserSocket *)
0x0071BD8C bool CNPC::OnNpcAttackPacket(int,enum NpcAttackMoveType,int)
0x0048582C bool BuilderCmd::cubic_skill_delay_show(class CSocket*, class User*, wchar_t *)
0x0048BE5C bool BuilderCmd_qmove(class CSocket *, class User*, wchar_t *)
0x0057FC50 void CDB::RequestLoadGuardData(int) const
0x004E9E78 void CCastle::SetDefendingCastle(bool,class std::xvectorclass User*, class std::xallocatorclass User* &)
0x007F699C bool CPVPMatchSystem::RegisterResurrectionNPC(unsigned int,unsigned int)
0x006FB53C void CGetItemAction2::Set(class CSmartID,class CSmartID)
0x00585828 void CDB::RequestUninstallBattleCampBy(class CResidence *)
0x007EF4B4 void CPremiumService::RequestAddGamePoint(int,__int64)
0x0047E2C8 bool BuilderCmd_show_loc(class CSocket*, class User*, wchar_t *)
0x0047DCF8 bool BuilderCmd_quiet(class CSocket *, class User*, wchar_t *)
0x00665E3C void SetPledgeAnnounceHtmlHandler::SendHtml()
0x005E6C08 void CDBSocketOp::ModDepositedSSQItem(const unsigned char *)
0x006246F4 void CFishingDB::Add(class CFishInfo *)
0x007DF48C unsigned int CPledgeMemberList::GetAcademyStudentDbId(unsigned int)
0x004E8EE0 wchar_t *__cdecl CBuy::GetResultPage(enum BuyResultPage)
0x004E8F4C wchar_t *__cdecl CSell::GetResultPage(enum SellResultPage)
0x0062E6C0 bool CFortressBuilderCmdHandler::BuilderCMd_GetOwnMinutes(class CSocket*, class User *, wchar_t *)
0x005EA3A4 wchar_t *__cdecl CDominion::GetPickupOwnThingName(void)
0x007E0260 wchar_t *__cdecl CPledgeMemberList::GetCharName(unsigned int)
0x0041A504 unsigned int CSmartIdManagerclass CAirShip,1000,8::RegisterObject(unsigned int,unsigned int,class CAirShip *)
0x005EA408 wchar_t *__cdecl CDominion::GetHideNameItemName(void)
0x006FFE00 void CTreeLoc::Init(void)
0x0094DFF0 wchar_t *__cdecl LoadBinaryAbsoluteW(const wchar_t*, int &)
0x007C3EA4 wchar_t *__cdecl CPledge::GetMasterName(void) const
0x007C3548 wchar_t *__cdecl CPledge::GetPledgeName(void) const
0x00727A50 void CNPC::SendNPCInfo(class User*, bool)
0x0052DAD0 void CCreature::ValidateAttackSpeedAndTime(void)
0x005A1B28 bool ReplyCreateAcademy(class CDBSocket*, const unsigned char *)
0x00581758 void CDB::RequestLoadPledge(unsigned int)
0x00482134 bool BuilderCmd_Invisible(class CSocket*, class User *, wchar_t *)
0x00433928 void CAirShipSteering::Delete(void)
0x00658664 void SaveMailHtmlBuilder::DisassemblePacket()
0x00467568 void CBlockUpset::_OnRegister(void)
0x0089C1DC bool User::UpdatePoint(int,int,int)
0x007F818C void QuestionAnswer::Decrypt(void)
0x0073DCD0 bool NpcHennaItemListOpenForEquip(class NpcSocket*, const unsigned char *)
0x00862280 void CPendingStaticObjects::RegisterAsPending(class CStaticObject *)
0x00426CC8 bool CAirShip::GetOn(class User*, bool)
0x0041B8FC void CAirShip::MoveToLocation(class FVector)
0x0088CA5C bool User::QueryEnemy(int)
0x0076C6F4 void COlympiadTeam::SendV(const char*, char *)
0x004539DC void CAuctionAgit::SetSaleState(enum SaleState)
0x006E333C bool CMonRaceDB::RequestCreateMonTicket(int,int,int,int,int,int,class User *)
0x0083CBBC bool CSkillEffect_p_max_hp::Pump(class CCreature*, const class CSkillInfo*, int)
0x005B3670 bool ReplyDxPacket(class CDBSocket*, const unsigned char *)
0x004410D4 void AtomicUpdatePCCafePoint::Dump(void)
0x00900AA4 class CPet *__cdecl PetSummonActionHelper::CheckPet(class User *)
0x0045CD40 void CBattleCampDb::RemoveBattleCamp(unsigned int)
0x0076B2C4 void COlympiadSystem::SetOlympiadTerm(bool,bool,int,int,int,int,int,int,int,bool)
0x0085E0DC bool SSQSystem::Reset(void)
0x00554B1C void CCreature::AcquireSkills(const class std::xvectorstruct SkillAcquireInfo*, class std::xallocatorstruct SkillAcquireInfo* &,bool,bool)
0x006AA6AC LRESULT CALLBACK About(HWND hDlg, UINT message, WPARAM wParam, LPARAM lParam)
0x007BC8C4 CPetitionCli::NotifyUserChat(User *pUser, WCHAR* pwsMsg)
0x006AA8A8 LRESULT CALLBACK IntBox(HWND hDlg, UINT message, WPARAM wParam, LPARAM lParam)
0x007BBEAC CPetitionCli::ReplyPetitionChatEnd(int nPetitionId, short nErrorCode)
0x007BA7EC CPetitionCli::ReqSubmitLeaveMsg
0x007BB0E4 CPetitionCli::ShowCheckOutList()
0x007B9C70 CPetitionCli::ReqSubmitPetition
0x007BA54C CPetitionCli::ReqCancelPetition
0x004127F0 void CAgitHTML::SaleCancel(void)
0x00443F58 bool AtomicParamChange::Do(void)
0x007BCE5C CPetitionCli::NotifyGmChat(User *pGM, WCHAR * pwsMsg)
0x0083DE74 bool CSkillEffect_p_weight_penalty::Pump(class CCreature*, const class CSkillInfo*, int)
0x00730554 bool NpcUseItem(class NpcSocket*, const unsigned char *)
0x008601D8 void CStaticObject::DecideDistanceAttackable(class CMoveToTargetShareData*, class CSmartID)
0x0051F348 void CCCRecordBoard::Init(void)
0x0052C6A0 bool CCreature::ApplyIncreaseLimit(enum CreaturePointType,double &,double,double)
0x008E9640 bool User::MultiSellChoose(int,int,__int64,int,class ItemOptionKey,class BaseAttribute)
0x008A44A4 bool User::SendUserHPInfo(void)
0x007F7E6C void QuestionAnswer::Obfuscate(void)
0x0093D628 void CUserSocketReleaseVerifier::TimerExpired(int)
0x0045EB54 bool CBlockUpsetManager::CanAddBlockUpsetWaitingPlayer(int,class User &)
0x00961EB8 bool CWorld::GodsVoice(wchar_t *)
0x00893434 void User::_OnAbnormalStatusDeleted(const class CSkillInfo &,class CCreature *, enum SkillPumpEndType,int)
0x0093675C bool PrivateStoreBuyBuyListSend(class CSocket*, const unsigned char *)
0x008A29E0 bool User::OnNpcStartScenePlayerPacket(int,int,int,int,int)
0x0087C1D4 void CTransform::SendActionList(class User *)
0x0082A484 void SkillEnchantSafe::SendAcquirableSkillList(class User*, int)
0x0061F958 void CFieldCycle::_OnPointChanged(void)
0x00834C0C bool CSkillOperateCondition_op_check_pcbang_point::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x0059145C void CDB::RequestLoadUserPoint(class User*, int)
0x00493618 bool BuilderCmd_view_enemy_list(class CSocket*, class User*, wchar_t *)
0x00465104 bool CBlockUpset::_RemoveBlockUpsetCombatPlayer(int)
0x00595F60 void CDB::RequestSavePremiumItemsForServer(int,int,char *)
0x00740230 bool NpcChangeSubJob(class NpcSocket*, const unsigned char *)
0x007F1C64 void CPVPMatchSystem::SetEnableCheckPartyMemberLevel(bool)
0x00575B40 bool CCubicHandler::ActionHeal(class CCreature*, class CCubic*, struct CubicActivationInfo &,struct ActivateInfo2 &,struct CubicSkillInfo *)
0x0041FF70 void CAirportForFree::SendTeleportList(class User *)
0x00590944 void CDB::RequestGetNoblessTop10(int,int)
0x0047DFE8 bool BuilderCmd_instant_move(class CSocket*, class User*, wchar_t *)
0x005C1B3C bool ReplyGetItemFromPet(class CDBSocket*, const unsigned char *)
0x0044F7D0 class CAuction *__cdecl CAuctionManager::GetActiveAuction(class std::CDualKeyenum ItemAuctionType,int)
0x0041D2A4 void CAirShip::OnCreate(unsigned int,unsigned int,int)
0x00567DD0 bool CCreature::_DeleteAbnormalStatus(enum AbnormalStatusSlotType,class CCreature*, class CSkillInfo *, bool,enum SkillPumpEndType)
0x007B6D88 void CPet::OnCorpseDecayed(void)
0x00578704 class CCursedWeaponGenerator *__cdecl CCursedWeaponMgr::GetGenerator(int)
0x00577770 void CCursedWeapon::Drop(class User *)
0x00475EA8 CShopServer::WriteUnlock()
0x008375B0 bool CSkillEffect_cub_heal::Instant(class CCreature*, class CObject*, const class CSkillInfo *, class CSkillAction2*, double)
0x004FABA8 void CCleft::BanishCleftUser::Do(class CCleftMemberInfo &)
0x0072F488 bool NpcAreaSetBannedTerritoryOnOff(class NpcSocket*, const unsigned char *)
0x00481398 bool BuilderCmd_show_fish_ranklist(class CSocket*, class User*, wchar_t *)
0x00454DD8 bool CAuctionAgit::IsInAuction(int)
0x00965F84 void CThreadLocalWorldMap2100000,50000,8::Push(int,const class FVector &,class CObject *)
0x00651EFC void CHenna::Set(enum ObjectFieldType,class std::xvectorint,class std::xallocatorint *)
0x004BDD50 bool BuilderCmd::summon_attribute(class CSocket*, class User *, wchar_t *)
0x004858D4 bool BuilderCmd::cubic_skill_delay_reset(class CSocket*, class User*, wchar_t *)
0x006F6214 bool CMultiPartyCommandChannelRegistry::IsAvailable()
0x004867B4 void CUserSocket::SendSystemMessage_S(unsigned int,const wchar_t *)
0x008A1C40 class CParty *__cdecl User::GetParty(void)
0x0088566C void CUndergroundColosseum::ValidateParties(void)
0x007764C4 void OptionDB::Load(void)
0x0084404C bool CSkillOperateCondition_op_fishing_cast::CanUse(class CCreature*, const class CSkillInfo *, class CObject *)
0x0069B7AC bool CConvertItemDB::AddItem(int,int)
0x00694A24 bool CItem::AddDropPeriodTimer(void)
0x005D7E58 bool UpdateItemPacket(class CDBSocket*, const unsigned char *)
0x0083FED0 bool CSkillEffect_p_critical_damage_position::Pump(class CCreature*, const class CSkillInfo*, int)
0x00650F94 __cdecl CGIPSocket::CGIPSocket(unsigned __int64,bool (__cdecl **)(class CGIPSocket*, const unsigned char *))
0x0047F2C8 bool BuilderCmd_NpcPing(class CSocket*, class User*, wchar_t *)
0x004187DC bool CAirShipForFree::CanAction(void)
0x0067A0A0 class CArea *__cdecl CInstantZone::GetAreaByIndex(int)
0x004E0F28 bool BuilderCmd_areaname(class CSocket*, class User*, wchar_t *)
0x0094EC74 GetLeftString2(WCHAR *str, WCHAR **result)
0x00912C48 bool SetAcademyMaster(class CSocket *, const unsigned char *)
0x00951778 void VariationDB::Load(void)
0x006353C4 void CFortressSiege::FlagCaptureWarn(unsigned int,class User *)
0x007C9B10 void CPledge::SendPledgeInfo(class CUserSocket *)
0x00842608 bool CSkillEffect_p_limit::PumpEnd(class CCreature &,class CCreature *, const class CSkillInfo*, enum SkillPumpEndType) const
0x00840000 bool CSkillEffect_p_resist_dispel_by_category::Pump(class CCreature*, const class CSkillInfo *, int)
0x009432F4 bool HtmlCmdBBS(class CUserSocket*, class User*, const wchar_t*, const wchar_t *)
0x0054C1B4 void CCreature::HandleSerializedMessages(void)
0x0051E6F4 void CCrataeCube::UserDie(class User*, class User *)
0x00459160 bool AuthRequestAboutToPlay(class CAuthSocket*, const unsigned char *)
0x005F2740 bool CDominionSiegeEntry::AddPledge(unsigned int)
0x00904D38 void CUserBookmarkHandler::Teleport(class User*, const unsigned char *)
0x0056FB94 void CCreatureController::ActionBroadcastSkillCanceled(class CSkillAction2 *)
0x004D7408 bool BuilderCmd_debug(class CSocket *, class User*, wchar_t *)
0x00800D30 void CResidence::BroadcastSystemMessageW(int)
0x00809EB4 void CSerializedTriggerSkillMessage::Clear(void)
0x0083F868 bool CSkillEffect_p_pvp_physical_skill_defence_bonus::Pump(class CCreature*, const class CSkillInfo*, int)
0x0094338C bool HtmlCmdClanBBS(class CUserSocket*, class User*, const wchar_t*, const wchar_t *)
0x00917938 bool RequestShowFortressInfo(class CSocket*, const unsigned char *)
0x00764B64 void COlympiadField::ChangeStatus(enum FieldStatus::type,bool)
0x0049E898 bool BuilderCmd_gmunreg(class CSocket*, class User*, wchar_t *)
0x0046948C void CBossRecordRound::TimerExpired(int)
0x00825AE8 int __cdecl SkillEnchantSafe::CalculateProb(const struct SkillEnchantInfo*, int)
0x0069AD1C int __cdecl CSetItem::GetSlotSetItemId(int) const
0x00825D00 int __cdecl SkillEnchantUntrain::CalculateSp(const struct SkillEnchantInfo*, int)
0x006063C4 void DxDeletePreviousOlympiadPoint::DoServerJob(void)
0x004478E4 bool AtomicUpdatePCCafePoint::CanDo(void)
0x00825E70 int __cdecl SkillEnchantRouteChange::CalculateSp(const struct SkillEnchantInfo*, int)
0x004F6134 void CClanBBSHTML::ClanBBSAdmin( const unsigned char* packet)
0x004F5F78 void CClanBBSHTML::ClanBBSList( const unsigned char * packet)
0x004F8C70 void CClanBBSHTML::ClanBBSAdmin2( const unsigned char* packet)
0x004F7884 void CClanBBSHTML::ClanBBSView2( const unsigned char* packet)
0x00744764 bool NPCPlayAnimation(class NpcSocket*, const unsigned char *)
0x0049831C bool BuilderCmd_set_door_status(class CSocket*, class User*, wchar_t *)
0x004BA82C bool BuilderCmd_inspect_partyroom(class CSocket*, class User *, wchar_t *)
0x0088B92C void User::Set(class CUserSocket *)
0x005F87C8 void CDoor::ResetDoorState(bool,double)
0x0044CBE4 bool AtomicGetOnAirShip::Do(void)
0x00673B20 void CNpcHtmlSender::SendHtml(std::xwstring &html)
0x005F6718 void CDoor::ReportOrt(char *caller, int line, int nWorkType)
0x00658854 void WritePledgeMailFormHtmlBuilder::DisassemblePacket()
0x005983A4 void CJobFinishSignal::SetAllPledgeLoaded(void)
0x0072E938 bool NpcCastleHpRegen(class NpcSocket*, const unsigned char *)
0x00924D48 bool CUserSocket::MoveToLocationPacket(class CSocket *, const unsigned char *)
0x00405044 struct Query NewInspectorAgent::MakeRandomQuery(void)
0x00484364 bool BuilderCmd_EvolvePet(class CSocket*, class User *, wchar_t *)
0x0045B858 bool CBattleCamp::IsEnemyTo(class CCreature *)
0x00589330 void CDB::RequestPackageLoadTargetList(class User *) const
0x0045E6B4 bool CBlockUpset::OnTeamScoreChanged(int,int)
0x005DB290 bool ShowPetitionMsg(class CDBSocket*, const unsigned char *)
0x0046EAE8 bool CBotBlockManager::AddAsBotUser(unsigned int)
0x0076C8D4 bool COlympiadTeam::IsValidTeam(void)
0x00554E04 bool CCreature::RemoveSkillUsableTime(int)
0x00637734 void CFortress::BroadcastSystemMessageWithName(int,wchar_t*, bool)
0x008D6030 void User::StealInfectedSkills(class User*, const int,const int)
0x0047EBD8 bool BuilderCmd_getoff_wyvern(class CSocket *, class User*, wchar_t *)
0x008A3A14 void User::SendLogout(void)
0x007ADCE4 bool CPet::Hungry(void)
0x0065D9CC void SaveMailHtmlBuilder::Build1002Packet()
0x00478790 class CDuel *__cdecl CDuel::GetObjectW(unsigned int)
0x0090355C bool CUserBookmarkHandler::AddSlot(class User*, int)
0x004A0A88 bool BuilderCmd_multisell(class CSocket*, class User *, wchar_t *)
0x004FA40C bool CCleft::IsCat(int) const
0x0083A0A0 bool CSkillEffect_i_remove_energy::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x00849624 bool CSkillOperateCondition_can_mount_for_event::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x00911FA0 bool UserPacketEx::JumpPacket(class CSocket *, const unsigned char *)
0x007D18F0 void CPledge::DeleteDbMember(unsigned int)
0x0059C4EC void CDB::RequestLoadAllCastle(void)
0x00533E44 bool CCreature::AddItemToInventory(int,__int64,bool,int,int,int,class ItemOptionKey,int,class BaseAttribute)
0x008DB1F8 bool User::RequestPrivateStoreWhole(void)
0x007CCBDC bool CPledge::CanJoinMoreMember(enum PledgeType)
0x0071EA04 void CNPC::TakeOffItems(void)
0x00951B58 void VariationDB::RegisterExceptionItem(int)
0x007D71E8 void CPledge::SendDominionScriptEventToAllOnlineMember(int,int,int)
0x0042F70C void CAirShipForFree::ConsumeFuel(int)
0x008DB2C0 bool User::RequestPrivateStoreBuy(void)
0x00549D60 void CCreature::SetItemUsableTime(int,unsigned long*, unsigned long)
0x008A1984 void User::AddPVPPoint(int,enum HowToGetPointType,int)
0x004ED798 void CCastle::RemoveChildFortress(class CFortress *)
0x00733B10 bool DeletePreviousOlympiadPoint(class NpcSocket*, const unsigned char *)
0x0094302C bool HtmlCmdBookmark2(class CUserSocket*, class User *, const wchar_t *, const wchar_t *)
0x007F9964 bool CRecipeInfo::MakeNPCFeePacket(class CPacketHelperEx16384 &,class User *)
0x0047AAC0 bool BuilderCmd_updatecastleincome(class CSocket*, class User*, wchar_t *)
0x0049C040 bool BuilderCmd_bossrecordroundinfo(class CSocket*, class User*, wchar_t *)
0x007C742C void CPledge::ViewPledgeMemberInfo(class User*, wchar_t *)
0x00814068 CSharedRWLock::CSharedRWLock(const WCHAR* sName, DWORD dwNo, PSHAREDINFO reserved_psi, DWORD dwSpinCount)
0x008D7650 bool User::HasEquipped(class CItem *)
0x007AE7A0 const class PetDataSheet::Record &__cdecl CCommonRidingInfo::Record(void)
0x005A371C bool ReplyVariationItem(class CDBSocket*, const unsigned char *)
0x00842764 bool CSkillEffect_p_anti_cubic::PumpEnd(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpEndType) const
0x0070CE2C bool CJumpAction::OnTick(void)
0x0047E158 bool BuilderCmd_distance(class CSocket*, class User*, wchar_t *)
0x0058C11C void CDB::RecipeShopMakeItems(class User*, class User*, int,int,__int64,int,int,char *)
0x0057C004 int __cdecl CCursedWeaponMgr::AssembleExistingCursedWeaponLocation(char*, int,int *)
0x006161BC int __cdecl CEventMatch::TeamUnlock(class CSocket*, int)
0x00616304 int __cdecl CEventMatch::MatchStart(void)
0x00617250 int __cdecl CEventMatch::TeamLock(class CSocket*, int)
0x00617D88 int __cdecl CEventMatchBuilderCommandParser::Parse_create(class CSocket*, class User *, wchar_t *)
0x005FD5CC void CIndividualDuelPlayerOperation::Operate(class User*, class CDuelPlayerInfo *)
0x00618668 int __cdecl CEventMatchBuilderCommandParser::Parse_item_rule(class CSocket*, class User*, wchar_t *)
0x00618880 int __cdecl CEventMatchBuilderCommandParser::Parse_skill_rule(class CSocket*, class User*, wchar_t *)
0x00618A98 int __cdecl CEventMatchBuilderCommandParser::Parse_lock(class CSocket*, class User*, wchar_t *)
0x00618CF0 int __cdecl CEventMatchBuilderCommandParser::Parse_unlock(class CSocket*, class User *, wchar_t *)
0x00552074 bool `anonymous-namespace::PushEffectsIfInTime(struct CCreature::InfectedSkillType &,int,class std::xvectorclass CSkillEffect*, class std::xallocatorclass CSkillEffect* &,class std::xvectorunsigned int,class std::xallocatorunsigned int &,int)
0x0058C454 void CDB::RequestGetMonRaceBet(int)
0x007C5124 void CPledge::DismissPledgeByNpc(class CNPC *, class User *)
0x0097EBA0 CZzoldagu(const CZzoldagu& other) : CNPC(other)
0x00859E00 int __cdecl SSQSystem::GetTotalSealSelectionCount(enum SSQPart::type)
0x00478E18 int __cdecl SSQSystem::GetMemberCount(enum SSQPart::type) const
0x0072F90C bool NpcSocket::NpcXMasEventManagetEnter(class NpcSocket*, const unsigned char *)
0x006EFADC void CMultiPartyCommandChannel::CalcMPCCTeleportPointList(class std::xvectorclass FVector,class std::xallocatorclass FVector &,const class FVector &,int,int,int)
0x007E5554 void DismissPledge::ServeInternal(class User *)
0x008808B4 bool CPCTrap::CheckTrap(class CCreature &,bool)
0x0070AF60 void CMoveToTargetAction::OnEnd(bool)
0x005EAB94 void CDominion::SetPickupOwnThingName(wchar_t *)
0x004EAB68 void CCastle::OnStartInBattleField(class User*, class FVector &,bool &)
0x00765ABC void COlympiadField::RegisterMessage(unsigned char,int,int,bool)
0x0054A980 void CCreature::OnInfectedSkillBy(const class CSkillInfo &,bool)
0x00777A2C void COwnThing::HandleChangeSiegeState(class CDominion*, bool)
0x00823400 struct SkillAcquireInfo *__cdecl CSkillAcquireDB::GetPledgeSkillAcquireInfo(int,int)
0x00462DC0 bool CBlockUpset::_InsertBlockUpsetNpcToGround(int)
0x008BE3A0 bool User::IsNewChar(int)
0x006A7234 bool ItemManip::SimulateWithInventory(class CInventory &,struct std::pairint,__int64 &) const
0x00704D18 void CTreeLoc::DeleteTree(int)
0x0061FB50 class FVector CFieldCycle::GetRestartPoint(class FVector &,bool)
0x0059F2BC static bool ReplyFishingEventLoadStartTime(CDBSocket *socket, const unsigned char *packet)
0x0042042C class FVector CAirShip::GetTargetPos(class CCreature *, class CSkillInfo*, double)
0x0045B588 class FVector CBattleCamp::GetTeleportPos(void)
0x0067C2EC class FVector CInstantZone::GetSavingPos(class User *)
0x00679208 class FVector CInstantZoneConst::GetEndPos(class User*, class FVector,bool)
0x0059E910 static bool ReplyChangeSSQSealOwner(CDBSocket *pSocket, const unsigned char *packet)
0x00620AA8 class FVector CFieldCycleSystem::GetRestartPoint(class FVector,bool)
0x00867214 void CTeamBattleAgit::OnBossNpcDead(class CNPC *)
0x008BD838 bool CObjectMapclass User,8191,5,class RWLock::DeleteObject(int,char*, int)
0x005382D4 class FVector CCreature::GetPassingPosOnSight(const class FVector &,const class FVector &,enum PathFindResult &,class CCreature *)
0x005A0F60 static bool ReplyGetNoblessTop10(CDBSocket *socket, const unsigned char *packet)
0x005A13A8 static bool ReplyRenewSubJob(CDBSocket *socket, const unsigned char *packet)
0x005FE1C4 void IndividualDuel_Draw::OperateInternal(class User *, class CIndividualDuelPlayerInfo *)
0x0081C148 int __cdecl CSkillInfo::GetNormalReuseDelay(class CCreature *) const
0x00975D70 void CWorld::__async_AsyncDoorStatusUpdate(struct CExecutionArgumentPad *)
0x00887008 void CUndergroundColosseum::RegisterTeamToRecordBoad(int)
0x00620078 void CFieldCycle::SetPoint(int)
0x00839BA8 bool CSkillEffect_i_target_me::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2 *, double)
0x005FA090 void CDoorDB::SetDoorBreakable(bool)
0x0093994C bool AnswerJoinPledgePacket(class CSocket*, const unsigned char *)
0x007844B8 void CParty::Withdraw(class User*, bool)
0x0090755C void User::SendDominionStartEnd(bool)
0x005F0DC4 void CDominionManager::SendDominionChannelSet(bool)
0x004F18A8 void CCastle::GetAttackerPledge(class std::xvectorclass CPledge*, class std::xallocatorclass CPledge* &,class std::xvectorint,class std::xallocatorint &)
0x005E9AFC void CDeferredJob::ReserveNextDoer(User *pUser)
0x005E99C4 void CDeferredJob::ReserveDeferredJob(int nUserDbId, int nDeferredJobType, int nPledgeServerId)
0x005E970C void CDeferredJob::DoTimerJob()
0x006A4478 bool CItemUseCondition_classid::CheckPrivate(class CCreature *, class CItem *)
0x005E7114 void CDBSocketOp::SetHero(const unsigned char *)
0x008846CC void CUndergroundColosseum::OnHandOverPartyMaster(class CParty*, class User *)
0x0092BCEC bool PetGetItem(class CSocket*, const unsigned char *)
0x00675C10 void CLocalHtmlGenerator::AddValue(WCHAR *valueName, std::xwstring &value)
0x00913508 bool RequestDuelSurrender(class CSocket*, const unsigned char *)
0x00961018 CWatchItem* CWatchList::CheckWatchList(WATCHTYPE nType, int nObjId )
0x0051F510 class CCCRecordBoardData *__cdecl CCCRecordBoard::GetRecordData(class User *)
0x004ED57C void CCastle::SetChildFortress(class CFortress *)
0x00585AA0 void CDB::RequestViewSiegeList(class User*, unsigned int,const wchar_t *)
0x0082797C bool SkillEnchantNormal::Operate(class User *, int,int)
0x004C6C40 void BuilderCmd::ShowLines(class User &,class std::xvectorclass FVector,class std::xallocatorclass FVector &,int,unsigned char,unsigned char,unsigned char)
0x009365C4 bool AllianceCrestPacket(class CSocket*, const unsigned char *)
0x0062B3AC bool NFontCheck::Load( const WCHAR* filename)
0x00900A0C bool CBasicActionHandler_PACKAGE_PRIVATE_STORE::Handle(class User*, int,bool,bool,int)
0x0096C4AC void CWorld::__async_AsyncLoadStaticObject(struct CExecutionArgumentPad *)
0x007C719C bool CPledge::HasAcademyStudent(unsigned int)
0x00732D1C bool NpcOpenSiegeInfo(class NpcSocket*, const unsigned char *)
0x004793D0 bool BuilderCmd_mrend(class CSocket *, class User*, wchar_t *)
0x004AF254 bool BuilderCmd::show_line_by_adena(class CSocket*, class User*, wchar_t *)
0x006760F8 void CLocalHtmlGenerator::AddValue(wchar_t*, wchar_t *)
0x008EE694 void User::ResetWithdrawPenalty()
0x0081CF38 bool CSkillInfo::IsValidTarget(class CCreature*, class CObject*, bool)
0x004419E4 void AtomicSummonAirShip::Dump(void)
0x00581488 void CDB::RequestBuyItems(unsigned int,int,class User*, __int64,int,class CPledge*, int,int,char *) const
0x007F1B9C void CPVPMatchSystem::SetEnableCheckPartyMemberCount(bool)
0x0058E17C void CDB::RequestManBookMarkTelbyName(class User*, wchar_t *)
0x00706628 bool CMoveToTargetAction::OnTargetOutOfSight(int id)
0x005CB9A8 bool ReplyManPledgeBBS(class CDBSocket*, const unsigned char *)
0x0060AB90 void DxSaveNoblessType::DoServerJob(void)
0x0085D3F4 bool SSQSystem::DoAccount(void)
0x008EE74C void User::ResetOustedPenalty()
0x0047FC2C bool BuilderCmd_enchantskill_reset(class CSocket*, class User*, wchar_t *)
0x00838F20 bool CSkillEffect_i_cp::Instant(class CObject*, const class CSkillInfo *)
0x00581CF0 void CDB::ReqOwnCastle(int,int,int)
0x008597A8 void CSocket::__async_AsyncSend(void *)
0x005E6D20 void CDBSocketOp::CreatePet(const unsigned char *)
0x0057F55C void CDB::RequestDropItem(class CItem*, class User*, class FVector,enum SlotType,bool,__int64) const
0x0054B50C bool CCreature::ToggleSkillOnOff(int,bool)
0x005A01B0 bool ReplyLoadPremiumItemsForBatchPacket(class CDBSocket*, const unsigned char *)
0x006BF358 void CManor::ReadLock(const wchar_t *, int)
0x005366A8 double CCreature::AvoidCorrection(void)
0x00624AEC void CFishingDB::Add(class CFishingMonsterInfo *)
0x00832F00 __cdecl CSkillEffect_i_dispel_by_slot_myself::CSkillEffect_i_dispel_by_slot_myself(wchar_t *)
0x007C9D50 void CPledge::SetPowerGrade(int,unsigned long)
0x00664DA8 void ListFriendHtmlBuilder::BuildHtmlInternal()
0x00662C84 void ListFriendHtmlBuilder::Build2Packet()
0x00662A4C void ListFriendHtmlBuilder::Build1Packet()
0x0065CCB4 void ListFriendHtmlBuilder::SendHtml()
0x00672CBC void ListFriend::ExecuteInternal()
0x0066D990 void ListFriend::ParseParameter()
0x007FE120 void CResidence::SetNextSeedInfo(int,int,int,int,int,__int64,__int64)
0x008D78EC bool User::CanDoAction_china(void)
0x00834D24 bool CSkillEffect_i_mp_by_level::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x00463354 void CBlockUpsetManager::ChangeBlockUpsetNpcAmount(int,int)
0x00734DCC bool NpcCheckCursedUser(class NpcSocket*, const unsigned char *)
0x0043C300 const unsigned char *__cdecl AtomicParamChange::Disassemble(const unsigned char *)
0x0077C0C8 void CParty::SetMaster(class User *)
0x005DB0C8 bool ReplyResetUserNickname(class CDBSocket *, const unsigned char *)
0x0063D1E4 bool CFortressBuilderCmdHandler::BuilderCmd_SiegeRegister(class CSocket*, class User *, wchar_t *)
0x00901DFC bool CUserBasicAction::HandleAction(class User*, int,bool,bool)
0x00711144 bool CSkillAction2::CheckAttackable(double,double,double,double,double,double,int,int)
0x00840684 bool CSkillEffect_p_cp_regen_by_move_mode::CheckPumpCondition(class CCreature *)
0x00590290 void CDB::RequestModifySendMail(class User*, int,wchar_t*, wchar_t*, wchar_t *, class CMailListParameter &)
0x0073C80C bool RadarControl(class NpcSocket*, const unsigned char *)
0x00581380 void CDB::RequestSellItems(unsigned int,int,class User*, __int64,int,int,char *) const
0x008A2EC4 bool User::_OnTransform(bool)
0x00488C90 bool BuilderCmd::create_pet(class CSocket*, class User*, wchar_t *)
0x0091EAFC bool CUserSocket::RequestEnchantItemPacket(class CSocket*, const unsigned char *)
0x004EDF94 void CCastle::ExpelNonPledgeMember(void)
0x0076F4A4 bool COlympiadFuncHandler::PreCheck(void)
0x0058CC68 void CDB::EquipHenna(class User*, int,__int64,__int64,int,int)
0x0042C1D4 class CAirShipConst *__cdecl CAirShipManager::_CanSummonFreeAirShip(class User*, enum AirShipTypeEnum,int,int,struct CAirShipManager::SummonParams &)
0x00524BC4 class CAirShip *__cdecl CCreature::GetMyAirShip(void)
0x009512D8 class Option *__cdecl OptionGroup::GetOption(void)
0x00843C14 bool CSkillOperateCondition_can_summon::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x00417FD4 bool AirShipManagerHelper::CanBuy(class User*, enum AirShipTypeEnum)
0x00572800 bool CCubic::PushTimeSkill(const struct CubicSkillInfo &)
0x00652AB0 void CHeroSystem::SetHeroWords(int,const wchar_t *)
0x0044F668 class CAuction *__cdecl CAuctionManager::GetAuction(int)
0x0083F7D4 bool CSkillEffect_p_pvp_physical_attack_defence_bonus::Pump(class CCreature*, const class CSkillInfo *, int)
0x00605954 void DxChangeSSQStatus::DoServerJob(void)
0x00932EA4 int __cdecl CSocketLimiter::IncUserSocketPerIP(unsigned int)
0x008AAFB8 void BuilderCmdHistory::AddCmd(wchar_t*, wchar_t *)
0x00430318 int __cdecl AltitudeHelper::ChangeAltitude(int,enum AltitudeActionType)
0x004F3468 void CCastle::SetCastleSiegeRole(bool)
0x008FA1EC void User::TurnOffSummonSoulShot(void)
0x00781728 bool CParty::IsAllPartyMemberSamePledge(void)
0x005FD804 void CDuel::Start(void)
0x0062EA64 bool CFortressBuilderCmdHandler::BuilderCmd_FlagCaptured(class CSocket*, class User*, wchar_t *)
0x0088D3B0 bool User::SetStopLogin(unsigned long)
0x00601AC0 void CPartyDuel::OnPlayerLeaveWorld(class User *)
0x006351D8 void CFortressFlagpole::CapturedInFortressSiegeBy(class User *)
0x00893204 bool User::OnReplyPickCursedWeapon(class CItem &)
0x006DFF5C void CMonRaceHTML::MonRaceKeeper(void)
0x006DCF14 void CMiniGameAgit::MakeSelectedEntry(bool)
0x0043E188 int __cdecl AtomicStartObserver::Assemble(char*, int)
0x0077F018 void CParty::UpdateWindowPacket(class User*, int)
0x005A1950 bool ReplyNPCPickItemPacket(class CDBSocket *, const unsigned char *)
0x0059BE20 void CDB::MakeOnReconnectedPlayerlist(void)
0x004465C0 bool AtomicTeleportTo::Do(void)
0x008EF394 void User::SetPledge(class CPledge *)
0x0082FE9C bool CSkillOperateCondition_remain_hp_per::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x007D7A80 void CPledge::SendDominionStartEnd(bool)
0x0067B0C0 class CInstantZoneGroup *__cdecl CInstantZoneDB::GetInstantZoneGroup(int)
0x009297B8 void CUserSocket::ForceClose(void)
0x005BC7B4 bool BBSGetComment(class CDBSocket*, const unsigned char *)
0x007FCE34 void CExpelTimer::WriteLock(const wchar_t*, int)
0x00755800 bool NpcRegisterUserResurrectionTower(class NpcSocket*, const unsigned char *)
0x007AB620 void CSummon::SetMaster(class User *)
0x00745940 void CUserNotifier::TimerExpired(int)
0x00719384 void CNPC::ReportOrt(char *caller, int line, int nWorkType)
0x00491B28 bool BuilderCmd_set_siege(class CSocket*, class User *, wchar_t *)
0x006DA518 void CMiniGameAgitPlayerEntry::BuilderCmd_ShowInfo(class CUserSocket *)
0x004F5DA4 void CChair::BroadcastSittingUser()
0x0063EF90 void CFortress::TimerExpired(int)
0x0048E244 bool BuilderCmd_critannounce(class CSocket*, class User*, wchar_t *)
0x0043224C void CShipController::ActionBroadcastStopMove(bool)
0x0072972C bool CNPC::Die(class CCreature *)
0x0097E570 class CYearCatchEventInfo *__cdecl CYearCatchEventMgr::Find(void)
0x008A7B80 void User::SendQuestList(class CUserSocket *)
0x00846D78 bool CSkillEffect_i_backstab::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x0045DCCC void CBlockUpsetManager::RegisterManagerNpcId(int,int)
0x0094EDF4 int __cdecl GetInitialClassType(int)
0x00416054 bool CAgitHTML::SellActionReply(int,__int64,int,wchar_t*, int,int)
0x007039A8 bool CAttackAction::OnStart(void)
0x00424618 bool CAirShipManager::_OnBuyAirShip(class User*, unsigned int,int,int,unsigned int,int)
0x0049B710 bool BuilderCmd_subjob(class CSocket*, class User*, wchar_t *)
0x00433BF0 bool CAlliance::CanAcceptNewMemberPledge(void)
0x0084398C bool CanSummon(class CCreature*, const class CSkillInfo*, bool)
0x0041E7CC const class FVector &__cdecl CAirportPlatform::GetTakeOffPath(int)
0x0091B9F8 bool UserPacketEx::StartRequestPVPMatchRank(class CSocket*, const unsigned char *)
0x00943F9C bool HtmlCmdManorMenuSelect(class CUserSocket*, class User*, const wchar_t*, const wchar_t *)
0x0043AECC bool CArea::SetBannedTerritoryOnOff(int,bool)
0x0068FD4C void CIOServer::OnIOCallback(int,unsigned long,struct _OVERLAPPED *)
0x00444F5C bool CAtomicSaveQuestInfo::Do(void)
0x0067C7C8 bool CInstantZone::SetBannedTerritoryOnOff(class CArea*, int,bool)
0x0059FCAC bool ReplyGetLastStartTime(class CDBSocket*, const unsigned char *)
0x008180F8 void CSiegeAgit::OnBossNpcDead(class CNPC *)
0x007AEB80 bool CNormalRidingInfo::IsMealTime(void)
0x00834184 bool CSkillEffect_i_Enchant_Attribute::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2 *, double)
0x005AAEB0 bool ReplyGetLastBirthdayGiftDate(class CDBSocket*, const unsigned char *)
0x006DDF2C void CMiniGameAgit::TimerExpired(int)
0x006CFD58 CMemoHTML::~CMemoHTML()
0x008D9724 void User::GiveEventItem(int,__int64,int,__int64,int,int)
0x0063D8A8 void CFortressSiege::Resume(enum FortressSiegeResumeType,struct FortressSiegeResumeInfo)
0x006C2ED8 void CManor::SayNeedSeedMoney(class User *)
0x006A05DC void CAccessary_ORT::ReportOrt(char *caller, int line, int nWorkType)
0x00449434 bool CSharedCreatureData::SetNRMemoState(int,int,int)
0x0097DC8C int __cdecl CXmasSantaEventMgr::GetEventBuffId(class User *)
0x007A9180 bool CPCCafeEventMgr::CanGiveDailyPoint(unsigned int)
0x0068C708 void CInventory::LogByInventoryOverType(enum InventoryOverType,class CCreature*, class CItem *, __int64)
0x00418B0C void CTLPipeBasestruct CTL_WorldMapNode2,3000,8::CThreadPipe::Read(class CTLPipeBasestruct CTL_WorldMapNode2,3000,8::CReadCallback *)
0x0047FCD4 bool BuilderCmd_partyroom(class CSocket*, class User *, wchar_t *)
0x008B496C bool User::IsInAgitWar(void)
0x009343E0 bool SayPacket2(class CSocket*, const unsigned char *)
0x00733300 bool NpcStopMove(class NpcSocket*, const unsigned char *)
0x0079B8D4 void CMPCCRoom::GetPartyMemberWithPM_WindowOpen(class std::xvectorclass CSPointerclass CRoomMember,class std::xallocatorclass CSPointerclass CRoomMember  &)
0x007323DC bool NpcSocialAction(class NpcSocket*, const unsigned char *)
0x0057FDA0 void CDB::SendTradeCommit(class User*, class User*, int,int,char*, int,int,char *) const
0x00825278 int __cdecl SkillEnchantOperator::CalculateBaseProb(const struct SkillEnchantInfo*, int)
0x007123F0 bool CSkillAction2::ValidateTarget(class CCreature *)
0x0094DD20 int UnicodeToAnsi(WCHAR* unistr, int maxunilen, char* ansistr, int maxansilen)
0x0045EC1C bool CBlockUpsetManager::SetBlockUpsetWinner(int,enum BlueRedTeam::Enum)
0x0062DC74 void CFortress::AddCastleTreasureTakenLog(class User *, int)
0x0091EBE4 bool CUserSocket::DestroyItem(class CSocket *, const unsigned char *)
0x0080053C void CResidence::SetFreezeField(bool)
0x007E89FC int __cdecl GetIntEx(struct _iobuf *)
0x00663AEC void CastleListHtmlBuilder::BuildHtmlInternal()
0x00665F64 void CastleListHtmlBuilder::Show(unsigned int userServerId, int userCommLocalCommunityBid)
0x007FC1A4 void CResidence::SetMaxChangeRateToAllManor(double)
0x0089626C void User::SendUserConnectedEvent(void)
0x00411B84 void CAgitHTML::AgitSale3(int,int,wchar_t *)
0x0073CC5C bool NpcAgitAuction(class NpcSocket *, const unsigned char *)
0x00834794 bool CSkillEffect_i_hp_per_max::Instant(class CObject*, const class CSkillInfo *)
0x00817E50 void CSiegeAgit::SendSiegeDefenderList(class CUserSocket*, class User *)
0x00525570 void CCreature::Delete(void)
0x008F6F70 void `anonymous-namespace::LeaveOnlyLearnableSkills(class User &,class std::xmapclass CSkillKey,struct User::AcquireInfo,struct std::lessclass CSkillKey,class std::xallocatorstruct std::pairclass CSkillKey const ,struct User::AcquireInfo  &)
0x007B968C void CPetitionCli::SetDisableTime(int t1, int t2)
0x004ABCA8 bool BuilderCmd::set_damage(class CSocket*, class User*, wchar_t *)
0x005C9C7C bool ReplyEquipHenna(class CDBSocket*, const unsigned char *)
0x004B02F0 bool BuilderCmd::show_b_terri(class CSocket *, class User*, wchar_t *)
0x00593FFC void CDB::RequestSaveFortressContractInfo(int,int,int)
0x00462A18 void CBlockUpset::OnNpcServerClosed(void)
0x0053B8EC bool CCreature::IsInItemGradePenalty(void) const
0x00816D1C void CShortCut::SendShortCutInfo(void)
0x00551A30 bool CCreature::CheckTriggerSkillCondition(class CSkillInfo &,class CObject &)
0x007C0C68 void CPetitionSocket::Send(const char* format, ...)
0x00864C78 int __cdecl CTeamBattleAgit::GetPledgeRegisterStatusForNpcServer(int)
0x008582BC bool CSkillEffect_p_block_buff_slot::Pump(class CCreature*, const class CSkillInfo*, int)
0x005F2950 void CDominionSiegeEntry::SendDominionEvent(bool)
0x0052A20C bool CSharedCreatureData::AddAbnormalStatus(enum AbnormalStatusSlotType,unsigned char,int)
0x00739460 bool NpcSayPacket(class NpcSocket*, const unsigned char *)
0x008E10C4 void User::WithdrawPremiumItem(__int64,__int64)
0x0091584C bool ReplyMPCCPartyMasterList(class CSocket *, const unsigned char *)
0x007CFBD4 void CPledge::CreateSubPledgeByNpc(class CNPC*, class User*, enum PledgeType,const wchar_t*, const wchar_t *)
0x0085A4B8 bool SSQSystem::StartAccount(void)
0x0089EADC void User::_OnCancelTransform(void)
0x007ECBB0 bool CPremiumService::PushJob(CBillingJob* pBillingJob)
0x007CF168 bool CObjectMapclass CPledge,1,5,class RWLock::ExistKey(int)
0x0041BA24 void CAirShip::TeleportToLocation(int,int,int,unsigned int,int)
0x005FD91C void CIndividualDuel::OnReady(void)
0x00462B20 void CBlockUpset::_AddBlockUpsetNpc(int)
0x007E2A84 bool CPledgeMemberList::ChangeMemberName(unsigned int,wchar_t *)
0x005784AC void CCursedWeaponMgr::LoadFromScript(void)
0x0052E354 void CCreature::ChangeTalkTarget(class CObject *)
0x0059B668 void CDB::RequestLoadAllControlTower(class CResidence *)
0x00586E74 void CDB::RequestSaveCastleIncome(int,__int64,__int64,int)
0x005FBF2C void CDuel::PlayerLeaveWorld(class User *)
0x0058AFAC void CDB::RequestUnregisterTeamBattleAgitMember(class CTeamBattleAgit*, class User *)
0x007B65AC void CPetManager::DeleteAll(void)
0x007FCA20 void CResidence::SetChildTaxRates(int)
0x00690D50 int __cdecl CIOObject::RegisterWait(void *)
0x007DAC08 bool CPledge::AcquireSubPledgeSkillAndSave(enum PledgeType,unsigned int,int,bool,bool)
0x0047AC18 bool BuilderCmd_setcastleincome(class CSocket*, class User*, wchar_t *)
0x007CD480 bool CPledge::CanCreateSubPledge(enum PledgeType)
0x00907C1C void User::SendNicknameChanged(void)
0x00582774 void CDB::SendAcquiredSkill(int,int,int,bool)
0x007D3BA8 bool CPledge::CanPledgeSkillAcquire(const struct SkillAcquireInfo &)
0x0068B758 bool CInventory::UseLure(int,__int64)
0x008A3C5C void User::ProcessMyParty(bool)
0x006E1CB4 void CMonRaceDB::BroadCastSound(void)
0x0088E830 void User::PlayScene(int)
0x0051F6A8 class CCCRecordBoardData *__cdecl CCCRecordBoard::GetRecordBoardData(int)
0x00418448 void CAirShip::OnValidateLocation(class FVector)
0x0075DA58 void CContributeData::HandleKillPVPPoint(class User*, class User *)
0x0066B684 void WriteMailForm::ParseParameter()
0x00658784 void WriteMailFormHtmlBuilder::DisassemblePacket()
0x008436DC bool CSkillEffect_c_chameleon_rest::Consume(class CObject*, double)
0x00672E24 void WriteMailForm::ExecuteInternal()
0x004B0FE8 bool BuilderCmd::set_bot_count(class CSocket*, class User*, wchar_t *)
0x00728890 class CBoss *__cdecl CUniqNPCDB::GetBossNPC(int,int)
0x0057F010 void CDB::RequestLoadItems(unsigned int,class User *) const
0x006D89B8 int __cdecl CMiniGameAgit::RemoveEntryPledge(class CPledge *)
0x004847D4 bool BuilderCmd_CanSee1(class CSocket*, class User*, wchar_t *)
0x006D9634 int __cdecl CMiniGameAgit::GetUnreturnedPoint(unsigned int)
0x006D7848 int __cdecl CMiniGameAgitRegistPledgeEntry::Unregist(unsigned int)
0x0069B8E4 int __cdecl CConvertItemDB::GetConvertItem(int)
0x006D8890 int __cdecl CMiniGameAgit::AddEntryPledge(class CPledge*, int)
0x006D7AFC int __cdecl CMiniGameAgitRegistPledgeEntry::GetPoint(unsigned int)
0x0042D4EC void BuilderCmdHelper::AirShipInfo(class User*, wchar_t *)
0x0087EF2C int __cdecl CTransform::GetSkillLevel(int,int)
0x008893A0 void CSharedCreatureData::InitDailyQuest(void)
0x007ADEA4 void CPet::UnequipWeapon(void)
0x005ED980 class FVector CDominion::GetPos(class COwnThing *)
0x0062B72C bool NFontCheck::Init()
0x0044900C bool CSharedCreatureData::SetMemo(int)
0x00436D74 void CAreaDB::OnSunrise(bool)
0x00841BBC bool CSkillEffect_p_cheapshot::PumpEnd(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpEndType) const
0x00841174 bool CSkillEffect_p_block_chat::PumpStart(class CCreature &,class CCreature*, const class CSkillInfo *, enum SkillPumpStartType) const
0x0065CEE4 void SendPledgeMailHandler::SendMsg()
0x0065D4AC void SendPledgeMailHandler::SendHtml()
0x0066BD9C void SendPledgeMail::ExecuteInternal()
0x004A3BCC bool BuilderCmd::movetest(class CSocket*, class User *, wchar_t *)
0x0055178C void CCreature::CheckCubicExpired(void)
0x0059EE74 static bool ReplyLoadAllItemExpirationPacket(CDBSocket *socket, const unsigned char *packet)
0x008DE5A4 void User::SendRecipeInfo(int,int)
0x006E6DA8 void CMonRaceHTML::MonRaceBuy4(int,int,int)
0x00585500 void CDB::RequestPrepareCastleWar(class User*, class CCastle *, class CPledge *, int,int)
0x007C79A4 wchar_t *__cdecl CPledge::GetMemberName(unsigned int)
0x005BCD2C bool BBSWriteComment(class CDBSocket*, const unsigned char *)
0x004B3E74 bool BuilderCmd_load_pledge(class CSocket*, class User*, wchar_t *)
0x007D6F90 void CPledge::SendDominionEventToAllOnlineMember(int,int,int)
0x0058FB10 void CDB::RequestSendMail(class User*, int,int,wchar_t*, wchar_t*, wchar_t*, class CMailListParameter &)
0x00814964 int __cdecl SharedTimeAttackInfo::SetRewardFlag(int,int)
0x0049F1C4 bool BuilderCmd::jump_packet(class CSocket*, class User*, wchar_t *)
0x00814A14 int __cdecl SharedTimeAttackInfo::IsMember(int) const
0x00534614 bool CCreature::IsCloserThan(class CCreature*, const class FVector &)
0x0073F938 bool NpcShowSellSeedList(class NpcSocket*, const unsigned char *)
0x0083EBDC bool CSkillEffect_p_physical_defence_by_hp1::Pump(class CCreature*, const class CSkillInfo*, int)
0x0089E590 bool User::OnReplyUseItemPacket(int,__int64)
0x005C5E10 bool ReplyCreateAgitBid(class CDBSocket*, const unsigned char *)
0x0059EFAC static bool ReplyDeleteExpiredItemPacket(CDBSocket *socket, const unsigned char *packet)
0x0072EB68 bool NpcAgitTeleportLevel(class NpcSocket*, const unsigned char *)
0x0049AED0 bool BuilderCmd_declare_alliance_war(class CSocket*, class User*, wchar_t *)
0x00756AC8 bool NpcSocket::NpcCleftUserEnter(class NpcSocket*, const unsigned char *)
0x005F420C void CDominion::ResumeSiege(void)
0x004CC91C bool BuilderCmd::summon_option_random(class CSocket*, class User*, wchar_t *)
0x00742F44 bool NpcMusicEffect(class NpcSocket *, const unsigned char *)
0x006BC7DC int TimeAttackBoard::MakeTimeAttackInfo(char *outBuf, int nBufSize)
0x008B6848 void User::ClearInZoneRestriction(void)
0x007751F8 void COlympiadSystem::DoMatch(void)
0x0046305C void CBlockUpset::ChangeBlockUpsetNpcAmount(int)
0x005D609C bool CreateCharacterSuccessPacket(class CDBSocket*, const unsigned char *)
0x008FBB84 void User::DespawnAgathion(int)
0x0059EBE0 static bool ReplyLoadNobless(CDBSocket *socket, const unsigned char *packet)
0x008F2EF4 void User::UnequipWeapon(void)
0x007F6C94 int __cdecl CPVPMatchSystem::RegisterParty(unsigned int,unsigned int)
0x008D6DD0 bool User::IsItemUsable(void)
0x00469544 CBoss(const CBoss& other) : CNPC(other)
0x004C8CD8 bool BuilderCmd_Dice(class CSocket*, class User*, wchar_t *)
0x007E4C5C void CSendPledgeSkillAdd::ServeInternal(class User *)
0x007F559C void CPVPMatchSystem::UserDie(class User*, class User *)
0x007D5B34 void CPledge::GetAllMember(class std::xvectorclass User*, class std::xallocatorclass User* &,bool)
0x0077AB38 std::xwstring CParseHTML::MakeHTMLFromStrTemplet( int nTempletId, StrStrMapType &mapData)
0x007541F8 bool NpcRegMakerEvent(class NpcSocket*, const unsigned char *)
0x007C8958 bool CPledge::IsValidNameValue(void)
0x004DBD20 bool BuilderCmd_olympiad(class CSocket*, class User*, wchar_t *)
0x00692FB0 void CItem::Set(enum ObjectFieldType,double)
0x006BFD5C void CManor::ClearSeedData(void)
0x00562BFC bool CCreature::ValidateLevel(void)
0x0094C8C0 bool HtmlCmdUpgradeSubPledgeMemberCount(class CUserSocket*, class User*, const wchar_t*, const wchar_t *)
0x004A5E3C bool BuilderCmd_NpcPingTime(class CSocket*, class User*, wchar_t *)
0x0097976C bool CWorld::AirShipTeleport(class CAirShip *, class FVector,unsigned int,int)
0x0063DC08 void CFortressSiege::TimerExpired(int)
0x0088A948 void User::SetDBID(unsigned int)
0x006BB2C8 void CLogSocket::OnRead(void)
0x00923800 bool ConfirmDlg_WithdrawAuctionBid(class CUserSocket *, class User*, bool,int)
0x008DB130 bool User::RequestPrivateStore(void)
0x0086CB44 bool CTerritory::GoFirstPoint(class CCreature &)
0x005EE4E8 void CDominionSiegeEntry::SendDominionEventToPledge(bool)
0x009162F8 bool UserPacketEx::TryToPutItemForVariationMakePacket(class CSocket*, const unsigned char *)
0x0048408C bool BuilderCmd_SetTutorial(class CSocket*, class User*, wchar_t *)
0x0080318C void CResidence::TributeToParentResidence(unsigned int)
0x00550CA4 bool CCreature::SummonCubic(int,int,bool)
0x0043D1A8 int MemoControl::Assemble(char *outBuf, int nBufSize)
0x00757D58 void CObject::Set(enum ObjectFieldType,__int64)
0x0095A9EC void CWareHouseWithdraw::IsInRange()
0x006B6F20 void CXMasTimer::Init(void)
0x006DD7D4 bool CMiniGameAgitDBHandler::ReplyResetMiniGameAgit(class CDBSocket*, const unsigned char *)
0x0058FC7C void CDB::RequestSendPledgeMail(class User*, wchar_t *, wchar_t *)
0x004A73D0 bool BuilderCmd_PathfindTest(class CSocket*, class User*, wchar_t *)
0x0087F1AC class CTransform *__cdecl CTransformDB::Find(int,enum SexType)
0x00598014 void CJobFinishSignal::SetFortressLoaded(void)
0x0057D374 bool CCursedWeaponBuilderCmd::Delete(class CSocket*, class User*, wchar_t *)
0x00503C70 void CCommCli::RequestBBSDelete(User *pUser, int nId, int nBoardType, int nBid, int nCommentId, int nOption)
0x00504F74 void CCommCli::RequestClanBBSInit( User* pUser , int nWorldId)
0x00503134 void CCommCli::RequestBBSReply(User *pUser, int nId, int nBoardType, int nBid)
0x00503980 void CCommCli::RequestBBSModifyForm(User *pUser, int nId, int nBoardType, int nBid)
0x00503808 void CCommCli::RequestBBSSearch(User *pUser, int nId, int nBoardType, int nPage, int nOption, WCHAR* sString)
0x005787EC bool CCursedWeaponMgr::BuilderMake(class CNPC*, int)
0x00549950 class CSkillInfo *__cdecl CCreature::GetUsableSkill(int)
0x0054B1F4 class CSkillInfo *__cdecl CCreature::GetActiveSkill(int,int &)
0x007117F4 class CSkillInfo *__cdecl CSkillAction2::GetSkillInfo(class CCreature *)
0x00502DBC void CCommCli::RequestBBSReadThread(User *pUser, int nBoardId, int nBid, int nSearchOption, int nReadOption, int nListPage, int nBoardType, WCHAR* sSearch, int nCommentPage, int nThreadPage)
0x007AB6E8 class User *__cdecl CSummon::GetUserOrMaster(void)
0x0059ACD0 void CDB::SendLogout(class User *) const
0x00780648 class User *__cdecl CParty::GetMasterCandidate(void)
0x0077DAE0 class User *__cdecl CParty::GetMember(unsigned int)
0x0088BD70 class User *__cdecl User::GetTargetOrMe(void)
0x00589730 void CDB::RequestLoadWarehouseEx(int,int,class User*, int) const
0x00439E84 void CArea::AddSkillInfo(class std::xvectorint,class std::xallocatorint &)
0x007B1000 class User *__cdecl CSummon::GetMaster(void)
0x005A2C80 bool ReplyPledgeMasterTransferCancel(class CDBSocket *, const unsigned char *)
0x005A24B4 bool ReplyUpgradeSubPledgeMemberCount(class CDBSocket*, const unsigned char *)
0x00495668 bool BuilderCmd_unsetpower(class CSocket*, class User*, wchar_t *)
0x007362A0 bool NPCSetTrapWorldVisible(class NpcSocket *, const unsigned char *)
0x007C3CB0 void CPledge::SetDominion(class CDominion *)
0x007CDDC8 void CPledge::SendPledgeSkillList(class User *)
0x00861E6C void CThreadLocalWorldMap210000,20000,8::Remove(int,class CObject *)
0x006D7C78 int __cdecl CMiniGameAgitRegistPledgeEntry::CheckValidPledge(unsigned int,bool)
0x008916B0 bool User::IsMyManor(int)
0x00614828 void CEventMatch::DispelAll(void)
0x00847364 bool CSkillEffect_i_event_agathion_reuse_delay::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x0072EE4C bool NpcGetDoorHpLevel(class NpcSocket*, const unsigned char *)
0x00866E14 void CTeamBattleAgit::PassSiege(void)
0x004459A4 bool AtomicDropItem2::Do(void)
0x008F96FC void User::ValidateItemSkills(void)
0x008A58BC void User::ObserverEnd(void)
0x00720B98 bool CNPC::TeleportToLocation(int,int,int,unsigned int,int)
0x004E9D40 void CCastle::BroadcastToAttacker(int)
0x00481DD4 bool BuilderCmd_destroy_all_inven_item(class CSocket *, class User*, wchar_t *)
0x008FB46C void User::OnSpawnPCTrap(class CPCTrap &)
0x00588D0C void CDB::RequestPetDropItem(class CPet*, class CItem*, unsigned int)
0x0097956C void CWorld::VehicleLeaveWorld(class CVehicle *)
0x0085AFC0 enum SSQPart::type SSQSystem::GetSealOwner(enum SSQSeal::type) const
0x00638644 void CFortressSiege::BroadcastSystemMessageW(int,wchar_t *)
0x0080B8B0 class CIOSocketExclass CIOBufferEx16384 *__cdecl Server::CreateSocket(unsigned __int64,struct sockaddr_in *)
0x00735D48 bool NPCTeleportToUser(class NpcSocket*, const unsigned char *)
0x0092F924 bool BuyPacket(class CSocket*, const unsigned char *)
0x00702F7C bool CMoveRelativeAction::SetMoving(void)
0x0090039C bool CBasicActionHandler_TRADE::Handle(class User*, int,bool,bool,int)
0x005F73B4 void CDoor::ValidateDamageGrade(void)
0x004ED3E4 void CCastle::AddRelatedFortress(class CFortress *)
0x0043C0B8 AtomicCreatePet::Disassemble(const unsigned char *packet)
0x008948B8 bool User::ValidateOrgMAttack(void)
0x005462D0 void CCreature::GatherNeighborAirShip(class FVector,class CCreature*, class CSkillInfo*, bool)
0x00927460 bool WithdrawAlliancePacket(class CSocket*, const unsigned char *)
0x0071A40C void CNPC::Set(enum ObjectFieldType,double)
0x00468814 bool CBlockUpsetManager::RemoveBlockUpsetWaitingPlayer(int)
0x00603584 void CDuel::PlayerStatusUpdate(class User *)
0x0046FA08 void CBotReportAgent::SetAvailablePointAndReuseDelay(int,int)
0x0082FBD4 bool CSkillOperateCondition_build_advance_base::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x007CBF4C void CPledge::SystemMessage(int,int)
0x0059F894 bool ReplyLargePacket(class CDBSocket*, const unsigned char *)
0x00639484 void CFortressSiege::CreateAllFlags(void)
0x0057C458 void CCursedWeaponMgr::ReplyPickCursedWeaponFromDB(class CItem*, class User*, const unsigned char *)
0x006EDF0C class CNPC *__cdecl CMultiPartyCommandChannel::GetRoutingNpc(void)
0x007287A8 class CNPC *__cdecl CUniqNPCDB::GetUniqNPC(int,int)
0x00761AF4 class CObject *__cdecl CObjectDB::GetObjectW(int,bool) const
0x0081C410 bool CSkillInfo::CanActivateSkill(class CCreature*, class CObject *) const
0x005C0140 bool ReplyWithdrawAlliance(class CDBSocket*, const unsigned char *)
0x007AD55C bool CPet::ValidateOrgMDefend(void)
0x00694BCC void CSetItem::SetEffectParam(enum ObjectFieldType,int,int)
0x0056AAB4 bool CCreature::DispelByIdLevelMySelf(int,int)
0x009CD7EC int __cdecl CLexerForSecureINI::create(class CParserForSecureINI*, const wchar_t *)
0x00921214 bool RemainCoolTimePacket(class CSocket*, const unsigned char *)
0x00595D80 void CDB::DeleteUserBookmarkSlot(class User *, int)
0x00966A2C bool CWorld::GetOnAirShip(class CCreature*, class CAirShip *)
0x006D4628 void CMerchant::AddSellingGood(struct GoodStruct *)
0x004B5458 bool BuilderCmd_defend_reject(class CSocket *, class User*, wchar_t *)
0x005F23C0 void CDominion::MakeEntry(void)
0x006A1E80 class CObject *__cdecl CEtcItem::Copy(void)
0x006A1D08 class CObject *__cdecl CArmor::Copy(void)
0x0069D900 class CObject *__cdecl CItem::Copy(void)
0x00685F9C class CObject *__cdecl CInstantZone::Copy(void)
0x00589540 void CDB::RequestAddBlockList(class User*, wchar_t*, bool) const
0x006A1A18 class CObject *__cdecl CAccessary::Copy(void)
0x0041C9F0 void CSmartIdManagerclass CAirShip,1000,8::DeleteObject(unsigned int)
0x00761C5C class CObject *__cdecl CObjectDB::GetObjectByName(wchar_t *const ) const
0x006AD600 void CThreadLocalWorldMap2900000,112500,8::CTL_Map2::Remove(int)
0x00501A68 class CObject *__cdecl CCollection::Copy(void)
0x008FC9E4 bool User::CanDismountOnGround(bool,bool &)
0x0097122C bool CWorld::StaticObjectAppear(class CStaticObject*, class FVector)
0x005A45A4 bool ReplySetCastleSiegeDefenceCountEx(class CDBSocket*, const unsigned char *)
0x0040FBC4 bool CAgitHTML::SaleCancelRequest(void)
0x00923670 bool ConfirmDlg_Resurretion(class CUserSocket*, class User*, bool,int)
0x007F2838 bool CPVPMatch::_IsBannedUser(int) const
0x007D1B00 void CPledgeTimer::CancelDismiss(unsigned int)
0x007AE284 bool CPet::Usable(class CItem *)
0x00764E9C bool COlympiadField::CheckGameExit(void)
0x0087E2B8 void CTransformCommonData::SetAction(class std::xvectorint,class std::xallocatorint &)
0x0080ACE4 void CSerializedDisappearMessage::OnHandle(class CCreature *)
0x0058AE44 void CDB::RequestUnregisterTeamBattleAgitPledge(class CTeamBattleAgit*, class CPledge*, class User *)
0x008273D4 bool SkillEnchantOperator::CheckNpcEnchantSkillSuggestion(int,int,int,int,struct SkillEnchantInfo *&,class User *&)
0x0095646C void CVehicleController::AddStation(class CVehicleStationInfo *)
0x009123B8 RequestBrBuyProduct()
0x00836D28 bool CSkillEffect_i_install_advance_base::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x007F67CC int __cdecl CPVPMatchSystem::GetRegisteredPartiesPacket(unsigned int,char*, int)
0x00472DF8 int __cdecl CInventory::GetRuneItemCount(enum MaterialType)
0x005B2FA4 void CDBSocket::Send(const char*, ...)
0x0083F400 bool CSkillEffect_cub_block_act::Pump(class CCreature*, const class CSkillInfo*, int)
0x00676D8C int __cdecl CInstantZoneGroup::GetLatesetResetBindingDay(int,int)
0x00482EB4 bool BuildeCmd_SetEconomicRestriction(class CSocket*, class User*, wchar_t *)
0x00415810 void CAgitHTML::AgitBidCancel(int)
0x008281F8 bool SkillEnchantSafe::Operate(class User*, int,int)
0x008119B4 void CContainerDB::FreeAirShipContainer(class CContainer *)
0x00578380 void CCursedWeaponConstInfo::SendCursedWeaponList(class CUserSocket *)
0x0073A4A4 bool NpcShowHTMLString(class NpcSocket*, const unsigned char *)
0x005880E4 void CDB::DeletePet(int,int,int,int,int)
0x00605A6C void DxCloseSevenSignQuest::DoServerJob(void)
0x0048A324 bool BuilderCmd_settime(class CSocket*, class User*, wchar_t *)
0x0056F2C8 void CCreatureController::ActionBroadcastSkillUse(class CObject &,class CSkillInfo*, int,int,class CSkillAction2*, class std::xvectorclass FVector,class std::xallocatorclass FVector *)
0x00776B18 void COwnThing::BroadcastMessage(enum COwnThing::OwnThingBroadcastType,wchar_t*, bool)
0x007F1A44 bool CPVPMatchSystem::CPVPPointTimeBlock::IsValid(void)
0x0096BD60 void CWorld::__async_AsyncAirShipEnterWorld(struct CExecutionArgumentPad *)
0x00918E3C bool OustFromMPCC(class CSocket*, const unsigned char *)
0x008AA5F4 void User::OnDiePenaltyInBF(void)
0x005AC784 bool ReplyManipulateWarehouseItem(class CDBSocket*, const unsigned char *)
0x004EC4EC bool CCastle::CancelCastleDefenseSiege(unsigned int)
0x007CC14C void CPledge::SetMemberRelationChanged(void)
0x004A5BB0 bool BuilderCmd_NpcPingState(class CSocket*, class User*, wchar_t *)
0x00884160 bool CUndergroundColosseum::CanResurrectedByMatch(class User *)
0x0042B484 bool CAirShipForRegular::CanBeDestroyed(void)
0x006EA7BC bool CMonRaceDB::TimerCalled(void)
0x005939BC void CDB::RequestLoadFieldCycleInfo(int)
0x00501BF0 CCommCli::CCommCli()
0x00522D38 bool CCrataeCube::IsRegisteredUser(unsigned int)
0x0071AF1C bool CNPC::ValidateOrgMPRegen(void)
0x00568048 bool CCreature::DetachedAbnormalStatusByChannelling(class CCreature*, class CSkillInfo *)
0x008C3F20 bool User::AskJoinMPCC(class User*, enum MPCCCreateType)
0x005B504C bool WithdrawWarehouseItemsPacket(class CDBSocket*, const unsigned char *)
0x0067FC6C void CInstantZoneManager::LeaveInstantZone(class User*, class CInstantZone *)
0x00738FD8 void BuySellListCache::ClearAll(void)
0x007758A0 void COlympiadFuncHandler::Execute(void)
0x00610EBC void CEventMatchRuleSet::DenyAll(void)
0x0076D444 void COlympiadTeam::RestorePlayers(void)
0x006B7E08 char *__cdecl UnicodeToMultibyte(const wchar_t *)
0x00900964 bool CBasicActionHandler_MAKE_ITEM2::Handle(class User*, int,bool,bool,int)
0x006C4DEC void CManorDB::CalcNextAllManor(void)
0x00583290 void CDB::RequestCancelVariationItem(class CItem*, class User*, __int64)
0x00418314 void BuilderCmdHelper::TakeOffAirShip(class User*, wchar_t *)
0x0051F810 void CCCRecordBoard::SortRecordBoardData(class std::xvectorclass CCCRecordBoardData*, class std::xallocatorclass CCCRecordBoardData* &)
0x00958880 void CVehicle::OnStart(void)
0x0057F8D0 void CDB::RequestSaveMercenary(int,int,int,class FVector,class FAngle,double,double) const
0x0052DB78 void CCreature::ValidatePUseSpeed(void)
0x00720900 void CNPC::Shout(wchar_t*, int)
0x007F21C8 void CPVPMatch::TimerExpired(int)
0x0077D9F8 class CMultiPartyCommandChannel *__cdecl CParty::GetMPCC(void)
0x0083284C bool CSkillEffect_op_skill::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x0065A764 void SendMailHtmlBuilder::Build1001Packet()
0x00620548 void CFieldCycle::TimerExpired(int)
0x0049C21C bool BuilderCmd_ssq3(class CSocket*, class User*, wchar_t *)
0x005B5678 bool SellItemsPacket(class CDBSocket*, const unsigned char *)
0x0058B2C4 void CDB::RequestRegisterSiegeAgitPledge(class User*, class CSiegeAgit*, class CPledge *)
0x005A9B10 bool SendTutorial(class CDBSocket*, const unsigned char *)
0x0057EF38 void CDB::RequestLoadChar(unsigned int,class CUserSocket *) const
0x004F5E8C CClanBBSHTML::CClanBBSHTML(CUserSocket* socket): CParseHTML(socket)
0x005CDDA8 bool ReplyLoadSubJob(class CDBSocket*, const unsigned char *)
0x008A4F84 void User::CancelPrivateStore(int)
0x00457D90 void CAuthSocket::OnRead(void)
0x008AF7E4 void User::SendAbnormalStatusInfo(void)
0x006B9CA8 void CLog::Redraw(void)
0x0082E284 void CSkillEffectByWeaponType::SetAllAttackType(bool)
0x0058889C void CDB::GetItemFromPet(class User *, class CItem*, __int64)
0x006823AC class CInstantZone *__cdecl CInstantZoneManager::GetInstantZoneToEnter(class User*, enum InZoneEnterType,int,enum CreateFailReason &)
0x0068E7DC __cdecl CIOServer::CIOServer(void)
0x0079A624 bool CPartyRoom::DismissParty()
0x006C29AC void CManor::TransferManorData(void)
0x0067D3DC class CInstantZone *__cdecl CInstantZoneDB::GetInstantZone(int)
0x007665BC void COlympiadField::StatusStartMatch(void)
0x00679F78 class CInstantZone *__cdecl CInstantZoneCluster::GetLowestDensityZone(void)
0x0067AFA8 class CInstantZoneCluster *__cdecl CInstantZoneDB::GetCluster(int)
0x0067AB5C class CInstantZone *__cdecl CInstantZoneCluster::GetZone(int)
0x006822F4 class CInstantZone *__cdecl CInstantZoneManager::CreateInstantZone(wchar_t*, enum CreateFailReason &)
0x0067D4A4 class CInstantZone *__cdecl CInstantZoneDB::GetInstantZone(int,int)
0x007AC9F8 void CPet::PetNameChanged(const wchar_t *)
0x00615EC8 void CEventMatch::SendSpelledInfo(class User*, class CSocket *, int)
0x007FB8B4 void CResidence::WriteUnlock(void)
0x00472CE0 void CDB::RequestGiveItem(int,class CPacketHelperEx16384 *)
0x008DD00C bool User::UseItem(class CItem*, int,bool)
0x00693C6C int __cdecl CItem::EnchantAddValueShield(void)
0x006958A4 int __cdecl CSharedFactoryclass CItem,class CSharedItemData,class CSharedItemConstant,&class CSharedDefine const SharedDefine_Item::RemoveByIndex(int)
0x00651868 __cdecl CHenna::~CHenna(void)
0x0061A888 int __cdecl CEventMatchOpBuilderCommandParser::Parse_list(class CSocket*, class User *, wchar_t *)
0x0061A930 int __cdecl CEventMatchOpBuilderCommandParser::Parse_observer(class CSocket*, class User*, wchar_t *)
0x0061A278 int __cdecl CEventMatchBuilderCommandParser::Parse_useskill(class CSocket*, class User*, wchar_t *)
0x0061A690 int __cdecl CEventMatchBuilderCommandParser::Parse_manage(class CSocket*, class User *, wchar_t *)
0x007AD824 bool CPet::ValidateOrgMPRegen(void)
0x00693BD4 int __cdecl CItem::EnchantAddValueMDefense(void)
0x0068BC48 int __cdecl CInventory::MakeSlotIndexPacket(char*, int &)
0x00693944 int __cdecl CItem::EnchantAddValueMAttack(void)
0x00841F1C bool CSkillEffect_p_change_fishing_mastery::CheckPumpCondition(class CCreature *)
0x0041E684 const class FVector &__cdecl CAirportPlatform::GetLandingPath(int)
0x008E094C void User::PayPendingTeleportItem(void)
0x00441544 void AtomicUpdatePVPPoint::Dump(void)
0x00480654 bool BuilderCmd::LoadCoretimeTeleportEventSetting(class CSocket*, class User *, wchar_t *)
0x00742C58 bool NpcSpecialCamera(class NpcSocket*, const unsigned char *)
0x007FB80C void CResidence::WriteLock(const wchar_t*, int)
0x0075866C void CContributeData::TimerExpired(int)
0x006803F0 void CInstantZoneDB::AddCluster(class CInstantZoneCluster *)
0x0094DED8 char* LoadBinaryAbsolute(TCHAR* pszFileName,int& nSize)
0x007B544C void CPet::ExpDown(__int64)
0x00704ED8 bool CMoveAction::OnStopMove()
0x0049ED8C bool BuilderCmd_getitembypccafepoint(class CSocket*, class User*, wchar_t *)
0x004E1574 bool BuilderCmd_add_mapbug(class CSocket*, class User*, wchar_t *)
0x006B4168 __cdecl CL2Time::~CL2Time(void)
0x0048D148 bool BuilderCmd_RemoveSkillDelayAll(class CSocket*, class User*, wchar_t *)
0x0088FC18 void User::SendUserHennaInfo(class CUserSocket *)
0x009016B4 void CUserBasicAction::MakeList(void)
0x007718BC void COlympiadDefaultSetting::GiveSkillToPlayer(class User*, enum GameRuleType)
0x00892388 void User::InitializeBossRecord(bool)
0x007A9924 bool CPCCafeEventMgr::Load()
0x009128B4 bool WriteHeroWords(class CSocket*, const unsigned char *)
0x00957624 void CVehicle::InformVehicleStart(bool)
0x00539024 bool CCreature::GetBlinkDestPos(const double,const enum SkillDirectionType,class FVector &)
0x0077A5F0 bool CParseHTML::SendErrorMsgHtml(WCHAR* sErrMsg, int nHtmlType)
0x006B6EB0 __cdecl CXMasTimer::~CXMasTimer(void)
0x00856AA4 bool CSkillEffect_p_trigger_skill_by_avoid::PumpEnd(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpEndType) const
0x0091C588 bool CUserSocket::DropItemPacket(class CSocket*, const unsigned char *)
0x004B2390 bool BuilderCmd_setonetimequest(class CSocket*, class User*, wchar_t *)
0x0043C238 int __cdecl AtomicParamChange::Assemble(char*, int)
0x00536E38 class CSharedItemData *__cdecl CCreature::GetEquipedWeapon(void) const
0x0045E288 bool CBlockUpset::CanAddBlockUpsetWaitingPlayer(class User &)
0x005209BC void CCCRecordBoard::SendCurrentRecordForUI(class User*, int)
0x005970D0 void CDB::RequestSaveOwnthing(int,int,int,int,int)
0x0043CD28 int __cdecl AtomicChangePetName::Assemble(char*, int)
0x00492FC0 bool BuilderCmd_set_pausable(class CSocket*, class User*, wchar_t *)
0x00481C34 bool BuilderCmd_RemoveNoRestart(class CSocket*, class User*, wchar_t *)
0x0043D818 int __cdecl AtomicShowPage::Assemble(char*, int)
0x005D65B4 bool DeleteCharacterFailurePacket(class CDBSocket*, const unsigned char *)
0x009122E0 RequestBrProductList()
0x00446968 bool AtomicSetNobless::Do(void)
0x007FC0DC class CManor *__cdecl CResidence::GetManor(int)
0x00818F84 void CSiegeAgit::GetAttackerPledge(class std::xvectorclass CPledge*, class std::xallocatorclass CPledge* &,class std::xvectorint,class std::xallocatorint &)
0x0058DABC void CDB::RequestBBSClanList(class User*, int,int,int,int,wchar_t*, int,int,const unsigned char *)
0x00450BC0 bool CAuction::DeleteBid(int)
0x0045CB88 void CBattleCampDb::AddBattleCamp(const wchar_t*, class CBattleCamp *)
0x0058F9E4 void CDB::RequestGetTempMail(class User*, int,class CMailListParameter &)
0x00954068 void CTLPipeBaseunsigned int,100,8::Write(int,const unsigned int &)
0x0072CB38 void CTeamBattleAgit::OnBossNpcEnterWorld(CNPC *pNpc)
0x004A6EC8 bool BuilderCmd_BotCheckItem_user(class CSocket*, class User *, wchar_t *)
0x00800684 void CResidence::BroadcastDominionMessage(int)
0x0078F3F0 bool CPartyMatchingRequest::OnDismissParty(CParty* party)
0x007907DC bool CPartyMatchingRequest::ManageRoom(CPartyRoomInfo& partyRoomInfo)
0x0078D5D8 bool CPartyMatchingRequest::ListRoom(CPartyRoomListFilter& filter)
0x00738C5C bool NpcMiniGameAgitFunc(class NpcSocket*, const unsigned char *)
0x00791494 bool CPartyMatchingRequest::DismissRoom(int partyRoomId)
0x0074375C bool NpcUseSoulSpiritShot(class NpcSocket*, const unsigned char *)
0x0073CA64 bool NpcNormalCamera(class NpcSocket*, const unsigned char *)
0x0080DEE8 bool CSetting::LoadSetting(void)
0x0042EFAC void BuilderCmdHelper::LandingInAirport(class User*, wchar_t *)
0x006C4C34 class CManor *__cdecl CManorDB::GetManor(int)
0x0082E5E8 bool CSkillEffectAddBonusByArmorType::Pump(class CCreature*, const class CSkillInfo*, int)
0x00907EF0 void User::SendRelationChanged(class CUserSocket *)
0x004474B8 bool CAtomicCallPC::Do(void)
0x0089CE2C void User::AddBossPoint(int,int)
0x0073B01C bool NpcSocket::NpcGetItem(class NpcSocket*, const unsigned char *)
0x004A76CC bool BuilderCmd_reset_mac(class CSocket*, class User *, wchar_t *)
0x00806034 bool CRestrictArea::LoadData(wchar_t*, int)
0x006E7D68 void CMonRaceHTML::MonRaceBuy13(int,int,int)
0x0047CDD4 bool BuilderCmd_lotto_resume(class CSocket*, class User*, wchar_t *)
0x00823170 struct SkillAcquireInfo *__cdecl CSkillAcquireDB::GetSkillAcquireInfo(enum ClassType,int,int)
0x008960EC void User::AbandonAirShipDriver(void)
0x007F3408 void CPVPMatchSystem::OnNpcServerClosed(void)
0x006B71FC void CXMasTimer::TimerExpired(int)
0x0092DC8C void CSocketLimiter::DeleteAllIP(void)
0x006FAEA0 void CStandAction::Set(class CSmartID,int)
0x0094AC58 bool HtmlCmdRecipe(class CUserSocket*, class User*, const wchar_t*, const wchar_t *)
0x0086D5CC void CTerritory::MakeRectangle(class FVector,class FVector,class FVector,double)
0x007CAD3C void CPledge::RequestReservedLoaded(void)
0x00911234 bool RequestLoadUI(class CSocket*, const unsigned char *)
0x00834FF4 bool CSkillEffect_i_holything_possess::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2 *, double)
0x0049BF34 bool BuilderCmd_nextbossrecordround(class CSocket*, class User*, wchar_t *)
0x00908C10 void User::GatherSpelledInfoChanged(void)
0x0058E774 void CDB::RequestRenewSubJob(class User*, int,int,bool,int,int)
0x004A080C bool BuilderCmd_SetCharItemDuration(class CSocket*, class User*, wchar_t *)
0x006329A0 void CFortressSiege::DeleteAllFlags(void)
0x004EB8CC void CCastle::BroadcastEndRegister(void)
0x0088DAF0 void User::SetKarma(int)
0x007647F4 void COlympiadField::FreezeAll(void)
0x004EE9BC bool CCastle::ReserveSiegeTime(int,long)
0x00519A0C bool CCoretimeTeleportEventMgr::IsCoretime(void)
0x00518E68 void CControlTower::OnSiegeStarted(bool)
0x00698F84 void CItem::SetVariation(class ItemOptionKey,unsigned int)
0x007B05E8 bool CPetManager::LinkPet(class User*, class CPet *)
0x00481D1C bool BuilderCmd_DropAllInvenItem(class CSocket*, class User*, wchar_t *)
0x007C8EB8 class CPledge *__cdecl CPledge::GetObjectW(unsigned int)
0x004B2184 void CTLPipeBasestruct CTL_WorldMapNode2,20000,8::Read(class CTLPipeBasestruct CTL_WorldMapNode2,20000,8::CReadCallback *)
0x0042449C void CAirShipManager::OnAirShipSummoned(unsigned int)
0x00464730 bool CBlockUpset::_ChangeBlockUpsetWaitingPlayerTeam(class CBlockUpsetMemberInfo *)
0x007068C4 bool CMoveToTargetWaitAction::OnTick(void)
0x00893E60 double User::ConBonusF(void) const
0x00893D88 double User::StrBonusF(void) const
0x007D473C void CPledge::InitPledgeData(int,int,wchar_t*, wchar_t *)
0x0088AB1C double User::MPRegenBonusByMotionEx(void)
0x0088AA64 double User::HPRegenBonusByMotionEx(void)
0x00836448 bool CSkillEffect_i_hp_by_level_self::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x008389A0 bool CSkillEffect_i_give_contribution::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2 *, double)
0x0082E110 double L2SkillFunc::GetSoulBonus(class CCreature*, const class CSkillInfo *)
0x0082D980 double L2SkillFunc::CalculateProbability(double,class CCreature*, class CNPC *, const class CSkillInfo *)
0x007AFB28 bool CPet::ValidateLevel(void)
0x0080B570 bool Server::Add(SOCKET newSocket, CSocket* socket)
0x0089B094 void User::SetPrivateStoreBuyMsg(const unsigned char *)
0x0041BC4C void CAirShip::Ascent(void)
0x004437B0 bool AtomicResetResidenceDeco::Do(void)
0x004908DC bool BuilderCmd::summon2(class CSocket*, class User*, wchar_t *)
0x00622274 bool CFishingController::IsWaterPlace(class FVector &,class User *)
0x0052EF1C bool CCreature::SaveSkillUsedTime(void)
0x0054807C void CCreature::SetMaxMagicLevel(void)
0x00453B54 void CAuctionAgit::TimerExpired(int)
0x008464B4 bool CSkillEffect_i_soul_blow::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2 *, double)
0x006C7454 void CManorFuncHandler::ShowSeedSetting(void)
0x0091F19C bool QuestList(class CSocket*, const unsigned char *)
0x006BC1C8 bool TimeAttackBoard::GiveReward(User *pUser, int nRoomNO, ItemManip &aRequest)
0x004809CC bool BuilderCmd::ShowCoretimeTeleportEventSetting(class CSocket*, class User *, wchar_t *)
0x00738568 bool NpcUseSkill(class NpcSocket*, const unsigned char *)
0x0084B5D4 bool CSkillEffect_i_m_attack_by_hp::Instant(class CCreature*, class CObject*, const class CSkillInfo *, class CSkillAction2*, double)
0x0091AA8C bool RequestEnchantSkillUntrain(class CSocket*, const unsigned char *)
0x008834E0 void CWorldTrap::EnterWorld(bool,int,int,unsigned int)
0x006C6934 void CManor::AddCrop(int,int,int,int,int,int)
0x0076B4EC void COlympiadSystem::SetOlympiadMonthly(int,bool)
0x00637174 void CFortress::BroadcastSystemMessageW(int,wchar_t*, bool)
0x0046D48C void CBotChecker::ShowBotUserList(void)
0x007D7750 void CPledge::SendDominionMessageToAllOnlineMember2(int,int)
0x005C48B4 bool ReplyWithdrawWarehouseItemsEx(class CDBSocket*, const unsigned char *)
0x005E9D00 void CDominionManager::StartTimer(void)
0x005CF3D8 bool ReplyContributionWinnerPledge(class CDBSocket*, const unsigned char *)
0x004D88A0 bool BuilderCmd_reset_clan_leader(class CSocket*, class User *, wchar_t *)
0x009370F4 bool RequestRecipeShopItemInfo(class CSocket*, const unsigned char *)
0x005FC8E0 void Duel_SocialAction::Operate(class User*, class CDuelPlayerInfo *)
0x007660CC bool COlympiadObserverEntry::RemoveEntry(int)
0x005F354C void CDominion::BanNonDominionMember(bool)
0x00896004 void User::SaveGetBirthdayGiftTime(void)
0x0092723C bool SetPledgeCrestPacket(class CSocket*, const unsigned char *)
0x006213F8 void CFieldCycleSystem::SendInfo(class CSocket *)
0x00433D7C class CPledge *__cdecl CAlliance::GetMasterPledge(void)
0x007FD194 class CPledge *__cdecl CResidence::GetResidenceOwnerPledge(void)
0x008F03F4 bool User::CanResurrection(int &,int &)
0x00584F80 void CDB::RequestSavePetitionMsg(int,wchar_t *)
0x00891CF0 void User::SetPoint(int,int)
0x009166BC bool UserPacketEx::TryToPutCommissionForVariationMakePacket(class CSocket*, const unsigned char *)
0x00864DE0 enum TEAM_BATTLE_COLOR CTeamBattleAgit::GetColor(int,bool &)
0x0069AFDC void CSetItem::SetItemSlot(enum ObjectFieldType,class std::xvectorint,class std::xallocatorint *)
0x0057C550 void CCursedWeaponMgr::TimerExpired(int)
0x00845EE4 bool CSkillEffect_i_p_soul_attack::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x005A93A0 bool ReplyLoadDuelRecord(class CDBSocket*, const unsigned char *)
0x0055A610 void CCreature::GatherNeighborCreaturePole(int,int,class std::xvectorclass CSafePointer2class CCreature,class std::xallocatorclass CSafePointer2class CCreature  &,class std::xvectordouble,class std::xallocatordouble &,const struct DamageRangeType &,int,int,enum SkillAffectObjectTypeEnum,class CCreature*, class CCreature*, class FVector,int)
0x00759A28 unsigned int CSmartIdManagerclass CGeneralObject,1000000,8::RegisterObject(unsigned int,unsigned int,class CGeneralObject *)
0x009295B0 void CUserSocket::UnBindUser(void)
0x008F3F90 void User::CallPCTry(class User *)
0x00860CD4 unsigned int CSmartIdManagerclass CStaticObject,10000,8::RegisterObject(unsigned int,unsigned int,class CStaticObject *)
0x007F3A5C void CPVPMatchSystem::OnDismissParty(class CParty *)
0x0080815C unsigned int CSecureSection::GetInt(const wchar_t*, int)
0x007DFFF4 unsigned int CPledgeMemberList::SetPledgePowerGrade(wchar_t*, int)
0x004470E0 bool AtomicCreateAcademy::Do(void)
0x007F582C int __cdecl CPVPMatchSystem::RegisterUser(unsigned int,unsigned int)
0x0051F998 bool CCrataeCube::StartMatch(void)
0x0077D1D0 class CSharedPartyData *__cdecl CSharedFactoryclass CParty,class CSharedPartyData,class CSharedPartyConstant,&class CSharedDefine const SharedDefine_Party::Add(class CParty *)
0x006953FC class CSharedItemData *__cdecl CSharedFactoryclass CItem,class CSharedItemData,class CSharedItemConstant,&class CSharedDefine const SharedDefine_Item::AddById(int)
0x007399C0 bool NpcMoveTaxToResidenceBank(class NpcSocket*, const unsigned char *)
0x009593EC int __cdecl CVitalityPoint::GetDecrementValue(int)
0x00434CEC class CSharedAllianceData *__cdecl CSharedFactoryclass CAlliance,class CSharedAllianceData,class CSharedAllianceConstant,&class CSharedDefine const SharedDefine_Alliance::Add(class CAlliance *)
0x005236A4 void CTLPipeBaseunsigned int,100000,8::CThreadPipe::Write(const unsigned int &)
0x0083F6B4 bool CSkillEffect_p_pvp_physical_skill_dmg_bonus::Pump(class CCreature*, const class CSkillInfo*, int)
0x00718AE8 void CNoblessSystem::SetNoblessInfo(int,int,int,int,int,int,int,int,int,int)
0x00517300 void CControlTower::Appear(void)
0x004FAD40 void CCleft::ReleaseCleftInfo::Do(class CCleftMemberInfo &)
0x008A0A84 void User::TimerExpiredOnPartyMatching(void)
0x007F4150 int __cdecl CPVPMatchSystem::GetRelation(class User &,class User &)
0x007F3F74 int __cdecl CPVPMatchSystem::GetPVPMatchTeamIndex(class CNPC *)
0x00697908 void CSmartIdManagerclass CItem,900000,8::DeleteObject(unsigned int)
0x006C1FF8 void CManor::LogManorData(void)
0x00820D90 bool CSkillInfo::ActivateTriggerSkill(class CCreature &,class CObject*, enum SkillTargetTypeEnum) const
0x0041B70C class User *__cdecl CAirShip::GetDriver(void)
0x00630C18 void CFortress::AddToRelatedCastles(void)
0x008419E4 bool CSkillEffect_p_stat_up::PumpStart(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpStartType) const
0x00584A18 void CDB::RequestSetUserPledgeInfo(unsigned int,unsigned int,unsigned int)
0x004511A4 void CAuctionNPCDB::Init(void)
0x004A04F0 bool BuilderCmd_CheckPlaneCollision(class CSocket*, class User*, wchar_t *)
0x004174E8 void CAirShipConstFree::SetBuyCost(wchar_t*, int)
0x00473A38 int CInventory::UseArrow(CrystalType enumCrystalType, int nCount)
0x006EF02C void CMultiPartyCommandChannel::ResetMasterPartyRouting(void)
0x008DE0F8 void User::AddRecipeBook(int,bool)
0x00650DEC bool CGIPSocket::CheckPendingWrite(void)
0x00929ABC bool ChangeStopTypePacket(class CSocket*, const unsigned char *)
0x0043BA98 bool CArea::CheckAndProcess(class CCreature &,const class FVector &)
0x00691080 void CIOCPMessage::Post(int)
0x0051EB88 void CCrataeCube::ResurrectUser(class User*, class FVector)
0x0043041C int __cdecl AltitudeHelper::GetSpeedByAltitude(double,int)
0x00644A30 bool CGameEventMgr::Load(void)
0x00536F48 enum AttackType CCreature::GetAttackType(class CSharedItemData **)
0x0083C040 bool CSkillEffect_p_crystallize::PumpEnd(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpEndType) const
0x006C33A8 void CManor::Set(enum ObjectFieldType,int)
0x00595478 void CDB::SaveGet5YearGiftTime(unsigned int,struct _SYSTEMTIME *)
0x0058CEA8 void CDB::RequestGetMacro(class User *)
0x008899CC bool SocialClassNS::IsMercenary(class User *)
0x005BA9C4 bool ReplyConfirmCastleDefence(class CDBSocket*, const unsigned char *)
0x004198D8 bool CAirShipConstFree::CanPayBuyConst(class User *)
0x00956514 void CVehicleController::SetBroadcastPoint(class FVector,class FVector)
0x005E4778 bool DBPacketHandler::_ReplyRegisterSiegeAgitPledge(int,int,int)
0x00499840 bool BuilderCmd_lotto_set_number(class CSocket*, class User*, wchar_t *)
0x00632524 bool CFortressSiegeRegistry::RegisterPledge(unsigned int)
0x00427910 void CAirShipManager::OnBuyFreeAirShip(unsigned int,unsigned int,unsigned int,int,int,unsigned int,int)
0x00897968 bool User::ValidateOrgHPMP(void)
0x007F5BC0 int __cdecl CPVPMatchSystem::GetRankUserPVPMatch(unsigned int,unsigned int)
0x005315E8 bool CCreature::SetShowNametag(bool)
0x006DD91C void CMiniGameAgitNpcFuncHandler::Execute(void)
0x007C8B18 bool CPledge::AccumulateNameValue(int)
0x00599BEC void CDB::CreateUpdateItems(class User*, int,int,char*, class AtomicJob*, int,class CPacketHelperEx16384*, bool) const
0x004E9B68 void CCastle::AddCastleFortressStatusLog(int)
0x004EC7D4 void CCastle::FreeReserveCastleSiegeList(void)
0x00948BD4 bool HtmlCMDPacket(class CSocket*, const unsigned char *)
0x0057F6F4 void CDB::RequestDropCastleGuard(class CItem*, class User*, class FVector,class FAngle,unsigned int,struct ResidenceGuardInfo *) const
0x007BE804 BYTE CPetitionCli::SendGmPchat(int nPetitionId, const wchar_t *pwzGMCharName, const wchar_t *pwzMessage)
0x008E3BC0 void User::RecipeStoreListReq(int)
0x00803824 void CResidence::ReserveExpelOfUsers(class std::xvectorclass User*, class std::xallocatorclass User* &)
0x007CC054 void CPledge::SystemMessage(int)
0x006A65DC bool CItemEquipCondition_transmode_exclude::CheckPrivate(class CCreature*, class CItem *)
0x00721C9C void CNPC::SocialAction(int,int,bool)
0x007B9268 int GetTepe2Category(int nType)
0x0062BE8C void CFortress::SetLastRewardGivenTime(long)
0x007DED08 void CPledgeMemberList::Updatestruct CPledgeMemberList::Online::OnlineJob(class User *, struct CPledgeMemberList::Online::OnlineJob &)
0x007F9224 bool CRecipeInfo::CheckProduct(class User *)
0x004DDA38 bool BuilderCmd::use_skill_all(class CSocket*, class User*, wchar_t *)
0x00776C10 void COwnThing::Appear(void)
0x0046C4C4 bool CBotChecker::CheckImpl_3(class User *)
0x0066CEBC void AddBlock::ExecuteInternal()
0x008FF994 bool User::DespawnPCTrap(void)
0x005C6260 bool ReplyAgitPledgeAdena(class CDBSocket*, const unsigned char *)
0x005E2C50 bool ReplyGetPledgeCrest(class CDBSocket*, const unsigned char *)
0x0044E608 void CThreadLocalWorldMap2100000,50000,8::BroadcastToNeighborRect(class CObject*, int,class FVector,int,const char*, ...)
0x00834ECC bool CSkillEffect_i_add_hate::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x005341B0 int __cdecl CCreature::GetAbnormalCount(void) const
0x0058CA88 void CDB::RequestGetMonRaceResult(class User*, int)
0x0092431C void CUserSocket::MakePacketBlockList(void)
0x004ED2AC void CCastle::StartAllTimer(void)
0x004B4C08 bool BuilderCmd_defend(class CSocket*, class User*, wchar_t *)
0x00840BE4 bool CSkillEffect_p_hate_attack::PumpStart(class CCreature &,class CCreature *, const class CSkillInfo*, enum SkillPumpStartType) const
0x0069F184 void CItem::Set(enum ObjectFieldType,wchar_t *)
0x007E21C4 bool CPledgeMemberList::GatherMemberInfo(unsigned int,class CPacketHelperEx16384 &)
0x00712BD8 void CSkillAction2::ActivateAttachedItemSkills(class CCreature &,class CObject &,enum CSkillInfo::EffectActivateTiming)
0x008FECA0 bool User::SummonNpc(int,int,const class CSkillInfo*, const enum NpcSummonType)
0x00681F34 bool CInstantZone::ExpelByNPCDownOnTimer(void)
0x008F31CC void User::SetItemCrystalOriginal(enum CrystalType)
0x008FF78C bool User::CheckRidingOnTimer(void)
0x00600670 enum DuelTeamType CDuelUserInfo::GetOpponentTeam(void)
0x005FD790 enum DuelTeamType CDuelManager::GetOpponentTeam(enum DuelTeamType)
0x00842F64 bool CSkillEffect_t_cub_hp::Tick(class CObject*, double,unsigned int)
0x006835FC void CInstantZoneNpcAIEventHandler::Receive(const unsigned char *)
0x00480124 bool BuilderCmd_abnormalchange(class CSocket*, class User*, wchar_t *)
0x005CD5E8 bool ReplyClanBBSList(class CDBSocket*, const unsigned char *)
0x0090552C void CUserBookmarkHandler::SaveSlot(class User*, const unsigned char *)
0x0064AE34 bool CGeoZone::IsNoFlyArea(const class FVector &)
0x004FE86C void CCleft::_RemoveTeamPlayers(enum BlueRedTeam::Enum,bool)
0x006D8620 void CUnreturnedPointKeeper::Remove(unsigned int)
0x0072DF10 bool NpcSetResidenceTaxRateEach(class NpcSocket*, const unsigned char *)
0x007ADA84 void CPet::ResetParameter(void)
0x006A4644 bool CItemEquipCondition::CanEquip(class CCreature*, class CItem *)
0x0089B340 void User::RequestPCCafeCouponUse(const wchar_t *)
0x00594414 void CDB::RequestLoadAllAuction(int)
0x0091DFBC bool MagicSkillUsePacket(class CSocket*, const unsigned char *)
0x006B121C ATOM MyRegisterClass(HINSTANCE hInstance)
0x0085FC50 bool SSQSystem::SetRoundNumberToAllCastleMember(int)
0x0044CA8C bool AtomicBuyAirShip::Do(void)
0x0042FC6C void CAirShipForFree::AutoSail_Takeoff(void)
0x005B717C bool ManipulatePointItemPacket(class CDBSocket*, const unsigned char *)
0x008E6D34 void User::OnPeriodicItemDestroyed(int,bool)
0x006FBE68 void CAttackWaitAction::Set(class CSmartID,class CSmartID,int,bool)
0x005DB408 bool ReplyLoadWarehouseItemList(class CDBSocket*, const unsigned char *)
0x005F2ECC void CDominionManager::ResumeSiege(void)
0x00797140 bool CPartyRoom::CheckAvailableMemberLimit()
0x006D65D4 void CMiniGameAgitPlayerEntry::Clear(void)
0x00596760 void CDB::GetRimPointTop10(int)
0x0092C2F4 bool ReplyListPartyWaitingPacket(class CSocket*, const unsigned char *)
0x00677664 bool CInstantZone::IsBinding(class User *)
0x004692E4 void CBossRecordRound::LoadFromDB(void)
0x0048D5CC bool BuilderCmd_dropping(class CSocket*, class User*, wchar_t *)
0x008D8A2C void User::SetPendingUseETCItem(class CItem *, enum PendingUseItemType)
0x0086E7BC class FVector CCreaturePosLoggerclass CCreatureController::LogPosition(class MemoryObject *)
0x0073B62C bool NpcKillMe(class NpcSocket*, const unsigned char *)
0x005EA734 void CDominion::ReleaseEntry(void)
0x00892604 void User::AddBossRecord(class CBossRecord *)
0x0077C1A0 enum ItemRoutingType CParty::GetRoutingType(void) const
0x005FEDAC class User *__cdecl CIndividualDuel::GetPlayer(enum DuelTeamType)
0x00579E2C class User *__cdecl CCursedWeapon::GetOwner(void)
0x007D0D34 void CPledge::DeleteReservedLoaded(unsigned int)
0x00602914 class User *__cdecl CDuelUserInfo::GetIndividualDuelEnemy(void)
0x0077D5C0 class User *__cdecl CParty::GetMaster(void)
0x007F30C8 int __cdecl CPVPMatch2::GetRegisteredUsersPacket(char*, int)
0x0062F3F4 void CFortress::HandleDoorDestroyed(const wchar_t *)
0x0077D7E0 class User *__cdecl CParty::GetItemWinnerOrderly(class User*, const unsigned int,const int)
0x0058B1BC void CDB::RequestLoadSiegeAgit(class CSiegeAgit *)
0x00775540 void COlympiadSystem::TimerExpired(int)
0x0072DE68 bool NpcSetResidenceTaxRate(class NpcSocket *, const unsigned char *)
0x0071E2F8 class User *__cdecl CNPC::GetSummoner(void) const
0x0071E210 class User *__cdecl CNPC::GetMaster(void)
0x006D8B10 void CMiniGameAgit::DeleteGameItem(class User *)
0x00573734 bool CCubicHandler::ActivateCubicSkill(class CCreature*, struct CubicActivationInfo &,struct ActivateInfo2 &,class CCubic *)
0x00636D04 void CFortress::HandleUnregisterSiege(class User*, class CNPC *)
0x00740048 bool NpcCreateSubJob(class NpcSocket*, const unsigned char *)
0x0069B314 void CSetItem::PushSetItemToUser(class User &,int)
0x004DD8F0 bool BuilderCmd::use_skill(class CSocket*, class User*, wchar_t *)
0x005EA7FC void CDominion::PassSiege(void)
0x005713E4 void CCreatureController::__async_OnDamagedMessage(struct CExecutionArgumentPad *)
0x0058BC2C void CDB::RequestSaveTimeLimitUsed(wchar_t*, int,int,struct _SYSTEMTIME *)
0x006ACC40 void CThreadLocalWorldMap2100000,50000,8::CTL_Map2::Insert(short,short,char,int,class CObject *)
0x00483E20 bool BuilderCmd_ShowTrace(class CSocket*, class User *, wchar_t *)
0x00612458 void CEventMatchRuleSet::Allow(int)
0x005FBFC4 void CIndividualDuel::SendToAllPlayers(const char*, ...)
0x008DD614 bool User::HandleItemManipulation(int,class ItemManip [],class AtomicJob*, int,class CPacketHelperEx16384*, bool)
0x008928A4 void User::SendCompassRegionCode(enum CompassRegionCodeEnum,bool)
0x00963DF8 bool CWorld::FindAcceptableDestZPos(const class FVector &,class FVector &,bool)
0x00658AF4 void ReplyMailFormHtmlBuilder::DisassemblePacket()
0x0091E0C4 bool ShowPledgeMemberListOpenPacket(class CSocket*, const unsigned char *)
0x00683544 void CInstantZoneManager::SetInstantZoneBinding(class CInstantZone *)
0x00945754 bool HtmlCmdSell(class CUserSocket*, class User*, const wchar_t*, const wchar_t *)
0x00944194 bool HtmlCmdLearnSkill(class CUserSocket*, class User*, const wchar_t*, const wchar_t *)
0x0080E5E0 void CSetting::AddRestartTerritory(class CSetting::RestartTerritory *)
0x0091A984 bool RequestEnchantSkillSafe(class CSocket*, const unsigned char *)
0x008EE414 void User::SetAlliance(CAlliance *pAlliance, bool bMasterPledge)
0x0044C204 void AtomicJobList::Destroy(void)
0x004565F0 void CIOSocketExclass CIOBufferEx8192 ::Close(void)
0x0073464C bool SendUIEvent(class NpcSocket*, const unsigned char *)
0x005858F0 void CDB::RequestUninstallBattleCampBy(class CPledge *, int)
0x00880FA8 void CTrap::OnDetected(class CCreature *)
0x00757280 bool NpcRegisterTelPosListPacket(class NpcSocket*, const unsigned char *)
0x005BE42C bool BBSGetFavorite(class CDBSocket *, const unsigned char *)
0x006C79E0 void CManorFuncHandler::ShowCropSetting(void)
0x004F0530 bool CCastle::OnChangeOwner(void)
0x0048F560 bool BuilderCmd::summonnpc(class CSocket*, class User*, wchar_t *)
0x006BB5F8 void CLogSocket::Send(const char* format, ...)
0x00419774 bool CAirportPlatform::IsOccupied(void)
0x0072EF98 bool NpcSetControlTowerLevel(class NpcSocket*, const unsigned char *)
0x0051E2B0 void CCrataeCube::TriggerEndMatch(void)
0x006CF028 void CMarketPriceList::Put(int,int,double)
0x004E5E88 bool BuilderCmd::bot_block_me(class CSocket *, class User*, wchar_t *)
0x005F25E0 void CDominion::Say(class User*, wchar_t*, enum SayPacketType)
0x009263A4 bool ChangeMoveTypePacket(class CSocket*, const unsigned char *)
0x0088CBC0 bool User::IsNoSiegeRelation(void)
0x00417BD8 void CAirShip::OnTimerExpired(void)
0x008D7354 void User::TurnOffAutoSoulshot(int)
0x007E66C4 void CPledgePenaltyViewer::RenderCanNotCreateAlliance(CHtmlGenerator& generator)
0x004A49EC bool BuilderCmd_NpcUseSkill(class CSocket*, class User*, wchar_t *)
0x008AD948 bool User::GetOnAirShip(class CAirShip *)
0x00796CB0 bool CPartyMatchingWaitingRoom::EnterWaitingRoom(User *pUser)
0x0079676C bool CPartyMatchingWaitingRoom::LeaveWaitingRoom(User *pUser)
0x004C0100 bool BuilderCmd_ssq(class CSocket*, class User*, wchar_t *)
0x008F1A98 void User::InstallAdvancedBattleCamp(void)
0x00865250 bool CTeamBattleAgit::RemoveEntryPledge(unsigned int)
0x007DF060 bool CPledgeMemberList::HasAcademyMaster(unsigned int)
0x008D8B34 class CItem *__cdecl User::GetPendingUseETCItem(enum PendingUseItemType)
0x0069D9D8 class CItem *__cdecl CItem::CopyFakeItem(void)
0x008BC420 void User::BreakFriendship(int,wchar_t*, int)
0x0068936C class CItem *__cdecl CInventory::GetNextItemByEnchantedAttribute(int)
0x006892C4 class CItem *__cdecl CInventory::GetFirstItemByEnchantedAttribute(void)
0x00689900 class CItem *__cdecl CInventory::GetMinEnchantedItemByClassID(int,bool)
0x00689744 class CItem *__cdecl CInventory::GetNextMinEnchantedItemByClassID(int,int,bool)
0x00688F88 class CItem *__cdecl CInventory::GetNextItemByClassID(int,bool)
0x00688B58 class CItem *__cdecl CInventory::GetHeroItem(bool)
0x006891AC class CItem *__cdecl CInventory::GetNextItemByClassIDEnchantedAndOption(int,int,class ItemOptionKey)
0x00689060 class CItem *__cdecl CInventory::GetFirstItemByClassIDEnchantedAndOption(int,int,class ItemOptionKey)
0x006D96FC bool CMiniGameAgitDBHandler::ReplyAddMiniGameAgitMember(class CDBSocket*, const unsigned char *)
0x005937CC void CDB::RequestSaveDuelRecord(class User*, int,int,int,int,int,int)
0x00459F50 bool AuthRequestKickAccount(class CAuthSocket*, const unsigned char *)
0x0047642C CProductSP CShopServer::GetProduct(int nProductID)
0x006B5B94 __cdecl CItemDropEvent::~CItemDropEvent(void)
0x0046154C void CBlockUpset::_RemoveAllBlockUpsetWaitingPlayers(void)
0x008002F4 void CResidence::SetBattleField(bool)
0x0090F1D0 bool ListPartyMatchingWaitingRoomPacket(class CSocket*, const unsigned char *)
0x00553EE4 void CCreature::PushSerializedMessage(class CSerializedMessage *)
0x00774E30 bool COlympiadEntry::GetEntry(enum GameRuleType,int,class COlympiadTeam **, class COlympiadTeam **)
0x007D2D88 void CPledge::SendPledgeSkillList(void)
0x006A76E8 int __cdecl MsgHelper_ManipulateItem(char*, int,int &,class CItem*, __int64,bool,int,int,int,class ItemOptionKey,int)
0x0073509C bool NpcAddPCSocial(class NpcSocket *, const unsigned char *)
0x0074ECBC bool NpcSpecialCamera3(class NpcSocket*, const unsigned char *)
0x005F4EAC void CDominion::DoInitJobsAfterLoading(void)
0x00686260 __cdecl CCenteredSharedRWLock16384::~CCenteredSharedRWLock(void)
0x008B715C bool User::OnRequestEnchantItemPacket(const int)
0x00477F64 void User::OnRuneItemsChange(void)
0x0055C14C void CCreature::_OnAbnormalStatusChanged(const class CSkillInfo &,class CCreature*, enum SkillPumpStartType,bool)
0x005DF720 bool CObjectMapclass CAlliance,1,5,class RWLock::Insert(int,class CAlliance*, char *, int)
0x006912E8 void CVehicleStartMessage::OnReceive(int)
0x0082D508 double L2SkillFunc::ApplyDamageToTarget(class CCreature*, class CObject*, double,bool)
0x0076E5DC void COlympiadSystem::CheckAutoStart(void)
0x0086203C void CStaticObject::PopFromThreadLocalMap(void)
0x004CDC40 bool BuilderCmd_show_party(class CSocket*, class User*, wchar_t *)
0x007B10D8 double CPet::EquipedArmorsPDefend(void) const
0x007B1270 double CPet::EquipedArmorsMDefend(void) const
0x007397B8 bool NpcAttackPacket(class NpcSocket*, const unsigned char *)
0x0081DC6C double CSkillInfo::GetDurationSkillProb(class CCreature*, class CCreature *) const
0x0075B878 double CContributeData::GetContributeInfos(class std::xmapunsigned int,double,struct std::lessunsigned int,class std::xallocatorstruct std::pairunsigned int const ,double  &)
0x00777124 double COwnThing::AttackedBy(class CCreature*, double)
0x0053F438 __cdecl CSafePointer2class CCreature::CSafePointer2(const class CSafePointer2class CCreature &)
0x007AE5B4 double CPetManager::MasterExpRatio(int,int,int)
0x00961B30 void `anonymous-namespace::OnAttackMissHappened(class CCreature &,class CObject &)
0x004E8D50 int __cdecl CBuy::GetTaxRate(void) const
0x00649918 bool CGeoData::CanSeeOldStyle(const class FVector &,const class FVector &,int,bool)
0x0042F43C bool CAirShipArea::Process(class CAirShip *)
0x00916D44 bool TryToPutItemForVariationCancelPacket(class CSocket*, const unsigned char *)
0x0044D32C void CAuction::ShowAuctionUI(class User*, bool)
0x005B2B30 bool ReplyManorInfoAndData(class CDBSocket*, const unsigned char *)
0x0068F874 __cdecl CIOServer::~CIOServer(void)
0x006A4550 bool CItemUseCondition_inzone::CheckPrivate(class CCreature*, class CItem *)
0x0070D80C bool CMoveToTargetAction::SetMoving(void)
0x005FDBDC void CIndividualDuel::OnPreEnd(void)
0x004CD7AC bool BuilderCmd_party_teleport(class CSocket*, class User*, wchar_t *)
0x0074C730 bool NpcVersionPacket(class NpcSocket*, const unsigned char *)
0x00769FC0 class COlympiadField *__cdecl COlympiadUser::GetField(void)
0x0060B708 void DxWriteHeroWords::DoServerJob(void)
0x00769AA8 void COlympiadEntry::EntrySelectInit(void)
0x0088C538 void User::SendSystemMessageWithSelf(unsigned int)
0x008106F8 bool CSharedFactoryclass CAirShip,class CSharedAirShipData,class CSharedAirShipConstant,&class CSharedDefine const SharedDefine_AirShip::Pop(int,int &)
0x00708678 void CJumpAction::OnEnd(bool)
0x008624D4 void CStatusWnd::SetMessage_d(int nLine, const WCHAR *sFormat, int nValue)
0x0080BABC void Server::Shutdown()
0x0086B734 void CTeleporter::SetType(enum TeleporterType,int)
0x0094501C bool HtmlCmdShowPcCafeCouponUI(class CUserSocket*, class User*, const wchar_t*, const wchar_t *)
0x00467628 bool CBlockUpsetManager::VoteToStart(int,int,bool)
0x008477A8 bool CSkillEffect_i_summon_trap::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x005B86C4 bool ReplyEnchantItemFail(class CDBSocket*, const unsigned char *)
0x0056D954 void CCreatureController::ActionBroadcastMove(const class FVector &,const class FVector &)
0x008EED68 void User::SendPledgeAnnounce()
0x00933080 int __cdecl CSocketLimiter::IncUserSocketPerMAC(__int64)
0x00646894 FVector CGeoData::GetTestPos(FVector vPos)
0x00758410 __cdecl CAbstractCarrier::CAbstractCarrier(const class CAbstractCarrier &)
0x00581C38 void CDB::ReqOwnAgit(int,int)
0x00428238 void CAirShipAreaDB::AddArea(class CAirShipArea *)
0x00887250 void CUndergroundColosseum::UserDie(class User*, class User *)
0x0044A364 bool AtomicShowFHTML::Do(void)
0x0089CD34 void User::SubtractBossPoint(int,int)
0x0060A870 void DxSetTimeAttackRewardFlag::DoServerJob(void)
0x00610B6C void CEventMatchUser::Pause(class User*, bool)
0x00836FD0 void CSkillEffect_i_event_agathion_reuse_delay::SendSystemMsg(class User &,int,int)
0x0083CE74 bool CSkillEffect_p_max_mp_add::Pump(class CCreature *, const class CSkillInfo*, int)
0x00750398 bool NpcSpecialCameraZLimit(class NpcSocket *, const unsigned char *)
0x0085ABB8 bool SSQSystem::ChangeWinner(enum SSQPart::type)
0x0081C738 void CSkillInfo::SkillAvoidOrCounter(class CCreature &,class CObject &,bool &,bool &) const
0x00836EB8 bool CSkillEffect_i_capture_ownthing_start::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x00831830 bool CSkillOperateCondition_op_use_firecracker::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x0083C7E8 bool CSkillEffect_p_block_getdamage::Pump(class CCreature*, const class CSkillInfo*, int)
0x006A1878 void CWeapon_ORT::ReportOrt(char *caller, int line, int nWorkType)
0x006AAB4C void CThreadLocalWorldMap2900000,112500,8::Initialize(const wchar_t *)
0x006AAA94 void CThreadLocalWorldMap2100000,50000,8::Initialize(const wchar_t *)
0x006AACBC void CThreadLocalWorldMap210000,20000,8::Initialize(const wchar_t *)
0x006AAC04 void CThreadLocalWorldMap21000,3000,8::Initialize(const wchar_t *)
0x006B9EBC void CLog::Add(enum LogType,wchar_t *, ...)
0x006B7F44 void CLog::Enable(bool)
0x006B8030 void CLog::ConnectToLogD(void)
0x006B92AC void CLog::AddV(enum LogType,wchar_t*, char *)
0x006BAD9C void CLogCli::LogSendMsg(enum LogType,wchar_t *)
0x006B83B8 void CLog::CreateNewLogFile(int,int,int,int,int)
0x007F3BFC void CPVPMatchSystem::SendCurrentRecordForSystemMessage(class User *)
0x004942C4 bool BuilderCmd_set_siege_end(class CSocket *, class User*, wchar_t *)
0x005C7920 bool ReplyDeleteRecipeItem(class CDBSocket*, const unsigned char *)
0x008E3834 void User::DeleteRecipeBook(int)
0x006F2AA4 void CMultiPartyCommandChannelManager::WithdrawInternal(CParty* withdrawedParty)
0x006F1184 void CMultiPartyCommandChannelManager::CloseInternal(CParty* closedParty)
0x0046A1F4 void CBossRecordList::DeleteAllBossRecord(void)
0x006FFFC0 void CAttackAction::OnFirstHitTimeForDual(void)
0x0096430C void CWorld::__async_AsyncAppearIntoAirShip(struct CExecutionArgumentPad *)
0x006F6F7C void CMultiPartyCommandChannelRegistry::UnregisterMember(unsigned int partySid)
0x0056D2A8 void `anonymous-namespace::AssembleInstantEffectType(class CCreature *, class CSmartID,class CSkillInfo*, class CSkillAction2*, short &,char*, const unsigned int,unsigned int &,const class std::xvectorclass CSkillEffect*, class std::xallocatorclass CSkillEffect* &)
0x00481A30 bool BuilderCmd_RestartClient(class CSocket *, class User*, wchar_t *)
0x006F34F0 void CMultiPartyCommandChannelManager::OnDismissParty(CParty* party)
0x0063243C void CFortress::ResetFlagpole(void)
0x00973FE4 bool CWorld::PickAndEquipItem(class CItem*, class CCreature *)
0x0083E5E4 bool CSkillEffect_p_2h_sword_bonus::Pump(class CCreature*, const class CSkillInfo*, int)
0x00736458 bool NPCActivateWorldTrap(class NpcSocket*, const unsigned char *)
0x0080A7D4 void CSerializedLookNeighborMessage::Clear(void)
0x0069C868 void CItemExpirationManager::OnItemDeleted(int,int,int,int)
0x007850BC void CPartyMatchingResponse::Respond(class CPartyMatchingResponseComponent &)
0x00585C50 void CDB::RequestConfirmCastleDefence(class User*, class CCastle*, unsigned int,unsigned int)
0x00571E24 void CCreatureController::__async_Sit(struct CExecutionArgumentPad *)
0x007AD3AC bool CPet::ValidateOrgPDefend(void)
0x008D8C3C bool User::CheckAndSetPendingUseETCItem(class CItem*, enum PendingUseItemType)
0x006FB4C0 void CGeneralAction::Set(class CSmartID,class CSmartID,enum CGeneralAction::GeneralActionType)
0x00954C08 class CVehicle *__cdecl CVehicleDB::FindVehicle(int)
0x006DB550 void CMiniGameAgit::AddEntryPledgeFromDB(unsigned int,int)
0x007AF738 bool CPet::CreatePet(class User*, int,int,int)
0x00977E04 void CWorld::DoorStatusUpdate(class CDoor *)
0x00842294 bool CSkillEffect_p_resurrection_special::PumpEnd(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpEndType) const
0x005910AC void CDB::RequestSwitchPledgeAnnounce(class User*, unsigned int,int)
0x0045E924 bool CBlockUpset::SetCombatStartingRemainSec(int)
0x00490D78 bool BuilderCmd::summon3(class CSocket*, class User*, wchar_t *)
0x006D50C4 bool CMiniGameAgitStatus::UpdateState(void)
0x00807EC4 unsigned long CSecureSection::GetString(const wchar_t*, const wchar_t*, wchar_t*, unsigned long)
0x00549EA8 unsigned long CCreature::_GetSkillUsedTime(int)
0x00550B9C unsigned long CCreature::GetSkillUsedTime(int)
0x00549FA0 unsigned long *__cdecl CCreature::GetItemUsedTime(int)
0x00680F8C bool CInstantZone::CheckEnterCondition(class User*, enum InZoneEnterType,class std::xvectorclass User*, class std::xallocatorclass User* &,struct InstantZoneEnterFailInfo &)
0x006D52C4 unsigned long CMiniGameAgitStatus::GetGameEndRemainSec(void)
0x007CA94C unsigned long CPledge::GetPowerGrade(int)
0x00595B70 void CDB::AddUserBookmarkSlot(class User*, int)
0x008869D8 void CUCRecordBoard::SendCurrentRecordForUI(class User*, int)
0x0084D0B0 bool CSkillEffect_p_block_act::Pump(class CCreature*, const class CSkillInfo *, int)
0x0082E208 void CSkillEffectByWeaponType::SetAttackTypeArray(bool [])
0x00730BB8 __cdecl NpcSocket::NpcSocket(unsigned __int64)
0x008F8918 void User::ValidateSkillList(void)
0x00607494 void CResetAllResidenceDeco::DoServerJob(void)
0x004B4640 bool BuilderCmd_unregister(class CSocket*, class User*, wchar_t *)
0x0083CC84 bool CSkillEffect_p_max_mp::PumpStart(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpStartType) const
0x0074A71C bool NpcTBAgitCheckMemberRegisterStatus(class NpcSocket*, const unsigned char *)
0x006EDAEC void CMultiPartyCommandChannel::SetMaxPartyCanJoin(int)
0x00693634 enum ItemTypeForEnchantAdd CItem::GetITEFromType(void)
0x0066B5DC void ReadMail::ExecuteInternal()
0x0083BBF8 bool CSkillEffect_p_speed::Pump(class CCreature*, const class CSkillInfo*, int)
0x005919D4 void CDB::RequestFishingEventLoadPrevRanking(void)
0x009282D8 bool RequestSetCastleSiegeTimePacket(class CSocket*, const unsigned char *)
0x00634818 void CFortress::HandleContractWithCastle(class User*, class CNPC*, class CCastle *)
0x00764984 void COlympiadField::SendVToPlayers(const char*, char *)
0x004DF5CC bool BuilderCmd::register_dominion_user(class CSocket*, class User*, wchar_t *)
0x007131E8 bool CSkillAction2::CheckConditionsOnStart(class CCreature &,bool,int &)
0x0091C7C8 bool CUserSocket::TradeRequestPacket(class CSocket*, const unsigned char *)
0x007D66C8 void CPledge::SetPledgeMember(class User *)
0x005A0C68 TYPE *Pop(int key)
0x0057D48C bool CCursedWeaponBuilderCmd::View(class CSocket*, class User*, wchar_t *)
0x007330AC bool NpcSuicide(class NpcSocket*, const unsigned char *)
0x006EA3C8 void CMonRaceDB::Init(void)
0x0040763C void CAgit::CloseAllDoor(void)
0x006BEC7C void CManor::SetInfo(int,__int64,__int64,unsigned char,struct _SYSTEMTIME *)
0x0047BB04 bool BuilderCmd_whisper(class CSocket*, class User*, wchar_t *)
0x009524E8 void Variation::InsertOptionGroup(class OptionGroup*, double,enum VariationType)
0x0087F75C bool CTrap::Activate(class CCreature *)
0x0080C3D8 void CSetting::MapRestartPointGroup(class CSetting::RestartPointGroup*, int,int)
0x005FD360 bool CDuelBuilderCmdHandler::Handle(class CSocket*, class User*, wchar_t *)
0x00951DF0 void VariationDB::RegisterItemToGroup(unsigned int,unsigned short)
0x0090150C bool CBasicActionHandler_SIT_STAND::Handle(class User*, int,bool,bool,int)
0x00893774 bool User::IsTransformedExcept(enum TransformType::Enum) const
0x0043EEC8 void AtomicEventRide::Dump(void)
0x008FC85C bool User::CanRideForEvent(int)
0x005F6EAC void CDoor::SendDoorStatus(class CUserSocket *)
0x006545E8 void CHeroSystem::AddAchievements(int,int,int,int)
0x006241D0 bool CFishingController::EndFishing(void)
0x00693108 void CItem::SetDefaultAction(enum ItemDefaultActionEnum)
0x007A2CA4 CPathNode* CPathNodeWorld::GetPathNodeArray(int x, int y, int &count)
0x0092DA40 bool CUserSocket::CheckLoginTime(void)
0x007E042C bool CPledgeMemberList::GetMemberInfo(class CPacketHelperEx16384 &,wchar_t *)
0x005AB418 bool ReplyLoadDominionRenamed(class CDBSocket*, const unsigned char *)
0x00808B50 unsigned long CSecureINIFileReader::GetString(const wchar_t*, const wchar_t*, const wchar_t*, wchar_t*, unsigned long,const wchar_t *)
0x00541C54 void CThreadLocalWorldMap2100000,50000,8::BroadcastToNeighborRectExceptSelf(class CObject*, int,class FVector,int,const char *, ...)
0x007D7E3C void CPledge::Dismiss(void)
0x004916D0 bool BuilderCmd_force_sitdown(class CSocket *, class User*, wchar_t *)
0x0094A5A0 bool HtmlCmdDiary(class CUserSocket *, class User*, const wchar_t*, const wchar_t *)
0x007499C0 bool NpcAnnouncePacket(class NpcSocket*, const unsigned char *)
0x008FE42C bool User::Dismount(bool,bool)
0x00438D64 void CArea::Process(class CCreature *)
0x004255F4 void CAirShip::OnFinishRotating(int)
0x0041CB08 void CThreadLocalWorldMap21000,3000,8::Write2(short,short,char,int,class CObject *)
0x006BBFB0 bool TimeAttackBoard::AddFee(int,__int64)
0x00892D74 bool User::IsDuelAlly(class CCreature *)
0x004F3A50 void CCastle::StartSiege(void)
0x005B3C20 bool ReplyCreatePledgeByNpc(class CDBSocket *, const unsigned char *)
0x00920490 bool TutorialQuestionMarkPressed(class CSocket*, const unsigned char *)
0x00920588 bool TutorialClientEvent(class CSocket*, const unsigned char *)
0x007F6E4C void CPVPMatchSystem::UnregisterParty(unsigned int,unsigned int)
0x00571CAC void CCreatureController::__async_Stand(struct CExecutionArgumentPad *)
0x0052E76C void CCreature::AbandonAttackLeaderOf(class CCreature *)
0x0089EEF8 bool User::SetNicknameAndColor(int,wchar_t*, int)
0x00837F20 bool CSkillEffect_i_transfer_hate::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x00530954 bool CCreature::IsDuelEnemy(class CCreature *)
0x00965970 bool CWorld::CanGo(const class FVector &,class FVector &,int,bool)
0x0058F404 void CDB::ChangeSSQDropGuardStatus(bool)
0x0058F78C void CDB::RequestMailList(class User*, class CMailListParameter &)
0x00705938 bool CMoveToTargetRelativeAction::OnTargetOutOfSight(int)
0x008D6F98 bool User::AddItemToInventory2(class CItem *)
0x00431BCC void CShipMoveAction::CalcMidDest(struct CShipMoveAction::NaviInfo &)
0x00732B34 bool NpcAuctionAgitGetCostInfo(class NpcSocket*, const unsigned char *)
0x00588378 void CDB::EvolvePetWithSameExp(class User*, class CEtcItem*, int,int,__int64,int,int,int)
0x0058C688 void CDB::RequestUpdateMonRaceMon(int,int,int,int)
0x0083AD78 bool CSkillEffect_i_vp_up::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x00894528 void User::OnAreaCheckForEveryTick(void)
0x008B438C void User::AddBlockList(int,wchar_t *)
0x005B1A4C bool ReplyLoadDayPlayTime(class CDBSocket*, const unsigned char *)
0x007EF208 void CPremiumService::RequestGetGamePoint(int,int)
0x006E9D7C void CMonRaceHTML::MonRaceView31(int,int,int,int,const unsigned char *)
0x006F9AC4 int __cdecl CMultiSellInfo::GetTaxTo(class CNPC *)
0x00737FE4 int __cdecl CSharedCreatureData::GetMemoState(int,int)
0x0077CA98 int __cdecl CSharedFactoryclass CParty,class CSharedPartyData,class CSharedPartyConstant,&class CSharedDefine const SharedDefine_Party::RemoveByIndex(int)
0x0077D298 int __cdecl CSharedFactoryclass CParty,class CSharedPartyData,class CSharedPartyConstant,&class CSharedDefine const SharedDefine_Party::Remove(class CParty *)
0x006E2E84 int __cdecl CMonRaceDB::GetRaceFee(class FVector,int)
0x0065CDEC void ListBlockHtmlBuilder::SendHtml()
0x006F04D4 int __cdecl CMultiPartyCommandChannel::TeleportMPCCToLocation(int,int,int,int,int,int,int,__int64,int,int)
0x006F874C int __cdecl CMultiSellList::AssembleOneMultisellItem(char*, int,class User*, class CMultiSellInfo*, __int64,bool,int,__int64,bool,class ItemOptionKey,class BaseAttribute)
0x00473FD0 bool CInventory::UseBolt(enum CrystalType,__int64)
0x0044CD2C bool AtomicGetOnAirShip::CanDo(void)
0x007AEE14 int __cdecl CEventRidingInfo::TimeLeft(void)
0x0051FCF4 void CCrataeCube::IterationJob(bool)
0x00682700 void CInstantZoneManager::GetRelatedMember(class User*, enum InZoneEnterType,class std::xvectorclass User*, class std::xallocatorclass User* &)
0x00669D8C int CHTMLCacheManager::IsValidLink(std::xvectorHTMLCmdData &ExpectedHtmlReplyList, WCHAR* link, int nLang)
0x005F6C60 void CDoor::SetOwningResidence(class CResidence *)
0x00489974 bool BuilderCmd_delskill(class CSocket*, class User*, wchar_t *)
0x00844DD4 bool CSkillOperateCondition_can_add_max_entrance_inzone::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x0043D678 int __cdecl AtomicShowQuestPage::Assemble(char*, int)
0x005D6264 bool CreateCharacterFailurePacket(class CDBSocket*, const unsigned char *)
0x00635AC4 bool CFortressDBEventHandler::ReplyLoadFortress(class CDBSocket*, const unsigned char *)
0x007CEF48 void CPledge::CancelAllRenamed(void)
0x00920F04 bool PrivateStoreBuyQuit(class CSocket*, const unsigned char *)
0x0060503C bool User::SetDepositedSSQItemCount(enum SSQPart::type,enum SSQItem::type,__int64)
0x00590AE4 void CDB::RequestGetNoblessAchievements(int,int)
0x0091FFCC bool PrivateStoreSetMsg(class CSocket*, const unsigned char *)
0x00920690 bool PetitionCancelPacket(class CSocket*, const unsigned char *)
0x00920B64 bool PrivateStoreBuyListSet(class CSocket*, const unsigned char *)
0x00920E3C bool PrivateStoreBuyManageCancel(class CSocket*, const unsigned char *)
0x005BEE18 bool PingOneAdenaDrop(class CDBSocket*, const unsigned char *)
0x005BF944 bool PingNetwork(class CDBSocket*, const unsigned char *)
0x0091FE0C bool PrivateStoreManageCancel(class CSocket *, const unsigned char *)
0x0067FBB4 void CInstantZoneManager::DeleteInstantZoneByBuilder(class CInstantZone &)
0x00707AEC bool CMoveAction::SetMovingCameraModeImpl(void)
0x006167C4 void CEventMatch::LeaveUser(class User*, class User *)
0x00669B54 int CHTMLCache::IsValidLink(std::xvectorHTMLCmdData &ExpectedHtmlReplyList, WCHAR* link)
0x004A8CF0 bool BuilderCmd::start_dominion(class CSocket*, class User*, wchar_t *)
0x0095F6E0 void CWareHouseWithdraw::Request(const unsigned char *, int)
0x00850A0C bool CSkillEffect_p_block_buff_slot::PumpStart(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpStartType) const
0x007961B0 bool CPartyMatchingWaitingRoomListFilter::IsInPage(int)
0x0058C034 void CDB::LoadRecipeBookChapter(class User *)
0x00476BA8 CShopServer::Load()
0x0057F9F8 void CDB::RequestUpdateMercenary(int,class FVector,class FAngle,double,double) const
0x007668AC void COlympiadField::DoFinishJob(enum OlympiadTeamEnum,enum OlympiadTeamEnum,int)
0x00922B1C bool RequestMakeMacro(class CSocket *, const unsigned char *)
0x00479F9C bool BuilderCmd_spawninfo(class CSocket*, class User *, wchar_t *)
0x007BB4F4 int CPetitionCli::GetMyPetition(int nUserDBID)
0x0097DA34 void CXmasSantaEventInfo::TimerExpired(int)
0x006D174C void CMemoHTML::MemoList( const unsigned char* packet)
0x006D1288 void CMemoHTML::MemoModifyForm(int nSendType, const unsigned char* packet)
0x006D04CC void CMemoHTML::MemoWriteForm(int nSendType, const unsigned char* packet)
0x0058CD90 void CDB::UnequipHenna(class User*, int,__int64,__int64,int)
0x0081C210 const class std::xvectorclass CSkillEffect*, class std::xallocatorclass CSkillEffect* *__cdecl CSkillInfo::GetEffects(enum CSkillInfo::EffectActivateTiming) const
0x006F619C void CMultiPartyCommandChannelRegistry::SetMaxChannel(int)
0x009032E4 void CUserBookmarkHandler::SendList(class User *)
0x00508EC4 void CIOSocketExclass CIOBufferEx16384 ::Initialize(void)
0x008A1010 void User::SendDeleteObject(class CObject*, bool)
0x0048A1D8 bool BuilderCmd_partytel(class CSocket*, class User*, wchar_t *)
0x0096CC78 void CWorld::__async_AsyncUnLoadStaticObject(struct CExecutionArgumentPad *)
0x00831988 bool CSkillOperateCondition_op_territory::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x007CC234 void CPledge::PlayMemberMusic(void)
0x00594B7C void CDB::RequestGetTutorial(int,class CUserSocket *)
0x005EAE54 bool CDominionSiegeEntry::IsEmpty(void)
0x007FBD74 void CResidence::SaveIncome(bool)
0x007B156C void CPet::OnDieDropItem(bool)
0x004AEB3C bool BuilderCmd::show_pos_trace(class CSocket*, class User*, wchar_t *)
0x00583D48 void CDB::RequestChangeItemData(class User*, int,int,char *)
0x006F7504 void SendMPCCRoutingInfo::Work(class User *)
0x004BC074 bool BuilderCmd_del_subpledge_skill_all(class CSocket*, class User*, wchar_t *)
0x00583ED8 void CDB::RequestSetPunish(unsigned int,int,int,int)
0x007BF0A8 static bool PetitionAcceptWorld(CPetitionSocket *socket, const unsigned char *packet)
0x007C0608 static bool PetitionServerVersion(CPetitionSocket *socket, const unsigned char *packet)
0x008EE35C bool User::DoesShowPledgeEmblem(void)
0x005A3E20 bool ReplyConvertItem(class CDBSocket*, const unsigned char *)
0x008F0CBC class CResidence *__cdecl CResidenceDB::GetWhoseBattleCampZone(const class FVector &)
0x0049FA84 bool BuilderCmd_set_party_per_channel(class CSocket*, class User*, wchar_t *)
0x00448824 bool CSharedCreatureData::SetNRJournal(int,int)
0x00696E08 bool CItem::SimulateWithInventory(class CInventory &,struct std::pairint,__int64 &,__int64) const
0x0090F694 bool RequestViewPledgePower(class CSocket*, const unsigned char *)
0x00727BA8 void CNPC::SendNPCInfoForSpecialCamera3(class User*, class FVector,int)
0x00928A64 bool RequestRecipeBookItemDelete(class CSocket*, const unsigned char *)
0x007B4660 bool CPetManager::IsSummonedPetCollar(int)
0x0083D840 bool CSkillEffect_p_passive::CheckPumpCondition(class CCreature *)
0x0057B0A0 void CCursedWeaponMgr::OnPickUp(class User*, class CItem *)
0x006C6C4C void CManorFuncHandler::ShowSeedInfo(void)
0x005318FC bool CCreature::IsCheckBot2(int,int)
0x00754F08 bool NpcUnregisterPVPMatch(class NpcSocket*, const unsigned char *)
0x00467814 void CBlockUpset::_RemoveBlockUpsetWaitingPlayerInfo(class CBlockUpsetMemberInfo *)
0x00911788 bool RequestFortressMapInfo(class CSocket*, const unsigned char *)
0x00461B70 bool CBlockUpset::_IsBlockUpsetCombatPlayer(int)
0x0092E388 bool ReloadPacket(class CSocket*, const unsigned char *)
0x00713420 void CSkillAction2::OnEnd(bool)
0x005C2858 bool RecipeMakeItem(class CDBSocket *, const unsigned char *)
0x00545A90 void CCreature::ValidateLocationInAirShip(unsigned int)
0x0071AD44 double CNPC::CPRegenBonusByMotionEx(void)
0x0071ACAC double CNPC::MPRegenBonusByMotionEx(void)
0x00943424 bool HtmlCmdMemo(class CUserSocket*, class User*, const wchar_t*, const wchar_t *)
0x009434BC bool HtmlCmdOlympiad(class CUserSocket*, class User*, const wchar_t*, const wchar_t *)
0x00451008 void CAuctionManager::GetAuction(class std::CDualKeyenum ItemAuctionType,int,class std::xvectorclass CAuction*, class std::xallocatorclass CAuction* &)
0x0071F344 void CNPC::CreateInitialItems(void)
0x00943124 bool HtmlCmdBookmark3(class CUserSocket*, class User *, const wchar_t *, const wchar_t *)
0x0094320C bool HtmlCmdBookmark4(class CUserSocket*, class User *, const wchar_t *, const wchar_t *)
0x004D4DB8 bool BuilderCmd_sendhome(class CSocket*, class User*, wchar_t *)
0x006FCF20 double CAttackAction::CalcBowBonusRate(double,double)
0x006FE7D4 double CAttackAction::GetHitRatio(bool,double,double,const class FVector &,const class FVector &,const class FAngle &)
0x006FC9D4 double CAttackAction::CalcCriticalHeightBonus(const class FVector &,const class FVector &)
0x0070F70C double CSkillAction2::CalcTimeFactor(class CCreature &,class CSkillInfo &)
0x006FCA98 double CAttackAction::CalcHitHeightBonus(const class FVector &,const class FVector &)
0x0071AC14 double CNPC::HPRegenBonusByMotionEx(void)
0x00458864 bool AuthReplyAgeForKoreanStyle(class CAuthSocket*, const unsigned char *)
0x0083BCB0 bool CSkillEffect_p_attack_speed::Pump(class CCreature*, const class CSkillInfo*, int)
0x008941C0 double User::MenBonusF(void) const
0x009063F8 void User::ValidateSubJobParameters(void)
0x006F0070 void CMultiPartyCommandChannel::GetAllMember(class std::xvectorclass User*, class std::xallocatorclass User* &)
0x007F70AC int __cdecl CPVPMatchSystem::CheckRegisterParty(unsigned int,unsigned int)
0x00859934 void CSocket::SendV(const char*, char *)
0x00954FCC void CVehicle::ProcessStopDrive(void)
0x00593D94 void CDB::RequestPayFortressRent(int,int,int,__int64)
0x0084AB60 bool L2SkillFunc::CalcAndApplyMagicAttackRangeDamage(class CCreature *, class CObject *, const class CSkillInfo *, double,double,double,bool,bool)
0x00519B8C int __cdecl CCoretimeTeleportEventMgr::ConvertToCoretimePrice(int)
0x00822438 void CSkillInfo::PushRelatedItem(int)
0x0051E33C void CCrataeCube::OnNpcServerClosed(void)
0x005B683C bool LoadQuestPacket(class CDBSocket*, const unsigned char *)
0x005CFE54 bool LoadItemsPacket(class CDBSocket*, const unsigned char *)
0x005D50C0 bool LoadCharacterPacket(class CDBSocket*, const unsigned char *)
0x005E0644 bool LoadSelectedCharacterPacket(class CDBSocket*, const unsigned char *)
0x004E7E38 bool BuilderCmd::blockupset(class CSocket*, class User*, wchar_t *)
0x0082CFC0 bool L2SkillFunc::ApplyShieldDefense(class CCreature &,class CObject *, double,double &)
0x00849ABC bool L2SkillFunc::CheckResisted(bool,bool,int,double,int,double,bool,double,double)
0x0084A9B4 bool L2SkillFunc::CalcAndApplyMagicAttackDamage(class CCreature*, class CObject*, const class CSkillInfo*, double,double,bool)
0x006C1CC0 bool CManor::SetNextProcureInfo(int,__int64,__int64,int)
0x0076CC8C void COlympiadTeam::ResetStatus(void)
0x007C673C const unsigned char *__cdecl CPledge::AddMemberByDisassemble(enum PledgeType,int,const unsigned char *)
0x007D02CC void CPledge::UpgradeSubPledgeMemberCountByNpc(class CNPC*, class User*, enum PledgeType)
0x0084B790 bool CSkillEffect_i_m_attack_by_dist::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x0042BEC0 bool CAirShipManager::SailRegularAirShip(void)
0x00839500 bool CSkillEffect_i_dispel_by_slot_probability::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x007FF2CC void CResidence::MakeDoorsOpenClose(int)
0x00796944 bool CPartyMatchingWaitingRoom::ListWaitingRoom(class CPartyMatchingWaitingRoomListFilter &)
0x008F84F0 void User::ValidateSkillListInTransform(void)
0x004D3644 bool BuilderCmd_healthy(class CSocket*, class User*, wchar_t *)
0x007AE920 void CCommonRidingInfo::RideStrider(class CPet *)
0x00895670 void User::SendStorageMaxCount(void)
0x007E4A50 void SetAllianceCrest::ServeInternal(class User *)
0x00904BDC void CUserBookmarkHandler::ModifySlot(class User*, const unsigned char *)
0x0047F5E8 bool BuilderCmd_reload_market_price(class CSocket*, class User*, wchar_t *)
0x0044B878 bool AtomicJobList::Do(void)
0x00842A80 bool CSkillEffect_p_sp_modify::PumpEnd(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpEndType) const
0x008837E0 bool CUndergroundColosseum::CheckRegisterLevel(int)
0x00897C68 bool User::ValidateOrgCPRegen(void)
0x0042AAB4 void CAirShip::SeeDropItem(class CItem*, class CCreature *)
0x00832978 bool CSkillEffect_op_combat::CanUse(class CCreature*, const class CSkillInfo *, class CObject *)
0x00613D58 void CEventMatch::Broadcast(const char*, ...)
0x007BEF58 static bool PetitionDummyPacket(CPetitionSocket *socket, const unsigned char *packet)
0x0067F22C bool CInstantZone::LeaveZone(class CNPC *)
0x00832738 bool CSkillOperateCondition_op_need_agathion::CanUse(class CCreature *, const class CSkillInfo*, class CObject *)
0x0083FF78 bool CSkillEffect_p_skill_power::Pump(class CCreature*, const class CSkillInfo*, int)
0x0083D698 bool CSkillEffect_p_safe_fall_height::Pump(class CCreature*, const class CSkillInfo*, int)
0x00892100 void User::ManipulatePVPPointWithItem(int,int,int,__int64,int)
0x0042184C void CThreadLocalWorldMap2100000,50000,8::BroadcastToNeighbor(class CObject *, int,class FVector,const char*, ...)
0x0088ED64 void User::SendHennaItemInfo(int)
0x00671514 bool ModifySendMail::CheckReceiverList()
0x007A80A8 void CPCCafeEventMgr::ShowEventSetting(User *pUser)
0x007A89E4 void CPCCafeEventMgr::ProcessNextSchedule(int nCurrentTime, int nType)
0x007A9D44 void CPCCafeEventMgr::TimerExpired(int id)
0x005439CC bool CCreature::OnRegenTimer(class FVector &)
0x00434DB4 class CAlliance *__cdecl CAlliance::GetObjectW(unsigned int)
0x008EE2A4 class CAlliance *__cdecl User::GetAlliance(void)
0x004A2780 bool BuilderCmd_UnequipWeapon(class CSocket *, class User*, wchar_t *)
0x005953C0 void CDB::RequestChangeNicknameColor(unsigned int,int,wchar_t *)
0x005192C8 void CControlTower::OnSiegeResumed(void)
0x006BB1A4 __cdecl CLogSocket::CLogSocket(unsigned __int64,bool (__cdecl **)(class CLogSocket*, const unsigned char *))
0x00481978 bool BuilderCmd_RecallPartyMember(class CSocket*, class User *, wchar_t *)
0x007D5860 void CPledgeTimer::ReserveDismiss(unsigned int,unsigned int)
0x00464BB4 void CBlockUpset::_MakeBlockUpsetListTotal(class CPacketHelperEx16384 &)
0x004310B8 void CShipController::DoFirstAction(void)
0x008FBE10 class CPet *__cdecl User::GetPet(void)
0x004BDCB8 bool BuilderCmd::c_enter_world(class CSocket*, class User*, wchar_t *)
0x009377D4 bool RequestRecipeShopSellList(class CSocket*, const unsigned char *)
0x0043EBB8 const unsigned char *__cdecl AtomicRideWyvern::Disassemble(const unsigned char *)
0x00558B38 void CCreature::GatherNeighborCreatureSquare(int,int,class std::xvectorclass CSafePointer2class CCreature,class std::xallocatorclass CSafePointer2class CCreature  &,class std::xvectordouble,class std::xallocatordouble &,const struct DamageRangeType &,int,int,enum SkillAffectObjectTypeEnum,class CCreature*, class CCreature*, class FVector)
0x00953B6C unsigned int CSmartIdManagerclass CVehicle,100,8::RegisterObject(unsigned int,unsigned int,class CVehicle *)
0x006FE23C bool CGeneralAction::OnStart(void)
0x00742310 bool GetJackpotTime(class NpcSocket *, const unsigned char *)
0x0072FE4C bool GetPlayingUserCount(class NpcSocket*, const unsigned char *)
0x005DA600 bool GetLoginAnnouncePacket(class CDBSocket *, const unsigned char *)
0x00404D28 bool GameGuardAgent::QueryFirstImpl(class std::_Vector_iteratorclass CPacketHelperEx16384*, class std::xallocatorclass CPacketHelperEx16384* )
0x00723FC8 void CNPC::OnCreate(void)
0x0052D5D8 bool CCreature::ValidateOrgMDefend(void)
0x004042D4 bool GameGuardAgent::ResponseFirstImpl(const unsigned char **)
0x00577E14 const struct CursedWeaponInfo *__cdecl CCursedWeaponConstInfo::Find(int) const
0x0058C858 void CDB::RequestGetMonRaceTicketInfo(class User*, int)
0x007F1EBC void CPVPMatchSystem::SetEnableCheckGivePVPPointTime(bool)
0x007CA72C bool CPledge::CheckPowerByGradeId(int,enum PledgePowerEnum)
0x0091E1EC bool GetOnVehiclePacket(class CSocket*, const unsigned char *)
0x00631D14 void CFortress::AddRelatedCastle(int)
0x004264A4 void CAirShip::SendAirShipInfo(class CUserSocket *)
0x009213B4 bool RequestCastleSiegeInfoPacket(class CSocket*, unsigned int)
0x00589CBC void CDB::RequestAgitBid1(class User*, int,int)
0x0043E270 const unsigned char *__cdecl AtomicStartObserver::Disassemble(const unsigned char *)
0x007D44D4 void CPledge::RevivePledgeByNpc(class CNPC*, class User *)
0x004CEB1C bool CObjectMapclass CUserSocket,8191,30,class RWLock::ExistKey(int)
0x009611A0 bool CWatchList::ParseWatchList()
0x00837280 bool CSkillEffect_cub_m_attack::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x0085A0A8 void SSQSystem::ValidateTotalPortion(void)
0x0083F8FC bool CSkillEffect_p_pvp_magical_skill_defence_bonus::Pump(class CCreature*, const class CSkillInfo*, int)
0x007E4ABC void SetPledgeMember::ServeInternal(class User *)
0x00607134 void CSetResidenceDeco::DoServerJob(void)
0x008289B4 void SkillEnchantUntrain::SendAcquirableSkillList(class User *, int)
0x00824FFC void SkillEnchantOperator::SendEnchantSkillInfo(class User*, class CUserSocket*, int,int,bool)
0x00829F38 void SkillEnchantNormal::SendAcquirableSkillList(class User*, int)
0x00829C0C void SkillEnchantOperator::NpcEnchantSkillSuggestion(int,int,int,int)
0x0082AA2C void SkillEnchantRouteChange::SendAcquirableSkillList(class User*, int)
0x00520490 bool CCCRecordBoard::DeleteRecordData(class User *)
0x00776D18 void COwnThing::Disappear(void)
0x006F9EEC bool CMultiSellList::CheckSendable(class CMultiSellInfo*, class User *)
0x009105FC bool RequestItemAuctionBid(class CSocket*, const unsigned char *)
0x0084470C bool CSkillEffect_i_fishing_shot::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x0052D820 bool CCreature::ValidatePDefend(void)
0x0090088C bool CBasicActionHandler_RIDE::Handle(class User*, int,bool,bool,int)
0x005F3754 void CDominion::StartSiege(void)
0x006068D8 void DxReloadHeroRank::DoServerJob(void)
0x006D53F8 void CMiniGameAgit::StartTimer(void)
0x00851FA0 bool CSkillOperateCondition_op_check_residence::CheckResidence(unsigned int)
0x006BBC68 void TimeAttackBoard::OnStart()
0x00743170 bool NpcBroadcastScriptEvent(class NpcSocket*, const unsigned char *)
0x0084D350 bool CSkillEffect_i_summon_pet::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x00950194 LoadBinaryAbsoluteSecure
0x00605F34 void DxChangeMainEventPoint::DoServerJob(void)
0x00755150 bool NpcStartPVPMatch(class NpcSocket*, const unsigned char *)
0x0047C650 bool BuilderCmd::_set_siege_period(class User*, class CUserSocket*, class CResidence *, int)
0x00899A7C void User::ResetAreaFlag(void)
0x005EA8F4 void CDominion::StandBySiege(void)
0x0044DC88 void CAuction::Delete(void)
0x00739228 bool NpcMovePacket(class NpcSocket*, const unsigned char *)
0x006BDB10 void DoorEventMap::MakerFinished(void)
0x007C9560 void CSmartIdManagerclass CPledge,10000,8::DeleteObject(unsigned int)
0x007C3B98 void CPledge::SetFortress(class CFortress *)
0x005DEDBC bool ReplyUnregisterSiegeAgitPledge(class CDBSocket*, const unsigned char *)
0x0082E7E4 bool CSkillOperateCondition_op_check_abnormal::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x0091314C bool RequestReorganizePledgeMember(class CSocket*, const unsigned char *)
0x0094ED5C GetYYYYMMDDFromTime(time_l2_t tTime)
0x007DA7E0 bool CPledge::CanAnySubPledgeSkillAcquire(int,int)
0x004A8AE4 bool BuilderCmd::register_dominion(class CSocket*, class User*, wchar_t *)
0x00483C28 bool BuilderCmd_WithdrawAuctionBid(class CSocket*, class User*, wchar_t *)
0x007F15B0 bool CPVPMatch2::ReadyMatch(void)
0x0060A988 void DxReloadHeroById::DoServerJob(void)
0x0045E7DC bool CBlockUpset::SetBlockUpsetWinner(enum BlueRedTeam::Enum)
0x0059F15C bool ReplyFishingEventLoadPrevRanking(class CDBSocket*, const unsigned char *)
0x006DE7E0 int __cdecl CMonRaceDB::GetElapsedTime(void)
0x005847D0 void CDB::RestoreCharacter(int,unsigned int,class CUserSocket *)
0x00597F3C void CJobFinishSignal::SetAgitLoaded(void)
0x007067AC void CMoveAction::Start()
0x00778668 double COwnThing::GotDamageBy(class CCreature*, double)
0x0087D688 bool CTransformDB::HaveSameSkillBySkillID(const class std::xvectorclass CSkillInfo const*, class std::xallocatorclass CSkillInfo const* *, const class CSkillInfo *)
0x006916C8 void COlympiadLoadingMessage::OnReceive(int)
0x005CB314 bool ReplyManMacro(class CDBSocket*, const unsigned char *)
0x0069AE34 int __cdecl CSetItem::SlotToSetItemClassID(int,int) const
0x006774DC void InstantZoneLogHelper::Log(class CInstantZone*, class User*, int,enum InZoneEnterType,int)
0x005A1768 ReplySetPledgeEmblem(CDBSocket *socket, const unsigned char *packet)
0x0043DA70 const unsigned char *__cdecl AtomicPledgeLevelUp::Disassemble(const unsigned char *)
0x00841DBC bool CSkillEffect_p_betray::PumpEnd(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpEndType) const
0x005C50E0 bool ReplyDepositWarehouseItemsEx(class CDBSocket*, const unsigned char *)
0x004196CC void CAirportPlatform::SetOccupied(bool)
0x0075CEE0 void CContributeData::SetMPCCMasterPartyRouting(void)
0x00903634 int __cdecl CUserBookmarkSetting::HaveTeleportItem(class User *)
0x005D78C8 bool UpdateSkillPacket(class CDBSocket*, const unsigned char *)
0x005043A0 void RequestGetMemo( User * pUser, int nMemoId, int nPage, WCHAR* szSearch)
0x00623E28 bool CFishingController::SendFishingStartCombatPacket(void)
0x005739E4 struct CubicSkillInfo *__cdecl CCubicHandler::ChooseSkill(class CCreature &,class CCubic &,struct CubicActivationInfo &,struct ActivateInfo2 &)
0x0060C808 int __cdecl EtcManiCreateItemAuctionBid::Assemble(char*, int)
0x008426D4 bool CSkillEffect_p_anti_cubic::PumpStart(class CCreature &,class CCreature*, const class CSkillInfo *, enum SkillPumpStartType) const
0x007DD310 CPledgeAnnounceSP CPledgeAnnounceRegistry::Get(unsigned int pledgeId)
0x0074DC9C bool NpcRegisterBuySellListPacket(class NpcSocket*, const unsigned char *)
0x0063C890 void CFortress::HandleRegisterSiege(class User*, class CNPC *)
0x005E7A94 void CDBSocketOp::ModPledgeSkill(const unsigned char *)
0x007318B4 bool NpcInstantTeleport(class NpcSocket*, const unsigned char *)
0x00691F8C __cdecl CIOCriticalSection::CIOCriticalSection(void)
0x0070FB04 bool `anonymous-namespace::CheckIsMagicProblem(class CCreature*, int)
0x00582084 void CDB::RequestOustPledgeMember(class User*, class CPledge *, const wchar_t *) const
0x00913934 bool UserPacketEx::NotifyStartMinigamePacket(class CSocket*, const unsigned char *)
0x007CCA30 bool CPledge::IsSubMaster(class User*, enum PledgeType)
0x004E941C bool CCastle::SetSiegeDate(long)
0x007C41A4 bool CPledge::IsPledgeSkill(unsigned int,int)
0x00519210 void CControlTower::OnSiegePaused(void)
0x00597B18 __cdecl CJobFinishSignal::~CJobFinishSignal(void)
0x004FA52C void CCleftMemberInfo::MakeStateInfo(class CPacketHelperEx16384 &)
0x008FDB18 bool User::Ride(class CPet *)
0x008AD5A0 bool User::OnExAutoSoulShotPacket(int,bool)
0x004EC99C void CCastle::RegisterSiegeGolemSummoner(class User *)
0x007C36D8 bool CPledge::IsWaitingToDismiss(void) const
0x00676E8C enum InstantZoneBindingLevel CInstantZoneGroup::IsBinding(class User *, long)
0x006520E4 void CHeroSystem::RefreshHeroList(void)
0x0058B65C void CDB::RequestSetMiniGameAgitStatus(unsigned int,unsigned int)
0x0067E4B4 void CInstantZone::_ClearAssociatedUserList(void)
0x008311F8 bool CSkillOperateCondition_check_level::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x0058F35C void CDB::LoadSSQInfo(void)
0x006AC5D8 void CThreadLocalWorldMap2100000,500000,8::CTL_Map2::Insert(short,short,char,int,class CObject *)
0x0043D410 int NRMemoControl::Assemble(char *outBuf, int nBufSize)
0x00506274 static bool CommBBSReadArticlePacket(CCommSocket *socket, const unsigned char *packet)
0x0086A9E8 void CTeamBattleFlag::Appear(void)
0x0067F428 bool CInstantZone::LeaveZone(class CItem *)
0x00831EB0 bool CSkillOperateCondition_op_encumbered::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x0073BF2C bool ShowTutorialPage(class NpcSocket*, const unsigned char *)
0x004B5140 bool BuilderCmd_defend_register(class CSocket*, class User*, wchar_t *)
0x00832DF8 bool CSkillEffect_i_dispel_by_slot::Instant(class CCreature*, class CObject*, const class CSkillInfo *, class CSkillAction2*, double)
0x0052A384 void CSharedCreatureData::ValidateHP(double)
0x00614E18 void CEventMatch::Manage(class CUserSocket *)
0x00899F28 void User::ValidateLocation(class FVector)
0x00962C80 void CWorld::__async_AsyncMove(struct CExecutionArgumentPad *)
0x00469AE4 bool CBossRecord::SubtractPoint(int,int)
0x0041B040 void CTLPipeBasestruct CTL_WorldMapNode2,3000,8::Read(class CTLPipeBasestruct CTL_WorldMapNode2,3000,8::CReadCallback *)
0x0092228C bool RequestHennaItemList(class CSocket*, const unsigned char *)
0x007C816C void CObjectStorageclass CBattleCamp::SetObject(class CBattleCamp *)
0x00419AD0 bool CAirShipConstFree::PaySummonCost(class User *)
0x00584AD0 void CDB::RequestPledgeExtendedInfo(class User*, const wchar_t *)
0x005973D0 void CDB::RequestLoadDominionRenamed(int)
0x006DB8AC bool CMiniGameAgit::IsPlayer(class User *)
0x005D7700 bool KickCharPacket(class CDBSocket *, const unsigned char *)
0x00855FC0 bool CSkillEffect_p_trigger_skill_by_attack::Pump(class CCreature*, const class CSkillInfo*, int)
0x008A60F4 bool User::CanUseItem(void)
0x005BE8B4 bool BBSGetAnnounce(class CDBSocket *, const unsigned char *)
0x0080A71C void CSerializedDisappearMessage::Clear(void)
0x00406108 __cdecl CAgit::CAgit(void)
0x00758D38 void CTLPipeBaseunsigned int,1000000,8::CThreadPipe::Read(class CTLPipeBaseunsigned int,1000000,8::CReadCallback *)
0x009223FC bool RequestHennaItemInfo(class CSocket*, const unsigned char *)
0x00859C40 bool SSQSystem::OnEventEnd(void)
0x0068E710 bool CIOObject::SetShortTimeStamp(unsigned long*, unsigned long)
0x005718FC void CCreatureController::DoFirstAction(void)
0x00562E54 int __cdecl CCreature::_FindSameBuff(const class CSkillInfo*, bool &,int &,int &,int &) const
0x0062D860 void CFortress::AddContractLog(int,int)
0x0053FBE0 int __cdecl CCreature::_FindFirstReplacableBuffSlot(enum DebuffType,bool) const
0x00531490 int __cdecl CCreature::GetPCriticalRateForInfo(void) const
0x004FC45C void CCleft::_OnRegister(void)
0x004E97E8 int __cdecl CCastle::GetReservedAttackerCount(void)
0x00811734 int __cdecl CContainerDB::GetAirShipID(int)
0x004E9978 int __cdecl CCastle::GetNumChildDomainFortress(void)
0x004E98B0 int __cdecl CCastle::GetReservedDefenderCount(void)
0x00665D14 void PledgeAnnounceHtmlBuilder::SendHtml()
0x00665B8C void PledgeAnnounceHtmlBuilder::Show(unsigned int userServerId, unsigned int pledgeDbId, int doesShow, WCHAR* content)
0x0065EC48 void PledgeAnnounceHtmlBuilder::BuildHtmlInternal()
0x0065EA7C void PledgeAnnounceHtmlBuilder::DisassemblePacket()
0x0065E3AC void PledgeAnnounceHtmlBuilder::Build1002Packet()
0x006169D8 void CEventMatchRuleSet::Copy(const class CEventMatchRuleSet &)
0x00876D10 bool CTrade::CheckItemCount(const unsigned char*, int)
0x00965CA4 void CThreadLocalWorldMap2900000,112500,8::Write2(short,short,char,int,class CObject *)
0x00837CF0 bool CSkillEffect_i_detect_trap::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x007AF810 void CPet::EatFood(int)
0x004D5464 bool BuilderCmd_teleportto(class CSocket*, class User*, wchar_t *)
0x009243FC bool CUserSocket::CheckMaxPacketAccept(int)
0x007538C4 bool NpcEnchantSkillSuggestion(class NpcSocket*, const unsigned char *)
0x0091E8CC bool StopPledgeWarPacket(class CSocket*, const unsigned char *)
0x007306AC bool DoQuestItemLogging(class User*, int,class ItemManip [])
0x00815520 class SharedTimeAttackInfo *__cdecl SharedTimeAttackInfo::GetInfo(int,int)
0x006061A4 void DxChangeSSQWinner::DoServerJob(void)
0x0097E8F4 bool CYearCatchEventMgr::Load(void)
0x005A21AC bool ReplyUpdateSubPledgeMaster(class CDBSocket*, const unsigned char *)
0x008382E0 bool CSkillEffect_i_summon_cubic::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x0091EF3C bool CannotMoveAnymoreInVehiclePacket(class CSocket*, const unsigned char *)
0x0063C6C8 void CFortress::BroadcastStandbyCountDown(long)
0x005AF304 void UserItemDurationMapper::Map(unsigned int,int)
0x007D6D18 void CPledge::TeleportToLocation(int,int,int,int,unsigned int)
0x00430CE0 void CShipController::DoPendingAction(int)
0x0058D6D8 void CDB::RequestSaveManorNowSeed(int,int,int,int,int,int,int,int,int,int,int,int,int)
0x00580070 void CDB::RequestCreatePledgeByNpc(class CNPC*, class User*, const wchar_t *)
0x005A470C bool ReplyWaitingTransferPledgeMasterEx(class CDBSocket*, const unsigned char *)
0x0093C2DC bool AnswerJoinAlliancePacket(class CSocket *, const unsigned char *)
0x00802480 void CResidenceDB::ResidenceGuardLoad(void)
0x007C0DE0 void CPetitionSocket::OnClose(void)
0x00904A40 bool CUserBookmark::CanSaveBookmark(class User *)
0x004F58E0 bool CCategoryDataDB::AddObjectInCategory(int,int)
0x00635A1C void CFortressSiege::SetMembersNotInSiege(void)
0x0044BA98 bool AtomicJobList::CanDo(void)
0x0041ED4C void CAirShipForRegular::OnNodeChanged(void)
0x0047D0A4 bool BuilderCmd_hennaunequiplist(class CSocket*, class User*, wchar_t *)
0x00841ADC bool CSkillEffect_p_stat_up::PumpEnd(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpEndType) const
0x00694298 bool CItem::IsSellable(class User*, bool)
0x007F84AC bool CRecipeInfo::IsEnoughItem(class User*, int,int,int &)
0x005FBBA4 void CDuel::TimerExpired(int)
0x006295C0 bool CFishingEventMgr::ReplyFishingEventLoadPrevRanking(const unsigned char *)
0x0091F644 bool RestartPointPacket(class CSocket*, const unsigned char *)
0x004053B0 void NewInspectorAgent::QueryCommon(class CPacketHelperEx16384 &)
0x0046FDDC void CBotReportAgent::SetStopBotReport(int,int)
0x005F0B0C void CDominionSiegeEntry::SendDominionMessage2(int,int)
0x0055CC2C bool CCreature::ResurrectBy(class CCreature *, __int64)
0x008A3DF8 bool User::TeleportToLocation(int,int,int,unsigned int,int)
0x007E3998 void CPledgeMemberList::Remove(unsigned int)
0x0044DDA0 struct NPCAuctionItem CAuctionNPC::GetAuctionItem(void)
0x005B6AE0 bool ReplyLoadAgitPacket(class CDBSocket*, const unsigned char *)
0x007B1408 void CUserRidingInfo::OnEnterWorld(void)
0x006D9E4C bool CMiniGameAgitBuilderCmd::RegisterPledge(class CSocket*, class User*, wchar_t *)
0x007A92F8 bool CPCCafeEventMgr::LoadINIFile()
0x008323C0 bool CSkillOperateCondition_op_check_flag::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x004E1794 bool BuilderCmd_recommand(class CSocket*, class User *, wchar_t *)
0x008A66B4 bool User::OnTradeStartPacket(int)
0x00406CAC void CAgit::ChangeOwner(class CPledge*, bool)
0x008354E4 bool CSkillEffect_i_focus_energy::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x005B2860 bool ReplySetTeamBattleStatus(class CDBSocket*, const unsigned char *)
0x00639ED8 void CFortress::SiegeCancel(void)
0x00720A4C void CNPC::DebugSay(wchar_t *, class FVector)
0x0085C15C bool SSQSystem::DepositItemEx(class User*, enum SSQPart::type,__int64 [],__int64)
0x004F25E8 void CCastle::SendCastleSiegeDefenderList(class CUserSocket*, class User *)
0x0045DFD4 class CBlockUpset &__cdecl CBlockUpsetManager::GetStage(int)
0x006DF068 double CMonRaceHTML::GetWinRate(int,int,int,int,int,int,double)
0x006FB11C double CAttackAction::GetHitTimeFactor(class CCreature &)
0x00694458 double CItem::GetEnchantedArmorHPBonus(void)
0x006CEA40 double CMarketPriceList::Get(int,int)
0x005F901C double CDoor::GotDamageBy(class CCreature*, double)
0x0062277C double CFishingController::GetFishingExperienceBouns(void)
0x005F731C double CDoor::AttackedBy(class CCreature*, double)
0x0079AC94 void CPartyRoom::GetPartyMemberWithPM_WindowOpen(class std::xvectorclass CSPointerclass CRoomMember,class std::xallocatorclass CSPointerclass CRoomMember  &)
0x0089FD64 void User::CheckBotReportEvent(int)
0x0086743C void CTeamBattleAgit::EndSiege(void)
0x0047D00C bool BuilderCmd_hennaitemlist(class CSocket *, class User*, wchar_t *)
0x006FC748 double CAttackAction::CalcCriticalLocBonus(class CCreature*, const class FVector &,const class FVector &,const class FAngle &)
0x006FC8E0 double CAttackAction::CalcHitLocBonus(const class FVector &,const class FVector &,const class FAngle &)
0x0083B7CC bool CSkillEffect_p_resist_dd_magic::Pump(class CCreature*, const class CSkillInfo*, int)
0x00816A00 void CShortCut::DeleteItemShortCut(int)
0x00536D50 void CCreature::ValidateSpeed(void)
0x0060A748 void DxAddTimeAttackFee::DoServerJob(void)
0x00499F08 bool BuilderCmd::lotto_move_round(class CSocket*, class User *, wchar_t *)
0x00898AD8 void User::SendInSight(class CObject*, bool)
0x008F2ABC void User::ActionFailed(void)
0x007D088C void CPledge::RenameSubPledgeByNpc(class CNPC*, class User*, enum PledgeType,const wchar_t *)
0x005054B4 void CCommCli::RequestClanBBSSetPer( User * pUser, int nWorldId, int nPledgeId, int nBid, int nBoardType, int nPerType, int nPer)
0x00595540 void CDB::SetBirthday(unsigned int,int,int,int)
0x006D5BB4 bool CMiniGameAgitBuilderCmd::PledgeCheckLoosely(class CSocket*, class User*, wchar_t *)
0x008BAA98 void User::PrivateStoreBuyListReq(int)
0x0065F668 void DeleteFriendBatchHandler::BuildHtmlInternal()
0x004ADE8C bool BuilderCmd::_c_enter_world(class User *)
0x0063B484 bool CFortressDBEventHandler::ReplyLoadFortressSiegeRegistry(class CDBSocket *, const unsigned char *)
0x007E9930 void CPremiumService::RequestGetPremiumItems(void)
0x0048BC70 bool BuilderCmd_send_gmroom(class CSocket*, class User*, wchar_t *)
0x007AD484 bool CPet::ValidateOrgMAttack(void)
0x00757650 __cdecl MemoryObject::MemoryObject(const class MemoryObject &)
0x00680A30 bool CInstantZone::EnterZone(class User*, class FVector,enum InZoneEnterType)
0x0044DAA0 bool CAuctionNPC::CanMakeAuction(void)
0x00658E88 void ModifySendTempMailHtmlBuilder::DisassemblePacket()
0x00614348 void CEventMatch::UpdateUserStatus(class User*, int)
0x00426840 bool CAirShip::CanGetOn(class User*, bool)
0x00808F44 bool CSecureINIFileReader::_Load(const wchar_t *)
0x0089F660 void User::ReportCreateDate(void)
0x00954EA4 void CVehicle::Delete(void)
0x0091B8E0 bool RequestPVPMatchRecord(class CSocket*, const unsigned char *)
0x00910C34 bool RequestShowFortressSiegeInfo(class CSocket*, const unsigned char *)
0x005E6A10 CDBSocketOp::CDBSocketOp(int nType)
0x0088A6D8 void User::InitUser(void)
0x005E3140 bool ReplyModAllianceNamePacket(class CDBSocket*, const unsigned char *)
0x009118B0 bool RequestPrivateStoreWholeSetMsg(class CSocket*, const unsigned char *)
0x0066D094 void DeleteBlock::ParseParameter()
0x00670C48 void DeleteBlock::ExecuteInternal()
0x00663934 void DeleteBlockBatchHandler::DisassemblePacket()
0x00665AF4 void DeleteBlockBatchHandler::SendHtml()
0x005994C4 void CDB::SendSaveCharacterInfo(class User*, bool,bool) const
0x00928550 bool RequestMultiSellChoose(class CSocket*, const unsigned char *)
0x005A0550 bool ReplyLoadDominion(class CDBSocket*, const unsigned char *)
0x0063264C bool CFortressSiegeRegistry::IsRegisteredPledge(unsigned int)
0x006D8748 int __cdecl CUnreturnedPointKeeper::GetPoint(unsigned int)
0x005F12E4 void CDominionManager::SendDominionMessage(int,int,wchar_t*, bool)
0x00895DC8 void User::SetDailyQuest(int)
0x0048B8B8 bool BuilderCmd_viewpn(class CSocket*, class User*, wchar_t *)
0x005E9F90 void CDominionManager::SetSiegeTimeByBuilder(void)
0x0083D3A4 bool CSkillEffect_p_shield_defence_rate::Pump(class CCreature*, const class CSkillInfo*, int)
0x0046775C void CBlockUpset::RegisterManagerNpcId(int)
0x008854D4 int __cdecl CUndergroundColosseum::GetRegisteredPartiesPacket(char*, int)
0x00907474 void User::SendDominionChannelSet(bool)
0x00598F80 void CDB::RequestNewbieCheck(class User *)
0x00932120 bool AllianceInfoPacket(class CSocket*, const unsigned char *)
0x0042DCBC void CAirShipForRegular::AutoSail(void)
0x00839DB0 bool CSkillEffect_i_install_camp_ex::Instant(class CCreature *, class CObject *, const class CSkillInfo*, class CSkillAction2*, double)
0x00691380 void CShutDownMessage::OnReceive(int)
0x007353BC bool ShowVariationCancelWindow(class NpcSocket*, const unsigned char *)
0x007AEC1C bool CNormalRidingInfo::Eat(int)
0x0085E2EC void CastlePledgeSnapshot::AddPledgeInfo(class CPledge *)
0x005BBD44 bool BBSGetBoardList(class CDBSocket*, const unsigned char *)
0x005EA038 void CDominionManager::SetNextSiegeTime(int,bool)
0x006F7210 void BroadcastPartyJoin::Work(class User *)
0x008184B8 void CSiegeAgit::SendElapsedTimeMessage(long,long)
0x005B082C bool ReplySetAgitAuction(class CDBSocket*, const unsigned char *)
0x006ADF68 void CThreadLocalWorldMap210000,20000,8::CTL_Map2::Insert(short,short,char,int,class CObject *)
0x008936C8 bool User::IsTransformed(enum TransformType::Enum) const
0x00418CE4 void CTLPipeBasestruct CTL_WorldMapNode2,3000,8::CThreadPipe::Write(const struct CTL_WorldMapNode2 &)
0x006B7DA0 void CLog::Set(struct HWND__ *)
0x00479B6C bool BuilderCmd_tradeon(class CSocket*, class User*, wchar_t *)
0x00901BA4 void CUserBasicAction::Load(void)
0x006FD0E4 bool CPrivateStoreAction::OnStart(void)
0x008296A4 void CSkillEnchantDB::GetEnchantableSkills(const class std::xmapint,struct AcquiredSkillInfo,struct std::lessint,class std::xallocatorstruct std::pairint const ,struct AcquiredSkillInfo  &,class std::xvectorclass std::CDualKeyint,int,class std::xallocatorclass std::CDualKeyint,int  &)
0x004FEFB8 bool CCleft::_AddCleftPlayer(enum BlueRedTeam::Enum,class User &)
0x0063BEF0 void CFortress::StartTimer(void)
0x0057E01C void CDB::SendOnReconnectedPlayerlist(int)
0x005AA3B0 bool ReplyLoadNRMemoPacket(class CDBSocket*, const unsigned char *)
0x005F2AFC void CDominionManager::ProcessExtraEndJob(void)
0x0085E484 void SSQSystem::DispelSealEffect(void)
0x005625DC void CCreature::_ValidateSetItemOnEquipItem(class CItem*, enum SlotType,bool)
0x0088D570 bool User::SavePunishTime(void)
0x0083AF38 bool CSkillEffect_i_despawn::Instant(class CCreature *, class CObject *, const class CSkillInfo*, class CSkillAction2*, double)
0x004550C8 void CAuctionAgit::DelAuction(int)
0x004492EC bool CSharedCreatureData::SetNRMemo(int)
0x00899314 void User::IncreaseKarma(bool)
0x0088B0EC bool User::DecreaseSoulCount(int)
0x0047242C void CCreature::TurnOffSpiritshot(bool)
0x0096A878 void CWorld::__async_AsyncVehicleEnterWorld(struct CExecutionArgumentPad *)
0x0061EA34 void CFieldCycle::_SaveStatus(void)
0x009383EC bool CObjectMapclass CUserSocket,8191,28,class RWLock::Insert(int,class CUserSocket*, char*, int)
0x006D7710 bool CMiniGameAgitPlayerEntry::IsPlayer(unsigned int)
0x0082FFCC bool CSkillOperateCondition_remain_mp_per::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x005FBDDC void CDuel::Cancel(class User*, int)
0x0076ABE4 bool COlympiadUser::IsEnemyTo(class COlympiadUser *)
0x007DA8D8 void CPledge::Join(class User *)
0x00728374 bool CUniqNPCDB::DeleteUniqNPC(class CNPC *)
0x005841D8 void CDB::SendDeleteLoginAnnounce(int)
0x00833E4C bool CSkillEffect_i_resurrection::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x00718850 void CNoblessSystem::AnnounceAddOlympiadPoints(int)
0x0069E6D4 __cdecl CSetItem::~CSetItem(void)
0x006FBDB0 bool CMoveRelativeAction::OnStopMove(void)
0x006DA290 void CMiniGameAgitPlayerEntry::DeleteGameItem(const class std::xvectorint,class std::xallocatorint &)
0x00817188 void CShortCut::DeleteShortCut(enum ShortCutTypeEnum,int)
0x0052A044 bool CDuelUserInfo::IsDuelDead(class User *)
0x006F7864 void CMultiPartyVisitor::Work(unsigned int partySid)
0x006F6A94 void CMultiPartyCommandChannelRegistry::Register(unsigned int partySid, CMultiPartyCommandChannel* channel)
0x00957E98 void CVehicle::SeeDropItem(class CItem*, class CCreature *)
0x0041981C int __cdecl CAirShipConstRegular::GetNextIndex(int)
0x0057E138 bool CDB::InitCacheD(void)
0x004791B8 bool BuilderCmd_mrcreate(class CSocket*, class User*, wchar_t *)
0x007C40BC void CPledge::SetFortressByDbId(unsigned int)
0x00595198 void CDB::RequestSetAssociatedInZone(unsigned int,unsigned int)
0x0058EB3C void CDB::RequestChangeSubJobForNpc(class User*, int,int,int)
0x0069C7C0 void CItemExpirationManager::TimerExpired(int)
0x005F9DE0 bool CDoorDB::LoadDoor(bool)
0x006C09D4 void CUserSocket::SendSystemMessage_Q(unsigned int,__int64)
0x007AD9EC void CPet::OnLevelChanged(void)
0x007AFCE0 bool CPet::ValidateSyncLevel(void)
0x0059DC74 void CDB::RequestLogout(int,int,int)
0x006A6450 bool CItemEquipCondition_transmode_include::CheckPrivate(class CCreature*, class CItem *)
0x004EA7A8 void CCastle::PauseSiege(void)
0x0081143C bool CContainer::PopAirShip(class CAirShip *)
0x007C1110 static bool SubmitPetitionOk4(CPetitionSocket *socket, const unsigned char *packet)
0x008DCB04 int __cdecl SharedReuseDelaysOfItems::GetReuseRemainTime(int)
0x0095734C void CVehicle::KickTransformer(void)
0x00831B70 bool CSkillOperateCondition_op_not_territory::CanUse(class CCreature *, const class CSkillInfo*, class CObject *)
0x004AAC2C bool BuilderCmd::show_ownthing(class CSocket*, class User*, wchar_t *)
0x005024B0 void CCommCli::RequestPledgeMasterTransfer(const unsigned char *)
0x0076BB5C void COlympiadFuncHandler::ObserveOlympiad(void)
0x0083C864 bool CSkillEffect_p_fear::PumpStart(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpStartType) const
0x004067F4 void CAgit::StartSiege(void)
0x00590EEC void CDB::RequestSetPledgeAnnounce(class User*, unsigned int,int,wchar_t *)
0x008A22D8 bool User::OnStopPledgeWarPacket(const wchar_t *)
0x00705740 void CMoveToTargetRelativeAction::OnEnd(bool)
0x00959640 int __cdecl CVitalityPoint::GetVitalityLevel(int)
0x00479638 bool BuilderCmd_despawn_Pet(class CSocket*, class User*, wchar_t *)
0x005EC8B8 void CDominionManager::StandBySiege(void)
0x007E91D4 enum BrBuyProductResultType __cdecl GetBrBuyResultFromBilling(int)
0x0097E130 bool CXmasSantaEventMgr::Load(void)
0x008229E4 const class std::xvectorstruct SkillAcquireInfo*, class std::xallocatorstruct SkillAcquireInfo* &__cdecl CSkillAcquireDB::GetAcquirableEtcSkills(enum EtcSkillAcquireType) const
0x0057F310 void CDB::RequestCreateChar(wchar_t *, int,int,int,int,int,int,int,int,int,int,int,int,class CUserSocket *) const
0x0087EBCC const class std::xvectorclass CSkillInfo const*, class std::xallocatorclass CSkillInfo const* *__cdecl CTransform::AdditionalSkillList(int)
0x0076A70C void COlympiadUser::SetAlive(bool)
0x0058D814 void CDB::RequestSaveManorInfo(int,int,int,int,unsigned char,struct _SYSTEMTIME *)
0x0097B538 bool CWorldPlaneCollision::CheckCollision(const class FVector &,const class FVector &,double,class FVector &,int,bool)
0x0085B89C bool SSQSystem::AddMember(class User*, enum SSQPart::type,enum SSQSeal::type,enum SSQPosition::type,__int64,int)
0x00717F98 CInspectorDB::Load()
0x009116C0 bool ReplySeedPhase(class CSocket*, const unsigned char *)
0x00780A70 void CParty::BroadcastToAllParty(const char *, ...)
0x005A8978 bool ReplyPickCursedWeapon(class CDBSocket*, const unsigned char *)
0x007A77A0 bool CPCCafeCouponEventMgr::IsValidUser(const int,int &)
0x00911B00 bool UserPacketEx::CancelEnchantItem(class CSocket*, const unsigned char *)
0x0041A99C void CExecutionSerializerclass CShipController,32::AddExecutable(class MemoryObject*, void (__cdecl MemoryObject::* )(struct CExecutionArgumentPad *),class CExecutionArgument *, const wchar_t *)
0x005B22E0 bool ReplyTeamBattleAgitStatus(class CDBSocket*, const unsigned char *)
0x0088ECB8 bool User::IncSociality(void)
0x005BDB78 bool ReplyCrystallizeItem(class CDBSocket*, const unsigned char *)
0x006BD5B0 void DoorEventMap::OnNpcSocketClosed(void)
0x00905750 bool CUserBookmarkHandler::DBPacketHandler(class CDBSocket*, const unsigned char *)
0x007390A0 void CEnterWorldSerializer::ClearDataQueue(void)
0x0091DEF4 bool SkillListPacket(class CSocket*, const unsigned char *)
0x005BE74C bool BBSDelFavorite(class CDBSocket *, const unsigned char *)
0x0062B1E0 bool NCharSet::LoadGlyphInfo ( int start, int range, FILE* fp)
0x006341A4 void CFortress::BanPledgesInFortress(void)
0x0070B818 void CMoveToTargetAction::SetValidPendingAction(void)
0x008CCEAC bool User::IsRealEnemyTo(class CCreature *)
0x007E8C84 int __cdecl CPrecompiledHeaderDB::Search(const wchar_t *) const
0x0046850C bool CBlockUpset::RemoveBlockUpsetWaitingPlayer(int)
0x00657718 void CHolyThing::SendCountDownMessage(unsigned int,int)
0x0084148C bool CSkillEffect_p_block_party::PumpEnd(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpEndType) const
0x006B3C28 void CL2StatusWnd::OnRefresh()
0x00844A3C bool CSkillEffect_p_pk_protect::Pump(class CCreature *, const class CSkillInfo*, int)
0x005FDFB4 void CPartyDuel::OnPreEnd(void)
0x00677AD4 void CInstantZoneManager::FinishInstantZone(class CInstantZone *)
0x00911D50 bool UserPacketEx::ResetNicknameColor(class CSocket*, const unsigned char *)
0x009221A4 bool RequestVoteSociality(class CSocket*, const unsigned char *)
0x00596290 void CDB::RequestDeletePremiumItem(__int64)
0x004EC360 bool CCastle::CancelCastleAttackSiege(unsigned int)
0x00764604 bool COlympiadField::RestorePlayers(void)
0x0083A780 bool CSkillEffect_i_capture_flag::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x007E5824 void UpdatePledgeInfoWindow::SetAllianceInfo(void)
0x004B8C74 bool BuilderCmd_declare_clan_war2(class CSocket*, class User *, wchar_t *)
0x00944C2C bool HtmlCmdRevivePledge(class CUserSocket*, class User*, const wchar_t*, const wchar_t *)
0x00858BF4 unsigned int CSocket::GetIPAddressUINT(void)
0x005F7904 void CDoor::OnTimerHpChanged(bool)
0x008617CC class CStaticObject *__cdecl CStaticObject::GetObjectW(unsigned int)
0x0041EFA4 void CAirShipForRegular::SendDebugInfo(class User *)
0x0094E41C BOOL SetPrivateProfile(WCHAR* szSection, WCHAR* szKeyName, int nValue, WCHAR* szFile)
0x00586AF4 void CDB::RequestLoadDoor(class CDoor *)
0x00561698 void CCreature::SetItemSkillEnDisable(int,bool)
0x007AE434 bool CPet::CanDoAction_china(void)
0x0083E51C bool CSkillEffect_p_2h_sword_bonus::CheckPumpCondition(class CCreature *)
0x0063D0BC void CFortressNpcAIEventHandler::Receive(const unsigned char *)
0x008FABB4 void User::DespawnSummon(bool)
0x004439E0 bool AtomicResetFortressFacility::Do(void)
0x005AAFF8 bool ReplyLoadBirthInfo(class CDBSocket*, const unsigned char *)
0x004BA4A4 bool BuilderCmd_invite2(class CSocket*, class User*, wchar_t *)
0x008F9198 void User::_OnUnequipItem(class CItem *)
0x008B98B4 request trade 1
0x006C5F58 bool CManorPacketHandler::SetCrop(class CSocket*, const unsigned char *)
0x004394EC class CArea *__cdecl CAreaDB::FindArea(const wchar_t *)
0x006237A0 class CFishingLureInfo *__cdecl CFishingDB::FindLure(int) const
0x0094BE00 bool HtmlCmdCreateAcademy(class CUserSocket *, class User*, const wchar_t*, const wchar_t *)
0x005B8AE4 bool InitBoardPacket(class CDBSocket*, const unsigned char *)
0x0094C098 bool HtmlCmdRenameSubPledge(class CUserSocket*, class User*, const wchar_t*, const wchar_t *)
0x0043D4E8 NRMemoControl::Disassemble(const unsigned char *packet)
0x00887894 void CUndergroundColosseum::EndMatch(unsigned int,unsigned int,int)
0x00509E0C void CCommSocket::OnRead(void)
0x004EBB94 void CCastle::BroadcastSetSiegeTime(void)
0x0094F1E4 xwstring IntToXStr(int i)
0x005B25E0 bool ReplyUnregisterTeamBattleAgitMember(class CDBSocket*, const unsigned char *)
0x005569D8 void CCreature::GatherNeighborStaticObject(class FVector,class std::xvectorclass CSafePointer2class CStaticObject,class std::xallocatorclass CSafePointer2class CStaticObject  &,class std::xvectordouble,class std::xallocatordouble &,int,int,int,enum SkillAffectObjectTypeEnum,class CCreature *)
0x0062D2C4 class CFortressSiege *__cdecl CFortress::GetSiege(void)
0x0062D37C class CFortressSiegeRegistry *__cdecl CFortress::GetSiegeRegistry(void)
0x0071A8E4 void CNPC::Set(enum ObjectFieldType,wchar_t *)
0x0076F2C4 bool COlympiadTeam::IsValidCondition(enum GameValidCondition,int &)
0x00955B20 void CVehicle::TimerExpired(int)
0x00520348 void CCCRecordBoard::AddNewRecordData(class User *)
0x0082EBCC bool CSkillOperateCondition_can_transform::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x004CD974 bool BuilderCmd_play_gm_list(class CSocket*, class User*, wchar_t *)
0x007FD740 void CResidence::LoadGuard(void)
0x00657C44 void CHolyThing::RemovePossessingMaster(class User *)
0x00524974 int __cdecl CSharedFactoryclass CCreature,class CSharedCreatureData,class CSharedCreatureConstant,&class CSharedDefine const SharedDefine_Creature::Remove(class CCreature *)
0x00860A20 int __cdecl CSharedFactoryclass CStaticObject,class CSharedStaticObjectData,class CSharedStaticObjectConstant,&class CSharedDefine const SharedDefine_StaticObject::RemoveByIndex(int)
0x0075A258 int __cdecl CSharedFactoryclass CGeneralObject,class CSharedGeneralObjectData,class CSharedGeneralObjectConstant,&class CSharedDefine const SharedDefine_GeneralObject::Remove(class CGeneralObject *)
0x00765BC4 bool COlympiadField::AsyncAddObserver(int)
0x00531BD0 void CTLPipeBasestruct CTL_WorldMapNode2,112500,8::CThreadPipe::Read(class CTLPipeBasestruct CTL_WorldMapNode2,112500,8::CReadCallback *)
0x00582F1C void CDB::RequestCrystallizePetItem(class CItem*, __int64,int,__int64,class User*, class CPet *)
0x0049328C bool BuilderCmd_set_controltower_status(class CSocket*, class User*, wchar_t *)
0x0090143C bool CBasicActionHandler_AIRSHIP_ACTION::Handle(class User*, int,bool,bool,int)
0x0074ABFC bool CreateOnePrivateNearUser(class NpcSocket*, const unsigned char *)
0x00596818 void CDB::RequestSaveBotReport(class User *)
0x00482C60 bool BuilderCmd_TrapDefuse(class CSocket*, class User*, wchar_t *)
0x00719030 bool CDuelUserInfo::IsDuelEffectOn(class User *)
0x0040D1C4 void CAgitHTML::AgitBidReRequest(int,int)
0x0048426C bool BuilderCmd_ResetUiSetting(class CSocket*, class User*, wchar_t *)
0x0046341C int __cdecl CBlockUpsetManager::IsBlockUpsetCombatPlayer(int)
0x006F7D3C void GatherChannelInfo::Work(unsigned int partySid)
0x0070CFA4 bool CMoveAction::OnStart(void)
0x0070F99C void CSkillAction2::CalcSkillTiming(class CCreature &,class CSkillInfo &,int &,int &,int &)
0x00883708 void CUndergroundColosseum::EndMatchByTimeOut(void)
0x00673CC0 void CHtmlGenerator::ReadTemplet()
0x006751FC void CHtmlGeneratorHelper::AppendValue(std::xwstring &name, std::xwstring &value)
0x00675A68 void CHtmlGenerator::AddValue(WCHAR *valueName, CLocalHtmlGenerator &localHtmlBuilder)
0x00444AAC bool AtomicChangePetName::Do(void)
0x007CF84C void CPledge::UpdateSubPledgeMasterByNpc(class CNPC*, class User*, int,const wchar_t *)
0x00675FD0 void CHtmlGenerator::AddValue(WCHAR *valueName, WCHAR *value)
0x006753D4 void CHtmlGenerator::ParseTemplet()
0x005EA584 void CDominion::ChangeDominionState(int)
0x00546F18 void CCreature::CancelCastingSkill(int)
0x00833BC4 bool CSkillEffect_i_mp::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x0085A22C void SSQSystem::ValidateMainEventPortion(void)
0x0060DA48 int __cdecl EtcManiWithdrawItemAuctionBid::Assemble(class CPacketHelperEx16384 &)
0x0060D970 int __cdecl EtcManiCreateItemAuctionBid::Assemble(class CPacketHelperEx16384 &)
0x008EDFBC bool User::HavePledgePower(enum PledgePowerEnum)
0x0060DB10 int __cdecl EtcManiGiveItemByCastleSiegeCount::Assemble(class CPacketHelperEx16384 &)
0x00591A7C void CDB::RequestFishingEventRegister(class User*, int)
0x006F9D0C bool CMultiSellInfo::CheckUsingPledgePoint(void)
0x0053B9B4 double CCreature::EquipedArmorsPDefend(void) const
0x0053B1A4 double CCreature::CalcBasicCriticalRate(class CObject *) const
0x0053A30C double CCreature::WeaponHitCorrectionByCrystal(void)
0x0053EBE0 double CCreature::GetSkillAttributeBonus(class CCreature*, const class CSkillInfo*, bool)
0x0053E870 double CCreature::GetWeaponTraitBonus(enum AttackType)
0x0053DE5C double CCreature::GetAttributeBonus(class CObject*, const class CSkillInfo *)
0x0053C234 double CCreature::EquipedArmorsHpBonus(void) const
0x0041E914 const struct AirShipPathNode &__cdecl CAirShipConstRegular::GetNode(int)
0x00719C64 bool CNPC::AddItemToInventory2(class CItem *)
0x00560C98 double CCreature::AttackedBy(class CCreature*, double,bool,int,enum AttackType)
0x0053FD18 double CCreature::GetAttackTraitBonus(class CCreature &)
0x00581180 void CDB::RequestShortCutInfo(class User *) const
0x0077C204 void CTLPipeBaseunsigned int,10000,8::CThreadPipe::Write(const unsigned int &)
0x00638D3C void CFortress::HandleSiegeResult(struct FortressSiegeResult)
0x00905100 bool CUserBookmark::DeleteSlot(class User*, int)
0x0082F0E4 bool CSkillOperateCondition_cannot_use_in_transform::CanUse(class CCreature*, const class CSkillInfo *, class CObject *)
0x004A1C70 bool BuilderCmd_ShowUserMapDensity(class CSocket*, class User*, wchar_t *)
0x005A8B10 bool ReplyLoadSharedReuseDelaysOfItems(class CDBSocket*, const unsigned char *)
0x007AD634 bool CPet::ValidateOrgHPMP(void)
0x007D22B0 void CPledge::SetFortressUnderDefenceSiege(class CFortress *)
0x0059CE3C void CDB::RequestResetSiegeAgitPledge(class CSiegeAgit *)
0x00625240 bool CFishingController::CheckFishingCondition(void)
0x00966FA4 void CWorld::__async_AsyncStaticObjectAppear(struct CExecutionArgumentPad *)
0x00628B58 bool CFishingEventMgr::RequestRegister(class User*, int)
0x0086A3F0 void CTeamBattleAgit::StartSiege(void)
0x007CDF60 void CPledge::SetSubPledgeMasterName(enum PledgeType,unsigned int)
0x00843E9C bool CSkillEffect_i_open_dwarf_recipebook::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x005FE8BC void CDuelManager::DuelPlayerLeaveWorld(class User *)
0x00482B48 bool BuilderCmd_TrapActivate(class CSocket*, class User*, wchar_t *)
0x00453E8C bool CAuctionAgit::CanAttend(int,class User *)
0x00938DF4 bool JoinPledgePacket(class CSocket *, const unsigned char *)
0x0056E138 void CCreatureController::ActionBroadcastJump(const class FVector &,const class FVector &)
0x004EEC9C void CCastle::BanNonDefendingPlayers(enum CCastle::BAN_TYPE)
0x00473510 class CItem *__cdecl CInventory::GetBoltByCrystal(enum CrystalType)
0x007EEFBC void CPremiumService::SetDeletedInIBServer(int)
0x007AE4EC void CPet::OnNpcSocketClose(void)
0x00514074 void CConfig::Load()
0x0061E0AC void CFieldCycleSystem::LoadFieldCycleInfoFromDB(void)
0x00596698 void CDB::SetRimPoint(int,int,int,int)
0x00762054 class CItem *__cdecl CObjectDB::CreateItem(int) const
0x0081C288 bool CSkillInfo::IsCursedRelation(class CCreature &,class CObject &) const
0x006BCD9C bool TimeAttackBoard::AddRecord(int nRoomNo, SSQPart::type nPartType, int nPartySID, __L2INT64 nPoint, int nRecordTime, int nElapsedTime)
0x0060A430 void DxAddTimeAttackRecord::DoServerJob(void)
0x0091A3C4 bool UserPacketEx::RequestChangeInventorySlot(class CSocket*, const unsigned char *)
0x00916978 bool UserPacketEx::TryToMakeVariationPacket(class CSocket*, const unsigned char *)
0x0057BC58 void CCursedWeaponMgr::ShowCursedWeaponStatus(class User*, int)
0x0066BBF0 void SendMail::ParseParameter()
0x00686B54 class CItem *__cdecl CInventory::GetByDBID(int)
0x0043055C bool CShipController::IsChangingAltitude(void)
0x00908AB8 void User::BroadcastSocialAction(int,int)
0x005DF8A8 bool CObjectMapclass CAlliance,1,5,class RWLock::DeleteObject(int,char*, int)
0x00894610 void User::OnLevelChanged(void)
0x0072D79C ItemManip::Disassemble(const unsigned char *packet)
0x00566F38 bool CCreature::DispelByCategory(enum DebuffType,class CCreature*, int,class CSkillInfo*, int)
0x0090FB9C bool RequestExistingCursedWeaponLocation(class CSocket*, const unsigned char *)
0x007C70B4 bool CPledge::HasAcademyMaster(unsigned int)
0x0054AE60 bool CCreature::SetPassiveSkillPumpEnd(int,int,enum SkillPumpEndType)
0x0062F120 bool CFortress::DeductParentCastlePledgeNameValue(void)
0x005FBAEC void CDuel::StartTimer(void)
0x00841CA4 bool CSkillEffect_p_betray::PumpStart(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpStartType) const
0x007815B0 void CParty::StartScenePlay(int)
0x0070F624 bool CSkillAction2::IsTargetInSameInZone(void)
0x0043E678 AtomicDropItem::Disassemble(const unsigned char *packet)
0x008A185C void User::AddBossRelatedBonus(class CCreature &,int)
0x004AEEB8 bool BuilderCmd::ignore_weapon_random(class CSocket*, class User*, wchar_t *)
0x0084E7A8 bool CSkillOperateCondition_can_summon_siege_golem::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x00972058 bool CWorld::EnterWorld(class CAirShip*, class FVector)
0x007A5F38 double CPCParamDB::GetHPRegenMoveModeBonus(enum MoveModeEnum,int)
0x006A9C88 void CKillPVPPointChecker::LoadGiveCount(class User *)
0x0052DD78 double CCreature::GetWeaponRandomDamage(void) const
0x0097AB4C double CPlaneCollision::CheckCollision(const class FVector &,const class FVector &,double,bool)
0x007AF548 void CSummon::SendSummonDelete(void)
0x0053E9E8 double CCreature::GetGeneralTraitBonus(class CCreature &,enum TraitTypeEnum,bool)
0x00569908 double CCreature::GotDamageBy(class CCreature*, double,bool,enum DamageTypeEnum,bool)
0x0071CCE4 bool CNPC::EquipItem(class CItem*, enum SlotType)
0x00845AF0 double L2SkillFunc::GetMagicCriticalProb(class CCreature &,class CObject &,double)
0x00581FCC void CDB::SetDeletedInIBServer(int,int,char *) const
0x0076C310 void COlympiadTeam::UnregisterAll(bool)
0x0067F6BC void CInstantZone::ExpelAllUser(bool)
0x00824754 _safe
0x00610E14 void CEventMatchRuleSet::AllowAll(void)
0x00886AF4 int __cdecl CUndergroundColosseum::RegisterParty(unsigned int)
0x00757C90 void CObject::Set(enum ObjectFieldType,int)
0x0047DBB0 bool BuilderCmd_del_radar(class CSocket*, class User *, wchar_t *)
0x0083D720 bool CSkillEffect_p_breath::Pump(class CCreature*, const class CSkillInfo*, int)
0x008A027C bool User::CanNormalAttack(void) const
0x009534C8 bool CVehicleDB::ReleaseStation(int)
0x0084C6F8 bool CSkillEffect_i_m_attack_over_hit::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2 *, double)
0x00720F24 bool CNPC::TeleportWithAirShip(class CAirShip*, class FVector,unsigned int)
0x0094C340 bool HtmlCmdCreateSubPledge(class CUserSocket*, class User*, const wchar_t*, const wchar_t *)
0x004918BC bool BuilderCmd_destruct_ctrl_tower(class CSocket*, class User*, wchar_t *)
0x0082E760 bool CSkillEffectAddBonusByAdditionalArmorType::Pump(class CCreature *, const class CSkillInfo*, int)
0x008D6D40 bool User::CanEquipDurationItem(void)
0x00803D14 void CResidence::BanNonDominionUsers(class CDominionSiegeEntry *)
0x00872800 bool CTrade::SameDBItemExistInTradeList(class CItem*, unsigned int)
0x007CEB08 bool CPledge::HasSubPledgeType(enum PledgeType)
0x006C7FAC void CManorFuncHandler::ShowProcureCropList(void)
0x008862E4 void CUndergroundColosseum::SendSimpleRecordToAllUser(void)
0x009084FC void User::GatherRelationChanged(void)
0x005ED120 void CDominion::AddAllResidenceSkill(void)
0x0057362C bool CCubicHandler::CheckCubicSkillDelay(class CCreature &,class CCubic &,class CSkillInfo &,int,struct CubicActivationInfo &)
0x00550410 bool CCreature::HaveSkill(int,int)
0x00825998 __int64 SkillEnchantNormal::CalculateExp(const struct SkillEnchantInfo*, int)
0x006BABA0 bool CLogCli::Connect()
0x0097E758 bool CYearCatchEventMgr::LoadINIFile(void)
0x00425024 bool CAirShipManager::_OnDespawnFreeAirShip(unsigned int)
0x0047A57C bool BuilderCmd_pingon(class CSocket*, class User*, wchar_t *)
0x0085AA10 bool SSQSystem::ChangeSealOwner(enum SSQSeal::type,enum SSQPart::type)
0x006E0570 void CMonRaceData::SetGuts(class std::xvector__int64,class std::xallocator__int64 *)
0x0058F8B8 void CDB::RequestReadMail(class User*, int,class CMailListParameter &)
0x007AD1DC bool CPet::GetItem(class CItem *)
0x0059841C void CJobFinishSignal::SetDismissReservedLoaded(void)
0x005F79DC void CDoor::CalcCenterPos(void)
0x005B1DD0 bool ReplyNewTeamBattleAgitPledge(class CDBSocket*, const unsigned char *)
0x006EE86C void CMultiPartyCommandChannel::Accept(class IMultiPartyVisitor &)
0x008376B8 bool CSkillEffect_i_fly_self::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x0083C258 bool CSkillEffect_p_create_item::Pump(class CCreature*, const class CSkillInfo*, int)
0x0043269C enum SHIP_ACTION_RESULT CShipMoveAction::OnStopMove(bool)
0x00671130 void SwitchPledgeAnnounceShowFlag::ExecuteInternal()
0x006C4F34 void CManorDB::TransferAllManorData(void)
0x006C0FE4 bool CManor::SellSeed(class User*, int,const unsigned char *)
0x005F02B4 void CDominionSiegeEntry::SendDominionChannelSet(bool)
0x008917C8 void User::SetCloseLater(void)
0x006062CC void DxChangeCycleMode::DoServerJob(void)
0x00964A84 int __cdecl CObjectMapclass CNPC,8191,5,class RWLock::GetSize(void)
0x0062DA08 void CFortress::AddOwnerRewardTakenLog(class User*, int,int,__int64)
0x0080AAD4 void CSerializedLostTargetMessage::OnHandle(class CCreature *)
0x0091CFA0 bool DismissPartyPacket(class CSocket*, const unsigned char *)
0x006051AC void CRenewResidenceDeco::DoServerJob(void)
0x0089ADD8 void User::SetPrivateStoreWholeMsg(const unsigned char *)
0x005E8B7C void CDBSocketOp::GmReg(const unsigned char *packet)
0x005E867C void CDBSocketOp::ModWeekPlay(const unsigned char *packet)
0x005E8134 void CDBSocketOp::SetSkillAll(const unsigned char *packet)
0x005E7CFC void CDBSocketOp::SendHome(const unsigned char *packet)
0x005E730C void CDBSocketOp::PledgeLev(const unsigned char *packet)
0x006D5228 unsigned long CMiniGameAgitStatus::GetGameStartRemainSec(void)
0x007FC534 void CResidence::ValidateDeco(void)
0x006B605C void CBakEvent::Init(void)
0x00605364 void CDxResetFortressFacility::DoServerJob(void)
0x0088CE28 void User::SendPunishmentHistoryToDB(int)
0x005D0AA0 void CDBSocket::OnRead(void)
0x004D2F54 bool BuilderCmd_partycall(class CSocket*, class User *, wchar_t *)
0x006037B8 void CDuelPlayerInfo::SetOrgInfectedSkills(class std::xvectorstruct CCreature::InfectedSkillType,class std::xallocatorstruct CCreature::InfectedSkillType &,class CYieldLock &)
0x0061E6F8 void CFieldCycle::_LogOnPointChanged(int,int,class CCreature *)
0x00580198 void CDB::RequestCreateAcademyByNpc(int,class User*, class CPledge*, const wchar_t *)
0x006B4A48 void CL2Time::CheckVoteDayChanged(void)
0x006DF370 bool CMonRaceDB::SortRunner(void)
0x006A4FCC bool CItemEquipCondition_social_class::CheckPrivate(class CCreature*, class CItem *)
0x0083FD48 bool CSkillEffect_p_reflect_skill::Pump(class CCreature*, const class CSkillInfo*, int)
0x005EA29C void CDominion::InitDominion(void)
0x00587324 void CDB::SaveSkillUse(int,int,int,int,int,char*, int,char *) const
0x008F0E04 unsigned long User::GetPledgePowerByGrade(void)
0x00747184 bool NpcShowSellPagePacket(class NpcSocket*, const unsigned char *)
0x005E92AC void CDeferredJob::DoDeferredJob(class User *, const struct DeferredJobInfo &)
0x007807D0 void CParty::OpenAllWindowPacket(void)
0x006DA948 void CMiniGameAgitSelectedPledgeEntry::GetList(class std::xvectorunsigned int,class std::xallocatorunsigned int &)
0x00597850 void CDB::RequestRemoveAirShip(unsigned int,int)
0x0088CB3C bool User::QueryRealEnemy(int)
0x0063EB28 void CFortress::HandleReplyLoadFortressSiege(void)
0x0052D4F0 bool CCreature::ValidateOrgMAttack(void)
0x0055C264 void CCreature::_OnAbnormalStatusDeleted(const class CSkillInfo &,class CCreature*, enum SkillPumpEndType,int)
0x00708710 bool CMoveAction::SetMovingRelativeImpl(void)
0x008B50AC bool TalkChannelCache::SubChannel::IsValidChannel(unsigned int,unsigned int,unsigned int,int)
0x007A5D34 void CPCParamDB::SetRegenMoveModeMPBonus(enum MoveModeEnum,double,double,double,double,double,double)
0x005A9568 bool ReplyChangeMergedName(class CDBSocket*, const unsigned char *)
0x00757E20 void CObject::Set(enum ObjectFieldType,double)
0x007DEBC0 void CPledgeMemberList::Updatestruct CPledgeMemberList::Offline::OfflineJob(class User *, struct CPledgeMemberList::Offline::OfflineJob &)
0x00524D44 void CSmartIdManagerclass CCreature,100000,8::DeleteObject(unsigned int)
0x0088E240 bool User::HasCastle(void)
0x0047F1F0 bool BuilderCmd_DispelAllByGM(class CSocket *, class User*, wchar_t *)
0x0062495C void CFishingDB::Add(class CFishingDistributionInfo *)
0x0052D228 bool CCreature::ValidateCriticalProb(void)
0x005C2640 bool ReplyPetUseItem(class CDBSocket*, const unsigned char *)
0x00585ED0 void CDB::RequestQueryCastleSiegeForUnregister(class User*, class CCastle *)
0x00596018 void CDB::RequestLoadBirthInfo(class User *)
0x005EF5F4 void CDominion::AddPos(class FVector)
0x00612520 void CEventMatchRuleSet::Deny(int)
0x00634E40 bool CFortress::IsRegisteredForSiege(class CPledge *)
0x008369F8 bool CSkillEffect_i_get_agro::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x0076F01C void COlympiadHtml::SendMatchList(class User *)
0x0093CE54 class CSocket *__cdecl CUserSocket::Allocate(unsigned __int64)
0x008D33C0 __cdecl User::~User(void)
0x009491B4 void LoadHtmlCmdHandler(void)
0x00780BE8 void CParty::BroadcastToAllPartyV(const char*, char *)
0x005C7CB0 bool ReplyRecipeShopMakeItem(class CDBSocket*, const unsigned char *)
0x006DFBC4 bool CMonRaceDB::RunTrack(void)
0x004AF97C bool BuilderCmd::go_r_terri(class CSocket*, class User*, wchar_t *)
0x00889F54 bool SocialClassNS::IsMercenaryOrNobless(class User *)
0x006FAC78 void CNothingAction::Set(class CSmartID)
0x007DEE50 void CPledgeMemberList::Offline(class User *)
0x005B0CA8 bool ReplyAgitAutoSell(class CDBSocket*, const unsigned char *)
0x006B442C void CL2Time::TaxAndIncomeUpdateCheck(void)
0x0083D184 bool CSkillEffect_p_avoid_by_move_mode::Pump(class CCreature *, const class CSkillInfo*, int)
0x006A4BAC bool CItemEquipCondition_clan_level::CheckPrivate(class CCreature*, class CItem *)
0x007D8084 void CPledge::SetAllDeclaredWarToPledges(void)
0x006E3D70 bool CMonRaceDB::GetRunnerList(class std::xvectorclass CMonRaceData*, class std::xallocatorclass CMonRaceData* &,bool)
0x0093344C bool CUserSocket::VersionPacket(class CSocket*, const unsigned char *)
0x0084DD7C bool CSkillEffect_p_attack_trait::Pump(class CCreature*, const class CSkillInfo*, int)
0x0088DC08 bool User::SetSnoopClient(int)
0x0054F798 void CCreature::SafeAccumulateContribute(class CCreature*, double)
0x0057EC7C bool CDB::AuthSendServerVersion(void)
0x00921FB4 bool RequestRecipeShopCancel(class CSocket*, const unsigned char *)
0x007D9F0C bool CPledge::_AcquireSubPledgeSkillAndNotify(enum PledgeType,unsigned int,int,bool)
0x005991A0 void CDB::RequestSaveHeroType(class User*, int)
0x00839350 bool CSkillEffect_i_dispel_by_category::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x00694370 bool CItem::CanGetByPet(void)
0x0067AC64 void CInstantZoneCluster::AddDensity(int,int)
0x005C6CB4 bool ReplyAgitBidCancel(class CDBSocket*, const unsigned char *)
0x0059F7EC bool ReplyLoadTransferredPledgeMaster(class CDBSocket*, const unsigned char *)
0x0044892C bool CSharedCreatureData::SetNRFlagJournal(int,int)
0x0085614C bool CSkillEffect_p_trigger_skill_by_attack::PumpEnd(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpEndType) const
0x0073E068 bool NpcHennaEquipListOpenForUnequip(class NpcSocket *, const unsigned char *)
0x0082CB70 int __cdecl CSharedCreatureData::GetAbnormalLevel(enum AbnormalStatusSlotType)
0x00938944 bool CObjectMapclass CUserSocket,8191,30,class RWLock::DeleteObject(int,char*, int)
0x0054456C void CCreature::BroadcastCombatModeFinish(void)
0x00581800 void CDB::RequestLoadSubPledge(unsigned int,unsigned long)
0x0057EBB4 bool CDB::AuthUserNum(int,int)
0x0042017C void CAirShipConstRegular::SetReturnInfo(enum AirShipPathNodeType)
0x006E2994 void CMonRaceDB::InitData(void)
0x0091B0F8 bool AskJoinPartyRoomPacket(class CSocket*, const unsigned char *)
0x0082F7A4 bool CSkillOperateCondition_op_companion::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x00623AD0 bool CFishingController::SendFishingStartPacket(void)
0x0080C860 class CSetting::RestartPointGroup *__cdecl CSetting::FindRestartPointGroupByName(const wchar_t *)
0x00951470 class Option *__cdecl Variation::GetOptionImpl(class std::xvectorstruct Variation::OptionGroupElement,class std::xallocatorstruct Variation::OptionGroupElement &)
0x00597308 void CDB::RequestSaveDominionSiege(int,int,int,int)
0x006E50B0 void CMonRaceHTML::MonRaceView11(void)
0x007E47C8 void AffectedByWar::ServeInternal(class User *)
0x006B4EF4 __cdecl CEventTimer::~CEventTimer(void)
0x005C6AC8 bool ReplyDelIntervalAnnounce(class CDBSocket*, const unsigned char *)
0x006B6838 __cdecl CEventTimerYear1::~CEventTimerYear1(void)
0x006B51F4 __cdecl CEventL2day::~CEventL2day(void)
0x008B2C1C void User::SetPrivateStoreBuyList(const unsigned char *)
0x004C55F0 bool BuilderCmd_viewpower(class CSocket*, class User *, wchar_t *)
0x0073E9C8 bool NpcSetNextSeedInfo(class NpcSocket*, const unsigned char *)
0x0050C5B8 unsigned char* CCommunity::WriteFormFrame(int nSendType, int nBoardId, int nBoardType, int nBid, WCHAR* sBoardName, const unsigned char *packet)
0x004FBE40 void CCleft::TowerDestroyed(class User &,int,int)
0x008EC32C void User::OnDieDropItem(bool,double)
0x0047FADC bool BuilderCmd_dwarf_recipe(class CSocket*, class User*, wchar_t *)
0x005FD694 void CPartyDuelPlayerOperation::Operate(class User*, class CDuelPlayerInfo *)
0x007F6A64 void CPVPMatch::AddStartPos(enum BlueRedTeam::Enum,const class std::xvectorclass FVector,class std::xallocatorclass FVector &)
0x006428C4 void CGameEventMgr::ShowNPCSetting(class User *)
0x00927304 bool PetitionPacket(class CSocket*, const unsigned char *)
0x005881BC void CDB::EvolvePet(class User*, class CEtcItem*, int,int,__int64,int,int,double,double,int,__int64,__int64,__int64,__int64)
0x0047E8B0 bool BuilderCmd_set_newchr(class CSocket*, class User*, wchar_t *)
0x008802E4 void CPCTrap::ReportOrt(char *caller, int line, int nWorkType)
0x006D60EC void CMiniGameAgitSelectedPledgeEntry::Broadcast(const char*, char *)
0x00891B20 void User::GetItemByPCCafePoint(int,int,int,__int64)
0x00654A90 void CHeroSystem::Init(void)
0x0059434C void CDB::RequestSaveFortressSiegeUnregisterPledge(int,int)
0x0068BA20 void CInventory::InitSlotInfo(void)
0x007C3760 bool CPledge::CanJoinAlliance(void) const
0x008148C8 int __cdecl SharedTimeAttackInfo::GetRewardFlag(int) const
0x006135F8 void CEventMatch::SkillRuleParsing(wchar_t *)
0x006C5584 bool CManorPacketHandler::RequestManorList(class CSocket*, const unsigned char *)
0x006FFE98 void CAttackAction::OnHitTimeNotDual(void)
0x00881EB8 bool CWorldTrap::CheckTrap(class CCreature &,bool)
0x005D84D8 bool UpdateCharPledgePacket(class CDBSocket *, const unsigned char *)
0x005FCFE0 bool CDuelManager::CheckDuelStartCondition(class User*, class User*, enum DuelType)
0x006BFE30 void CManor::ClearCropData(void)
0x007D23F8 void CPledge::SetFortressUnderOffenceSiege(class CFortress *)
0x00587004 void CDB::RequestGetContributionRelatedPledge(int)
0x005BC2E0 bool BBSGetArticleList(class CDBSocket*, const unsigned char *)
0x00814284 void CSharedRWLock::ReadLock(bool bConcession)
0x00842814 bool CSkillEffect_p_exp_modify::PumpStart(class CCreature &,class CCreature*, const class CSkillInfo *, enum SkillPumpStartType) const
0x007E4B54 void CSendPledgeSkillList::ServeInternal(class User *)
0x00811BC4 bool CContainerDB::ContainerChanged(class CObject*, class CContainer *, class CContainer*, bool)
0x00768D60 void COlympiadDefaultSetting::ResetSkillReuseDelay(class User *)
0x0042FA34 void CAirShipForFree::OnTimerExpired(void)
0x00839E98 bool CSkillEffect_i_npc_kill::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x0091A5EC bool EnchantSkillInfo(class CSocket *, const unsigned char *)
0x0094D078 bool HtmlCmdShowRadar(class CUserSocket*, class User *, const wchar_t *, const wchar_t *)
0x0073C614 bool EnableTutorialEvent(class NpcSocket*, const unsigned char *)
0x0070A494 bool CMoveAction::SetMoving(void)
0x006140E0 void CEventMatch::Broadcast2Observer(const char*, ...)
0x00693170 void CItem::SetRecipeId(int)
0x004C2AF4 bool BuilderCmd_setquest_nr(class CSocket*, class User*, wchar_t *)
0x007331B4 bool NpcSystemMessage(class NpcSocket*, const unsigned char *)
0x00888D04 void CUndergroundColosseum::GivePVPPointToWinnerParty(unsigned int)
0x005920BC void CDB::RequestMoveToNextBossRecordRound(void)
0x00914288 bool ReplyOustFromPartyRoom(class CSocket*, const unsigned char *)
0x0087C510 bool CTransformForFlying::_SetCommonData(class User *)
0x00883180 class CWorldTrap *__cdecl CWorldTrapDB::GetWorldTrap(const int,const int)
0x00619E38 int __cdecl CEventMatchBuilderCommandParser::Parse_fence(class CSocket*, class User*, wchar_t *)
0x0073C254 bool ShowQuestionMark(class NpcSocket*, const unsigned char *)
0x0063AF4C void CFortressSiege::BarrackCaptured(unsigned int)
0x004BCE18 bool BuilderCmd::move_ownthing(class CSocket*, class User*, wchar_t *)
0x0064B050 bool CGeoZone::IsInNoCallPCArea(const class FVector &)
0x00810028 bool CSharedFactoryclass CItem,class CSharedItemData,class CSharedItemConstant,&class CSharedDefine const SharedDefine_Item::Pop(int,int &)
0x004835BC bool BuilderCmd_RemoveCachingHTML(class CSocket*, class User *, wchar_t *)
0x0066A184 void CHTMLCacheManager::Load()
0x00633168 void CFortress::ChangeOwnership(class CPledge*, bool)
0x00499B8C bool BuilderCmd_lotto_set_drawing_time(class CSocket *, class User*, wchar_t *)
0x008492B4 bool CSkillEffect_i_p_attack_by_dist::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x0071ECBC bool CNPC::UnequipItem(enum SlotType)
0x0062C428 void CFortressNpcAIEventHandler::Send(int,int,int,int,int,int)
0x00455FD8 void CAuthSocket::Send(const char*, ...)
0x008610BC void CTLPipeBasestruct CTL_WorldMapNode2,20000,8::Write(int,const struct CTL_WorldMapNode2 &)
0x00892C1C bool User::IsDuelEnemy(class CCreature *)
0x0059128C void CDB::RequestSendMaxHomeCount(int)
0x0076CFD4 void COlympiadTeam::RecvSummonInfo(class CSummon *)
0x0083F26C bool CSkillEffect_cub_physical_attack::Pump(class CCreature*, const class CSkillInfo *, int)
0x006F9E14 void CMultiSellList::Add(class CMultiSellInfo *)
0x0052EA68 double CCreature::GetResurrectExpRatio(double,double)
0x00530DD4 double CCreature::GetBonusAndTurnNextSoulShotState(void)
0x00531740 double CCreature::GetWeightLimit(double)
0x00531808 double CCreature::GetWeightPenalty(double)
0x005331A8 double CCreature::HeightDamage(double)
0x00533310 double CCreature::GotDamageByEnvironment(double,bool,enum DamageTypeEnum,bool)
0x00536448 double CCreature::EquipedArmorAvoidByCrystal(void) const
0x00710F04 bool CSkillAction2::OnLostTarget(int,bool)
0x00536C48 double CCreature::GetNormalSpeed(void)
0x0053A234 double CCreature::WeaponHitCorrection(void)
0x0068FBB4 void CTLPipeBaseunsigned int,10000,8::Read(class CTLPipeBaseunsigned int,10000,8::CReadCallback *)
0x0083DCE4 bool CSkillEffect_p_set_cloak_slot::PumpEnd(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpEndType) const
0x00901ABC bool CUserBasicAction::IsValid(int)
0x0048BA64 bool BuilderCmd_gotopn(class CSocket*, class User*, wchar_t *)
0x00757590 __cdecl MemoryObject::MemoryObject(void)
0x00482A20 bool BuilderCmd_TrapDetecting(class CSocket *, class User*, wchar_t *)
0x00433CA4 void CAlliance::Save(unsigned int)
0x00654FF4 bool CHeroSystem::SendHeroMatchResult(class CUserSocket*, int,int)
0x00880B1C bool CPCTrap::Die(class CCreature *)
0x00768E48 int __cdecl COlympiadDefaultSetting::GetTransferingPoint(enum GameRuleType,int,int)
0x0048B3FC bool BuilderCmd_worlddebug(class CSocket*, class User*, wchar_t *)
0x008DB5B0 void User::SendPackageSendableList(int)
0x0072CE44 int __cdecl NpcServer::RemoveEx(unsigned __int64)
0x0064B248 bool CGeoZone::IsInTransformableArea(const class FVector &)
0x008D69C8 void User::SendSendableCharacterList(void)
0x00830738 bool CSkillOperateCondition_soul_saved::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x006DE6C4 void CMonRaceDB::SetTrackEnd(int,int,int,int)
0x005F2848 bool CDominionSiegeEntry::AddUser(unsigned int)
0x00572DBC bool CCubicHandler::TryToUseSkill(class CCreature*, class CObject*, class CCubic*, struct CubicActivationInfo &,struct ActivateInfo2 &,struct CubicSkillInfo *)
0x0083F4B8 bool CSkillEffect_p_physical_shield_defence_angle_all::Pump(class CCreature*, const class CSkillInfo *, int)
0x006C3588 bool CManorFuncHandler::PreCheck(void)
0x0088534C bool CUndergroundColosseum::IsRegisteredParty(unsigned int)
0x00583FA0 void CDB::RequestChangePos(wchar_t*, int,int,int,int)
0x0083BF68 bool CSkillEffect_p_crystallize::PumpStart(class CCreature &,class CCreature *, const class CSkillInfo*, enum SkillPumpStartType) const
0x0082FCBC bool CSkillOperateCondition_can_transform_in_dominion::CanUse(class CCreature*, const class CSkillInfo*, class CObject *)
0x00435430 void CAlliance::AddMemberPledge(class CPledge *)
0x00861F24 void CStaticObject::PushToThreadLocalMap(void)
0x00690EC8 int __cdecl CIOServer::Create(int)
0x0083E748 bool CSkillEffect_p_2h_blunt_bonus::Pump(class CCreature*, const class CSkillInfo*, int)
0x0057F258 void CDB::RequestDeleteExpiredItem(int)
0x006F7080 void BroadcastChannelOpened::Work(User* pUser)
0x00596E98 void CDB::RequestSaveDominion(int,int,int)
0x006535E4 void CHeroSystem::SetHeroTypeById(int,int)
0x007A5E00 void CPCParamDB::SetRegenMoveModeCPBonus(enum MoveModeEnum,double,double,double,double,double,double)
0x0045DB1C void CBlockUpsetManager::OnNpcServerClosed(void)
0x006F791C void BroadcastInterPartyMasterChat::Work(unsigned int partySid)
0x004A6690 bool BuilderCmd_BotCheckItem(class CSocket*, class User*, wchar_t *)
0x0063C530 void CFortress::SiegeStandby(void)
0x006F76F4 void BroadcastSystemMsg::Work(User* pUser)
0x007F5140 bool CPVPMatch2::Che
0x00818704 bool CSiegeAgit::IsAttackerPledge(class CPledge *)
0x00624BA4 ASYNCHRONOUS_SERIALIZE_IMPL1(CFishingController, AsyncTimerExpired, int, id)
0x00906AA0 enum ClassType *__cdecl User::GetBaseJobClass(int)
0x00951C00 bool VariationDB::IsValidCandidateItem(unsigned int)
0x0094E300 bool CheckCharacterNameDual(const WCHAR* name, int code)
0x008FF314 bool User::SummonCreature(const wchar_t*, int,const wchar_t*, __int64,int,class CSkillInfo *)
0x0058A334 void CDB::RequestAgitCost(int,int,__int64,int,long)
0x00704B2C bool CTreeLoc::UseTree(int,class FVector,int)
0x00915124 bool UserPacketEx::ReplyListPartyWaitingPacket(class CSocket *, const unsigned char *)
0x00838500 bool CSkillEffect_i_unsummon_agathion::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2 *, double)
0x005EA46C int __cdecl CDominion::EnableDominionExtends(void)
0x005FB6DC int __cdecl CDoppelganger::GetDoppelgangerSummonerSID(void) const
0x007E0878 void CPledgeMemberList::GetGradeIdCountPacket(class CPacketHelperEx16384 &)
0x004C3080 bool BuilderCmd_summon_illusion(class CSocket*, class User*, wchar_t *)
0x004A7C74 bool BuilderCmd::declare_lord(class CSocket *, class User*, wchar_t *)
0x004C9570 bool BuilderCmd_PcSearch(class CSocket*, class User*, wchar_t *)
0x006B5FEC __cdecl CBakEvent::~CBakEvent(void)
0x00602BF8 bool CDuelBuilderCmdHandler::BuilderCmd_IndividualDuelCancel(class CSocket*, class User*, wchar_t *)
0x00705BA8 void CMoveToTargetRelativeAction::SetValidPendingAction(void)
0x007CE140 bool `anonymous-namespace::OnInvalidatePledgeSkill(class std::xmapunsigned int,int,struct std::lessunsigned int,class std::xallocatorstruct std::pairunsigned int const ,int  &,class User &,unsigned int)
0x00574DE4 class CSprite *__cdecl SpriteDB::GetInfo(struct std::pairenum SpriteType,struct std::pairint,int )
0x007AFA40 void CPet::SetLevel(int)
0x0091AC9C bool AnswerJoinPartyRoomPacket(class CSocket*, const unsigned char *)
0x00745AD8 bool NpcCreatePacket(class NpcSocket*, const unsigned char *)
0x005176DC void CControlTower::SendControlTowerInfo(class CUserSocket *)
0x00531318 bool CCreature::CanUseBadSkill(class CObject*, bool)
0x006AA76C LRESULT CALLBACK GodsVoiceBox(HWND hDlg, UINT message, WPARAM wParam, LPARAM lParam)
0x0084D660 bool CSkillEffect_i_refuel_airship::Instant(class CCreature*, class CObject*, const class CSkillInfo *, class CSkillAction2*, double)
0x008665CC bool CTeamBattleAgit::RemoveEntryPledgeMember(unsigned int,unsigned int)
0x0080E030 bool CSetting::LoadMinigame(void)
0x008235F8 bool CSkillAcquireDB::CanAcquirePledgeSkill(int,int,class User *)
0x0058A5BC void CDB::RequestEndSiege(int,int)
0x004E95F4 void CCastle::SetDominion(class CDominion *)
0x008EEBFC bool User::CanDismissPledge()
0x007CE288 bool CPledge::_InvalidatePledgeSkill(class User*, unsigned int)
0x007D3854 bool CPledge::_DelPledgeSkill(class std::xmapunsigned int,int,struct std::lessunsigned int,class std::xallocatorstruct std::pairunsigned int const ,int  &,unsigned int)
0x00706E4C void CMoveActionBase::CalcMidDest(class FVector,class FVector,double,class FVector &,int &,bool &,bool &,bool,class CCreature *)
0x007D395C bool CPledge::InvalidatePledgeSkill(unsigned int)
0x00585678 void CDB::RequestLoadBattleCamp(unsigned int,int)
0x0080C220 bool CSetting::LoadData(wchar_t*, int)
0x008062B8 bool CRestrictArea::LoadScript(wchar_t*, bool)
0x00589268 void CDB::RequestNPCPickItem(int,int,int) const
0x0080E744 __cdecl CContainerIndex::CContainerIndex(class CContainerIndex &)
0x00738B24 bool NpcOlympiadFunc(class NpcSocket*, const unsigned char *)
0x007F4C50 void CPVPMatch::RegisterManagerNpcId(int)
0x007C3F0C bool CPledge::DidDeclareWar(int)
0x005A342C bool ReplyAcademyGraduateList(class CDBSocket*, const unsigned char *)
0x00458204 void CAuthSock
0x00680030 void CInstantZoneCluster::AddZone(int,class CInstantZone *)
0x00764A4C void COlympiadField::CalcPenalty(void)
0x00766C64 void COlympiadField::StatusClearMatch(int)
0x0048AD18 bool BuilderCmd_killme(class CSocket*, class User*, wchar_t *)
0x0096AFA4 void CWorld::__async_AsyncGetOffAirShip(struct CExecutionArgumentPad *)
0x0058F18C void CDB::RequestGetXMasSealAmount(class User *)
0x005B0AF0 bool ReplyAgitCost(class CDBSocket*, const unsigned char *)
0x00924EF0 bool CharacterCreatePacket(class CSocket*, const unsigned char *)
0x008FD2E0 bool User::SummonCreature(class CSummon*, int,const int,__int64,int,class CSkillInfo *)
0x00755E90 bool NpcUnregisterUserPVPMatch(class NpcSocket*, const unsigned char *)
0x006F8014 bool CMultiSellList::IsKeyItem(class CItem *)
0x009635B4 void CWorld::__async_AsyncGetOffVehicle(struct CExecutionArgumentPad *)
0x0062C510 bool CFortressBuilderCmdHandler::Handle(class CSocket*, class User*, wchar_t *)
0x008632CC LRESULT CALLBACK CStatusWnd::StatusWndProc(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)
0x00596C30 void CDB::RequestSetBotReport(class User*, int)
0x0057E9A4 bool CDB::AuthPlayFail(int,short)
0x007D97F0 bool CPledge::GetSubPledgeSkillLevel(enum PledgeType,unsigned int,int &)
0x007B550C bool CPet::Die(class CCreature *)
0x00746004 void CEnterWorldSerializer::Push(int,int,int,int,int,int,int,int,unsigned int)
0x00592324 void CDB::UpdateDefenceSiegeCount(unsigned int,unsigned int,int)
0x008478D0 bool CSkillEffect_i_restoration::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x007E4508 void OpenAllWindowPacket::ServeInternal(class User *)
0x006E9540 void CMonRaceHTML::MonRaceSell2(int,int,const unsigned char *)
0x0088ADB4 void User::ValidatePUseSpeed(void)
0x005023D8 void CCommCli::RequestClanBBSDelete(int,int)
0x005FE3BC void PartyDuel_EnterDuelZone::OperateInternal(class User*, class CPartyDuelPlayerInfo *)
0x004A4F54 bool BuilderCmd::click(class CSocket*, class User*, wchar_t *)
0x0063217C void CFortress::BroadcastSystemMessageWithName(class CPledge *, int)
0x00718788 bool CNoblessSystem::LinkNobless(class User *)
0x007FBB74 bool CResidence::IsOffendingPledge(int)
0x007CA51C void CPledge::SubPledgeLoadingCompleted(enum PledgeType)
0x0093DCC8 void CSocketLimiter::DeleteUserSocketPerMAC(__int64)
0x00590644 void CDB::RequestUreadMailCount(class User *)
0x0046A37C void CBossRecordList::Initialize(void)
0x0049D204 bool BuilderCmd_market_price(class CSocket*, class User*, wchar_t *)
0x005833B8 void CDB::RequestEnchantItem(class CItem*, class CItem*, class CItem *, int,class User*, int)
0x008F2FCC bool User::AcquireSkillByItem(const class CSkillInfo *)
0x007727B0 void COlympiadHtml::OnGameChanged(int)
0x006C22FC void CManor::LogNextManorInfo(__int64,__int64,__int64)
0x004BE56C bool BuilderCmd_set_journal(class CSocket*, class User*, wchar_t *)
0x0050A734 CCommunity::CCommunity(CUserSocket* socket, int nType)
0x0081A270 void CObserverRemains::RemoveRemains()
0x00835A70 bool CSkillEffect_i_spirit_shot::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x00552F64 void CCreature::_ForAllNeighborInLookNeighborByNPC(class CCreature*, const int,int &)
0x008DC314 bool User::HasEquippedDurationItemOnChar(void)
0x0086E10C void CThreadLocalTimer::Dispatch(class CThreadLocalTimer::CSlot*, __int64)
0x0084CBE0 bool CSkillEffect_i_betray::Instant(class CCreature*, class CObject*, const class CSkillInfo *, class CSkillAction2*, double)
0x0059191C void CDB::RequestFishingEventLoadRanking(void)
0x006B4B38 void CL2Time::NpcPingStart(void)
0x007C8A10 bool CPledge::UseNameValue(int)
0x008A626C bool User::OnDestroyItemPacket(int,__int64)
0x0091F244 bool AcquireSkillInfo(class CSocket *, const unsigned char *)
0x007F1AE4 void CPVPMatchMemberInfo::MakeListInfo(class CPacketHelperEx16384 &)
0x008177EC void CShortCut::DeleteRecipeShortCut(int)
0x0083EA2C bool CSkillEffect_p_physical_attack_by_hp1::Pump(class CCreature*, const class CSkillInfo*, int)
0x007DB710 void CPledge::LoadingCompleted(void)
0x006FA184 void CMultiSellList::SendList(class User*, class CNPC *)
0x008B907C enum HearResult User::Hear(class CObject*, const wchar_t*, const wchar_t*, int)
0x0090410C bool CUserBookmark::Teleport(class User*, int)
0x004EB60C FOR_ALL_OBJECT_IN_OBJECT_MAP === void CBattleCampDb::SetDisable(unsigned int)
0x004BF4DC bool BuilderCmd::attack(class CSocket*, class User*, wchar_t *)
0x00521378 void CCrataeCube::RegisterAllUsersToRecordBoard(void)
0x0051E218 void CCrataeCube::EndMatchByTimeOut(void)
0x00944A34 bool HtmlCmdDismissPledge(class CUserSocket *, class User*, const wchar_t*, const wchar_t *)
0x007F4D68 int __cdecl CPVPMatch::_GetRelation(class std::xmapunsigned int,class CPVPMatchMemberInfo*, struct std::lessunsigned int,class std::xallocatorstruct std::pairunsigned int const ,class CPVPMatchMemberInfo*  &,class User &,class User &)
0x0043D280 MemoControl::Disassemble(const unsigned char *packet)
0x005F8168 void CDoor::Close(bool,bool)
0x00893958 enum TransformType::Enum User::GetTransformType(void) const
0x004CE314 bool BuilderCmd_ShowAuctionList(class CSocket*, class User*, wchar_t *)
0x0047C7C0 bool BuilderCmd_show_bp(class CSocket*, class User*, wchar_t *)
0x007130B0 bool CSkillAction2::CheckAndSetReuseDelay(class CCreature*, int &)
0x004C70A4 void CThreadLocalWorldMap2100000,50000,8::BroadcastToNeighborIndex(class CObject*, int,class FVector,int,int,int,int,const char*, ...)
0x007E1C7C void CPledgeMemberList::GatherMemberInfo(class MemberInfo &,enum PledgeType)
0x005B844C bool ReplyEnchantItem(class CDBSocket*, const unsigned char *)
0x004069D8 void CTLPipeBasestruct CTL_WorldMapNode2,50000,8::CThreadPipe::Read(class CTLPipeBasestruct CTL_WorldMapNode2,50000,8::CReadCallback *)
0x00449154 bool CSharedCreatureData::SetMemoState(int,int,int)
0x00767070 void COlympiadField::AsyncUpdateUserStatus(int,int)
0x004235E8 void CAirShip::BroadCastAirShipInfo(void)
0x0048B180 bool BuilderCmd_setai(class CSocket *, class User*, wchar_t *)
0x0041B7E4 void CAirShip::MoveToLocation(int,int,bool)
0x0041BEDC void CAirShip::StopMove(bool)
0x006923B8 void CIOCriticalSection::WriteUnlock(void)
0x007DDF68 void CPledgeMemberList::SetPledge(unsigned int)
0x006589CC void ModifyTempMailFormHtmlBuilder::DisassemblePacket()
0x005FEAAC bool CIndividualDuelManagement::CheckDuelStartCondition(class User*, class User*, bool)
0x008907AC void User::ShowPreview(int,int [])
0x0076199C int __cdecl CObjectDB::GetClassIdFromName(const wchar_t *) const
0x0063AB3C void CFortressSiege::End(void)
0x0086579C void CTeamBattleAgit::OnStartInBattleField(class User*, class FVector &,bool &)
0x00535338 void CCreature::SkillTest(class CCreature &,class CSkillInfo &,int,class User &)
0x00650C4C void CGIPSocket::OnClose(void)
0x007DF310 bool CPledgeMemberList::HasAcademyStudent(unsigned int)
0x0093878C bool CObjectMapclass CUserSocket,8191,29,class RWLock::DeleteObject(int,char*, int)
0x008CB090 void User::LeaveWorld(void)
0x0085A304 void SSQSystem::SetCycleModeFlag(int)
0x00643EB4 void CGameEventMgr::_SetCurrentEventInfoAndInit(struct CGameEventMgr::EventInfo &)
0x00580998 void CDB::RequestRenameSubPledgeByNpc(class CNPC*, class User*, class CPledge*, enum PledgeType,const wchar_t *)
0x0064A694 void CGeoData::ExpandWaterSector(void)
0x00677B44 void CInstantZoneManager::AddExtraDuration(class CInstantZone*, int)
0x0080BD14 void Server::ReportSocket()
0x007D5938 void CPledge::AddMember(class User *)
0x00937ACC bool ReplyL2FriendList(class CSocket*, const unsigned char *)
0x00731564 bool NpcShowMultisellPage(class NpcSocket*, const unsigned char *)
0x0055C8A4 bool CCreature::ValidateAllOnWeapon(void)
0x0097B380 void CWorldPlaneCollision::AddServerBlock(class CAxisAlgnBB *)
0x00650314 void CGameInfoPipeline::CheckGIPFile(void)
0x005538B8 void CCreature::__async_LookNeighborByNPC(struct CExecutionArgumentPad *)
0x00872BE8 bool CTrade::SendTradableList(class User *)
0x008C3E18 bool TalkChannelCache::SubChannel::ResetCache(unsigned int)
0x0085AE68 bool SSQSystem::OnUserEnterWorld(class User *)
0x007D0E5C void CPledge::SetNewCrest(unsigned int)
0x005D3AD8 bool ReplySetAllianceCrest(class CDBSocket*, const unsigned char *)
0x0082B3AC bool SkillEnchantUntrain::Operate(class User*, int,int)
0x0059072C void CDB::RequestLoadMarketPriceList(void)
0x00453604 bool CAuctionAgit::UnCheckSendable(int)
0x00943C4C bool HtmlCmdMultiSell(class CUserSocket*, class User *, const wchar_t *, const wchar_t *)
0x005E4B54 bool DBPacketHandler::ReplyChangeSubJob(class CDBSocket*, const unsigned char *)
0x007C6514 int __cdecl CPledge::GetDbMemberCount(void)
0x0068689C __int64 CInventory::GetEtcItemCountByCrystal(enum EtcItemType,enum CrystalType)
0x00891934 void User::ImpoundHeroWeapon(void)
0x005829EC void CDB::SendDeletedSkillList(int,wchar_t *)
0x007D67D0 bool CPledge::AcquirePledgeSkillAndNotify(unsigned int,int)
0x007E4988 void Say::ServeInternal(class User *)
0x009356B4 bool TargetUserFromMenu(class CSocket*, const unsigned char *)
0x00861264 class CSharedStaticObjectData *__cdecl CSharedFactoryclass CStaticObject,class CSharedStaticObjectData,class CSharedStaticObjectConstant,&class CSharedDefine const SharedDefine_StaticObject::Add(class CStaticObject *)
0x004315E0 void CShipController::__async_Descent(struct CExecutionArgumentPad *)
0x0058F574 void CDB::StartSSQEvent(int)
0x0047C214 bool BuilderCmd_ride(class CSocket*, class User*, wchar_t *)
0x0080A53C void CSerializedDamageMessage::Clear(void)
0x0094383C bool HtmlCmdAgit(class CUserSocket*, class User*, const wchar_t*, const wchar_t *)
0x005969B8 void CDB::RequestLoadBotReportByGM(class User*, class User *)
0x00506CD0 static bool CommBBSReplyFormPacket(CCommSocket *socket, const unsigned char *packet)
0x0067C900 class CDoor *__cdecl CInstantZone::GetDoor(const wchar_t *)
0x008F5958 bool User::RequestAcquirePledgeSkill(const struct SkillAcquireInfo &,int,int,enum EtcSkillAcquireType,const unsigned char *)
0x00974400 bool CWorld::PickItem(class CItem*, class CCreature *)
0x008105D0 bool CSharedFactoryclass CAirShip,class CSharedAirShipData,class CSharedAirShipConstant,&class CSharedDefine const SharedDefine_AirShip::Push(int,int &,int)
0x004BAA94 bool BuilderCmd_create_academy(class CSocket*, class User*, wchar_t *)
0x006EDC9C void CMultiPartyCommandChannel::SetRouting(enum MPCCRoutingType,int)
0x00448A54 bool CSharedCreatureData::ResetNRFlagJournal(int,int)
0x007ACB14 bool CPet::AddItemToInventory2(class CItem *)
0x004BE8C8 bool BuilderCmd_set_journal_nr(class CSocket*, class User*, wchar_t *)
0x004323F8 void CShipController::ActionBroadcastMove(class FVector,class FVector)
0x0057128C void CCreatureController::__async_OnStopMove(struct CExecutionArgumentPad *)
0x00834AE4 bool CSkillEffect_i_pcbang_point_up::Instant(class CCreature *, class CObject *, const class CSkillInfo*, class CSkillAction2*, double)
0x006A45C8 bool CItemEquipCondition::CheckCommon(class CCreature*, class CItem *)
0x0079D404 CPartyRoomInfo& CPartyRoomInfo::operator=(const CPartyRoomInfo& rhs)
0x00889B98 bool SocialClassNS::IsNobless(class User *)
0x0090F318 bool ExitPartyMatchingWaitingRoomPacket(class CSocket*, const unsigned char *)
0x0090F0A8 bool AcceptJoinMPCC(class CSocket*, const unsigned char *)
0x00895BB8 void User::Report5YearDate(void)
0x004A47A0 bool BuilderCmd_SetCreateCharCount(class CSocket*, class User*, wchar_t *)
0x00694798 enum CrystalType CItem::GetCrysalType(const wchar_t *)
0x0076E6A4 void COlympiadSystem::SetDefaultOlympiadTerm(int)
0x004B1364 bool BuilderCmd::set_bot_rcount(class CSocket*, class User*, wchar_t *)
0x00637E50 void CFortressSiege::FinSiege(void)
0x0077FBB4 void CParty::UpdatePetWindowPacket(class CSummon *)
0x0047E4AC bool BuilderCmd_agitdecolist(class CSocket*, class User*, wchar_t *)
0x007713E4 void COlympiadEntry::AnnounceToEntry(unsigned int,enum GameRuleType)
0x00854858 bool CSkillEffect_i_rebalance_hp::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x0072F094 bool NpcGetControlTowerLevel(class NpcSocket*, const unsigned char *)
0x007B6EB0 bool CPetManager::CreatePet(class User*, class CPet *)
0x007D3214 bool CPledge::_AcquirePledgeSkillAndNotify(unsigned int,int)
0x008CC944 int __cdecl User::GetRelationTo(class User *)
0x0071F7C4 void CNPC::DropItemToInventory(double,double)
0x008097E8 void CSecureINIFileReader::Reload(const wchar_t *)
0x0054F8F0 void CCreature::SkillAction(int,bool,bool,class CItem*, const class CSkillInfo *)
0x006C5730 bool CManorPacketHandler::SetSeed(class CSocket*, const unsigned char *)
0x00573CA4 bool CCubicHandler::ActionToMaster(class CCreature*, class CCubic*, struct CubicActivationInfo &,struct ActivateInfo2 &)
0x008B8DE0 void User::Tell(unsigned int,wchar_t *)
0x009684F8 void CWorld::__async_AsyncLeaveWorld(struct CExecutionArgumentPad *)
0x00591534 void CDB::RequestSaveUserPoint(class User*, int,int)
0x006A4CA4 bool CItemEquipCondition_hero::CheckPrivate(class CCreature*, class CItem *)
0x00568C7C bool CCreature::Die(class CCreature *)
0x008F70B8 bool User::CheckForSkillAcquireList(enum EtcSkillAcquireType,const struct SkillAcquireInfo &)
0x006A1128 void CEtcItem_ORT::ReportOrt(char *caller, int line, int nWorkType)
0x0059FBB4 bool ReplyLoadAllAuctionBid(class CDBSocket *, const unsigned char *)
0x0090F7CC bool RequestViewPledgeMemberInfo(class CSocket*, const unsigned char *)
0x007C0874 __cdecl CPetitionSocket::CPetitionSocket(unsigned __int64,bool (__cdecl **)(class CPetitionSocket*, const unsigned char *))
0x00738370 bool NpcSetWeightPoint(class NpcSocket*, const unsigned char *)
0x0075AC38 void CObject::SetInZoneID(unsigned int)
0x004183EC void CAirShip::OnCannotMoveAnymorePacket(int,int,int)
0x0052C4A8 double CCreature::DecreaseCP_diff(double,bool)
0x0052BC68 double CCreature::GotDamageWithCp(class CCreature*, class CCreature*, double,bool,enum DamageTypeEnum,bool)
0x0053C41C bool CCreature::ValidateShieldDefend(void)
0x007B0F08 class CObject *__cdecl CPet::Copy(void)
0x0045BB40 double CBattleCamp::GotDamageBy(class CCreature*, double)
0x0045AF94 double CBattleCamp::AttackedBy(class CCreature*, double)
0x00518680 double CControlTower::GotDamageBy(class CCreature*, double)
0x00517268 double CControlTower::AttackedBy(class CCreature*, double)
0x007A60E0 double CPCParamDB::GetCPRegenMoveModeBonus(enum MoveModeEnum,int)
0x007A600C double CPCParamDB::GetMPRegenMoveModeBonus(enum MoveModeEnum,int)
0x004080B0 double CResidenceDecoVisible::AttackedBy(class CCreature*, double)
0x0082DE24 double L2SkillFunc::ApplyBonusToAttackDamage(double,class CCreature &,const class CSkillInfo &)
0x00496A50 bool BuilderCmd_set_castle_status(class CSocket*, class User *, wchar_t *)
0x00479068 bool BuilderCmd_xmassealinit(class CSocket*, class User*, wchar_t *)
0x007AB900 void CSummon::SendSystemMessage_Q(unsigned int,__int64)
0x008A6CE8 void User::CheckRelaxType(void)
0x0076D6F4 void COlympiadTeam::Freeze(void)
0x008E01B8 bool User::EnchantAttrItem(class CItem*, class CItem *)
0x00691760 void CGetOnVehicleIOCPMessage::OnReceive(int)
0x00837E08 bool CSkillEffect_i_defuse_trap::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x006BBE28 __L2INT64 TimeAttackBoard::GetFee(int roomNumber)
0x0083DBC4 bool CSkillEffect_p_set_cloak_slot::CheckPumpCondition(class CCreature *)
0x004BC2B0 bool BuilderCmd::vehicle_reload(class CSocket*, class User*, wchar_t *)
0x0057A938 void CCursedWeapon::BuildCmd_SetKillPoint(int)
0x004E24E0 void AddBuilderCmdAlias(wchar_t*, wchar_t *)
0x005FCCB8 void Duel_RestoreStatus::Operate(class User *, class CDuelPlayerInfo *)
0x00711D58 bool CSkillAction2::OnDamaged(class CSmartID,int)
0x0064B0F8 bool CGeoZone::IsInNoSaveBookmarkArea(const class FVector &)
0x008B8B48 void User::SayToFriend(class CSPointerclass User &,wchar_t *)
0x009248B8 void CUserSocket::ResetRelaxTime(struct _SYSTEMTIME *)
0x007FD41C void CResidence::ChangeResidenceState(enum ResidenceState)
0x008465BC bool CSkillEffect_i_summon::Instant(class CCreature*, class CObject*, const class CSkillInfo *, class CSkillAction2*, double)
0x00413A28 void CAgitHTML::AgitSaleInfo(int,int)
0x0081DA10 void CSkillInfo::CheckAndTurnOffSoulSpiritShot(class CCreature &) const
0x008385F8 bool CSkillEffect_i_compulsion_social_action::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x00594584 void CDB::RequestGetLastStartTime(int,int)
0x006DCDFC void CMiniGameAgit::StartGame(void)
0x005E6B2C void CDBSocketOp::SetInstantAnnounce(const unsigned char *)
0x0087E1B0 void CTransformCommonData::SetSkill(class std::xvectorclass CSkillInfo const*, class std::xallocatorclass CSkillInfo const* &)
0x008E07D4 bool User::_DelEquipDurationItem(class CItem *)
0x004066D4 void CAgit::OnReplyLoadAgitPacket(void)
0x004EA020 void CCastle::SetOffendingCastle(bool,class std::xvectorclass User*, class std::xallocatorclass User* &)
0x008DD990 int __cdecl User::HandlePointItemManipulation(int,int,int,int,class ItemManip [],class AtomicJob *)
0x00892058 void User::LoadPoint(int)
0x007AB514 class CObject *__cdecl CSummon::Copy(void)
0x006F6748 bool CMultiPartyCommandChannelRegistry::IsChannelOwner(CParty* party)
0x006734E0 void SendMail::ReturnMail()
0x00446468 bool AtomicDepositSSQItemEx::Do(void)
0x006A43B0 bool CItemUseCondition_requiredlevel::CheckPrivate(class CCreature*, class CItem *)
0x00840FCC bool CSkillEffect_p_mp_vampiric_attack::PumpEnd(class CCreature &,class CCreature*, const class CSkillInfo*, enum SkillPumpEndType) const
0x006E0084 void CMonRaceHTML::MonRaceError(int)
0x0067CDA8 void CInstantZoneManager::GetRimRank(void)
0x005F3FC4 void CDominion::PauseSiege(void)
0x00587154 void CDB::SendPrivateStoreCommit(class User *, class User*, __int64,int,int,char *) const
0x005765E0 bool CCubicHandler::ActionToTargetBySkill(class CCreature*, class CCubic*, struct CubicActivationInfo &,struct ActivateInfo2 &)
0x00937EA4 bool L2FriendSayPacket(class CSocket*, const unsigned char *)
0x0058D3D0 void CDB::RequestProcureCrop(int,int,class User*, int,int,char *)
0x0076C81C void COlympiadTeam::Send(const char *, ...)
0x0083BD68 bool CSkillEffect_p_remove_equip_penalty::Pump(class CCreature*, const class CSkillInfo*, int)
0x00591F6C void CDB::RequestLoadBossRecordRanking(void)
0x005319F8 void CTLPipeBasestruct CTL_WorldMapNode2,500000,8::CThreadPipe::Read(class CTLPipeBasestruct CTL_WorldMapNode2,500000,8::CReadCallback *)
0x00483514 bool BuilderCmd::_vehicle_start(void)
0x007AD140 void CPet::ValidateMeal(void)
0x008B3F74 class std::basic_stringwchar_t,struct std::char_traitswchar_t,class std::allocatorwchar_t User::GetBlockName(int)
0x009736F0 bool CWorld::MoveToRelatively(class CCreature*, class CWorldObject*, class FVector)
0x00838700 bool CSkillEffect_i_force_sitdown::Instant(class CCreature*, class CObject*, const class CSkillInfo*, class CSkillAction2*, double)
0x004B870C bool BuilderCmd_declare_clan_war(class CSocket*, class User*, wchar_t *)
0x008F94D4 void User::_OnEquipItem(class CItem *)
0x0052455C void CTLPipeBaseunsigned int,100000,8::Write(int,const unsigned int &)
0x00833070 void CSkillEffect_i_fatal_blow::CalcSuccess(class CCreature*, class CObject*, const class CSkillInfo *, class CSkillAction2 *)
0x0066CDB8 void ListBlock::ExecuteInternal()
0x0060FEFC int __cdecl CEventMatch::SetTeamLeader(int,unsigned int)
0x0086160C class CObject *__cdecl CStaticObject::Copy(void)
0x00892B54 bool User::CheckMyPledgeDeclareWar(class User *)
0x006EF794 int __cdecl CMultiPartyCommandChannel::GetMembersForTeleport(class std::xvectorclass User*, class std::xallocatorclass User* &,int)
0x00936BC4 bool RequestBlockPacket(class CSocket*, const unsigned char *)
0x004830BC bool BuilderCmd_FieldCycle(class CSocket*, class User*, wchar_t *)
0x00604E64 void CPartyDuelManagement::StartDuel(class User*, class User *)
0x00531884 bool CCreature::IsCheckBot1(int,int)
0x0059003C void CDB::RequestForwardMail(class User*, int,class CMailListParameter &)
0x0042F7C4 bool CAirShipForFree::Refuel(int,class User *)
0x0086B494 class CObject *__cdecl CTeleporter::Copy(void)
0x0089CC8C void User::MoveToNextBossRecordRound(int)
0x00659284 void ListBlockHtmlBuilder::DisassemblePacket()
0x006EEAEC void CMultiPartyCommandChannel::ShowPartyMembersInfo(class User*, class CParty *)
0x00962F68 void CWorld::__async_AsyncGetOnVehicle(struct CExecutionArgumentPad *)
0x004FEBEC bool CCleft::SelectRandomCat(enum BlueRedTeam::Enum)
0x004EC184 void CCastle::ReserveDefender(class CPledge *, int,int)
0x007F2418 bool CPVPMatch::GetRandomPos(const class std::xvectorclass FVector,class std::xallocatorclass FVector &,class FVector &)
0x007A7D4C bool CPCCafeEventMgr::GetHomeUserEventSet(void)
0x007A70E0 bool CPCCafeCouponEventMgr::LoadINIFile(struct CPCCafeCouponEventMgr::EventInfo &)
0x0069DCA8 bool CSetItem::PostLoad(void)
0x007614B4 bool CObjectDB::LoadNPCData(wchar_t *, int,bool)
0x00761EFC bool CObjectDB::LoadNPC(bool)
0x007612CC bool CObjectDB::LoadItemData(wchar_t*, int)
0x0045CED8 bool CBattleCampDb::ReserveBattleCamp(unsigned int,const class FVector &)
0x0045E04C void CBlockUpsetManager::SetReward(enum BlockUpsetRewardType::Enum,int,__int64,__int64)
0x0055D3B8 bool CCreature::AcquireSkill(int,int,bool,bool)
0x007C4C80 int __cdecl CSharedFactoryclass CPledge,class CSharedPledgeData,class CSharedPledgeConstant,&class CSharedDefine const SharedDefine_Pledge::RemoveByIndex(int)
0x004CDEF8 bool `anonymous-namespace::BuilderCommandUseSkill(class CSocket*, class User *, wchar_t*, class std::xvectorclass CObject*, class std::xallocatorclass CObject* &)
0x0085C7AC bool SSQSystem::ChangeDropGuardStatus(bool)
0x006A2008 class CObject *__cdecl CQuestItem::Copy(void)
0x005C7168 bool ReplyLoadTeamBattleAgit(class CDBSocket*, const unsigned char *)
0x006C0A9C void CManor::SetSeedData(__int64 [][10],__int64 [][7])
0x006F73F0 void ChannelDismissed::Work(unsigned int partySid)
0x008F4848 void User::CallPCVerified(long)
0x008027D4 void CExpelTimer::TimerExpired(int)
0x0092C15C bool RequestRemainTime(class CSocket*, const unsigned char *)
0x007F1840 void CPVPMatchSystem::CPVPPointTimeBlock::SetStartTime(int,int)
0x0072E6D0 bool NpcPongForCastleSiege(class NpcSocket*, const unsigned char *)
0x0076170C const wchar_t *__cdecl CObjectDB::GetAI(int) const
0x00500C98 bool CCleft::AddCleftPlayer(enum BlueRedTeam::Enum,class User &)
0x00632764 bool CFortressSiege::FlagCaptured(unsigned int)
0x0052FAC0 bool CCreature::IsTalkableDistance(class CObject *) const
0x0050A230 void CCommSocket::SendV(const char* format, va_list va)
0x0082CCD0 bool L2SkillFunc::pump_rate_by_hp(class CCreature*, const class CSkillInfo*, const bool,const double,double &,double &,const double,const enum SkillFxChangeType)
0x0053A61C bool CCreature::ValidatePHit(void)
